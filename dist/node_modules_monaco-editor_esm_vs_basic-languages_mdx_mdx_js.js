"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_mdx_mdx_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/mdx/mdx.js":
/*!**********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/mdx/mdx.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../editor/editor.api.js */ \"./node_modules/monaco-editor/esm/vs/editor/editor.api.js\");\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\r\n\r\n// src/fillers/monaco-editor-core.ts\r\nvar monaco_editor_core_exports = {};\r\n__reExport(monaco_editor_core_exports, _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__);\r\n\r\n\r\n// src/basic-languages/mdx/mdx.ts\r\nvar conf = {\r\n  comments: {\r\n    blockComment: [\"{/*\", \"*/}\"]\r\n  },\r\n  brackets: [[\"{\", \"}\"]],\r\n  autoClosingPairs: [\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" },\r\n    { open: \"\\u201C\", close: \"\\u201D\" },\r\n    { open: \"\\u2018\", close: \"\\u2019\" },\r\n    { open: \"`\", close: \"`\" },\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: \"_\", close: \"_\" },\r\n    { open: \"**\", close: \"**\" },\r\n    { open: \"<\", close: \">\" }\r\n  ],\r\n  onEnterRules: [\r\n    {\r\n      beforeText: /^\\s*- .+/,\r\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.None, appendText: \"- \" }\r\n    },\r\n    {\r\n      beforeText: /^\\s*\\+ .+/,\r\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.None, appendText: \"+ \" }\r\n    },\r\n    {\r\n      beforeText: /^\\s*\\* .+/,\r\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.None, appendText: \"* \" }\r\n    },\r\n    {\r\n      beforeText: /^> /,\r\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.None, appendText: \"> \" }\r\n    },\r\n    {\r\n      beforeText: /<\\w+/,\r\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\r\n    },\r\n    {\r\n      beforeText: /\\s+>\\s*$/,\r\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\r\n    },\r\n    {\r\n      beforeText: /<\\/\\w+>/,\r\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Outdent }\r\n    },\r\n    ...Array.from({ length: 100 }, (_, index) => ({\r\n      beforeText: new RegExp(`^${index}\\\\. .+`),\r\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.None, appendText: `${index + 1}. ` }\r\n    }))\r\n  ]\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \".mdx\",\r\n  control: /[!#()*+.[\\\\\\]_`{}\\-]/,\r\n  escapes: /\\\\@control/,\r\n  tokenizer: {\r\n    root: [\r\n      [/^---$/, { token: \"meta.content\", next: \"@frontmatter\", nextEmbedded: \"yaml\" }],\r\n      [/^\\s*import/, { token: \"keyword\", next: \"@import\", nextEmbedded: \"js\" }],\r\n      [/^\\s*export/, { token: \"keyword\", next: \"@export\", nextEmbedded: \"js\" }],\r\n      [/<\\w+/, { token: \"type.identifier\", next: \"@jsx\" }],\r\n      [/<\\/?\\w+>/, \"type.identifier\"],\r\n      [\r\n        /^(\\s*)(>*\\s*)(#{1,6}\\s)/,\r\n        [{ token: \"white\" }, { token: \"comment\" }, { token: \"keyword\", next: \"@header\" }]\r\n      ],\r\n      [/^(\\s*)(>*\\s*)([*+-])(\\s+)/, [\"white\", \"comment\", \"keyword\", \"white\"]],\r\n      [/^(\\s*)(>*\\s*)(\\d{1,9}\\.)(\\s+)/, [\"white\", \"comment\", \"number\", \"white\"]],\r\n      [/^(\\s*)(>*\\s*)(\\d{1,9}\\.)(\\s+)/, [\"white\", \"comment\", \"number\", \"white\"]],\r\n      [/^(\\s*)(>*\\s*)(-{3,}|\\*{3,}|_{3,})$/, [\"white\", \"comment\", \"keyword\"]],\r\n      [/`{3,}(\\s.*)?$/, { token: \"string\", next: \"@codeblock_backtick\" }],\r\n      [/~{3,}(\\s.*)?$/, { token: \"string\", next: \"@codeblock_tilde\" }],\r\n      [\r\n        /`{3,}(\\S+).*$/,\r\n        { token: \"string\", next: \"@codeblock_highlight_backtick\", nextEmbedded: \"$1\" }\r\n      ],\r\n      [\r\n        /~{3,}(\\S+).*$/,\r\n        { token: \"string\", next: \"@codeblock_highlight_tilde\", nextEmbedded: \"$1\" }\r\n      ],\r\n      [/^(\\s*)(-{4,})$/, [\"white\", \"comment\"]],\r\n      [/^(\\s*)(>+)/, [\"white\", \"comment\"]],\r\n      { include: \"content\" }\r\n    ],\r\n    content: [\r\n      [\r\n        /(\\[)(.+)(]\\()(.+)(\\s+\".*\")(\\))/,\r\n        [\"\", \"string.link\", \"\", \"type.identifier\", \"string.link\", \"\"]\r\n      ],\r\n      [/(\\[)(.+)(]\\()(.+)(\\))/, [\"\", \"type.identifier\", \"\", \"string.link\", \"\"]],\r\n      [/(\\[)(.+)(]\\[)(.+)(])/, [\"\", \"type.identifier\", \"\", \"type.identifier\", \"\"]],\r\n      [/(\\[)(.+)(]:\\s+)(\\S*)/, [\"\", \"type.identifier\", \"\", \"string.link\"]],\r\n      [/(\\[)(.+)(])/, [\"\", \"type.identifier\", \"\"]],\r\n      [/`.*`/, \"variable.source\"],\r\n      [/_/, { token: \"emphasis\", next: \"@emphasis_underscore\" }],\r\n      [/\\*(?!\\*)/, { token: \"emphasis\", next: \"@emphasis_asterisk\" }],\r\n      [/\\*\\*/, { token: \"strong\", next: \"@strong\" }],\r\n      [/{/, { token: \"delimiter.bracket\", next: \"@expression\", nextEmbedded: \"js\" }]\r\n    ],\r\n    import: [[/'\\s*(;|$)/, { token: \"string\", next: \"@pop\", nextEmbedded: \"@pop\" }]],\r\n    expression: [\r\n      [/{/, { token: \"delimiter.bracket\", next: \"@expression\" }],\r\n      [/}/, { token: \"delimiter.bracket\", next: \"@pop\", nextEmbedded: \"@pop\" }]\r\n    ],\r\n    export: [[/^\\s*$/, { token: \"delimiter.bracket\", next: \"@pop\", nextEmbedded: \"@pop\" }]],\r\n    jsx: [\r\n      [/\\s+/, \"\"],\r\n      [/(\\w+)(=)(\"(?:[^\"\\\\]|\\\\.)*\")/, [\"attribute.name\", \"operator\", \"string\"]],\r\n      [/(\\w+)(=)('(?:[^'\\\\]|\\\\.)*')/, [\"attribute.name\", \"operator\", \"string\"]],\r\n      [/(\\w+(?=\\s|>|={|$))/, [\"attribute.name\"]],\r\n      [/={/, { token: \"delimiter.bracket\", next: \"@expression\", nextEmbedded: \"js\" }],\r\n      [/>/, { token: \"type.identifier\", next: \"@pop\" }]\r\n    ],\r\n    header: [\r\n      [/.$/, { token: \"keyword\", next: \"@pop\" }],\r\n      { include: \"content\" },\r\n      [/./, { token: \"keyword\" }]\r\n    ],\r\n    strong: [\r\n      [/\\*\\*/, { token: \"strong\", next: \"@pop\" }],\r\n      { include: \"content\" },\r\n      [/./, { token: \"strong\" }]\r\n    ],\r\n    emphasis_underscore: [\r\n      [/_/, { token: \"emphasis\", next: \"@pop\" }],\r\n      { include: \"content\" },\r\n      [/./, { token: \"emphasis\" }]\r\n    ],\r\n    emphasis_asterisk: [\r\n      [/\\*(?!\\*)/, { token: \"emphasis\", next: \"@pop\" }],\r\n      { include: \"content\" },\r\n      [/./, { token: \"emphasis\" }]\r\n    ],\r\n    frontmatter: [[/^---$/, { token: \"meta.content\", nextEmbedded: \"@pop\", next: \"@pop\" }]],\r\n    codeblock_highlight_backtick: [\r\n      [/\\s*`{3,}\\s*$/, { token: \"string\", next: \"@pop\", nextEmbedded: \"@pop\" }],\r\n      [/.*$/, \"variable.source\"]\r\n    ],\r\n    codeblock_highlight_tilde: [\r\n      [/\\s*~{3,}\\s*$/, { token: \"string\", next: \"@pop\", nextEmbedded: \"@pop\" }],\r\n      [/.*$/, \"variable.source\"]\r\n    ],\r\n    codeblock_backtick: [\r\n      [/\\s*`{3,}\\s*$/, { token: \"string\", next: \"@pop\" }],\r\n      [/.*$/, \"variable.source\"]\r\n    ],\r\n    codeblock_tilde: [\r\n      [/\\s*~{3,}\\s*$/, { token: \"string\", next: \"@pop\" }],\r\n      [/.*$/, \"variable.source\"]\r\n    ]\r\n  }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/mdx/mdx.js\n");

/***/ })

}]);