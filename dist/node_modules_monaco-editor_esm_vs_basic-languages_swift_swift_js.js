"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_swift_swift_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js":
/*!**************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n\r\n// src/basic-languages/swift/swift.ts\r\nvar conf = {\r\n  comments: {\r\n    lineComment: \"//\",\r\n    blockComment: [\"/*\", \"*/\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" },\r\n    { open: \"`\", close: \"`\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" },\r\n    { open: \"`\", close: \"`\" }\r\n  ]\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \".swift\",\r\n  // TODO(owensd): Support the full range of unicode valid identifiers.\r\n  identifier: /[a-zA-Z_][\\w$]*/,\r\n  attributes: [\r\n    \"@GKInspectable\",\r\n    \"@IBAction\",\r\n    \"@IBDesignable\",\r\n    \"@IBInspectable\",\r\n    \"@IBOutlet\",\r\n    \"@IBSegueAction\",\r\n    \"@NSApplicationMain\",\r\n    \"@NSCopying\",\r\n    \"@NSManaged\",\r\n    \"@Sendable\",\r\n    \"@UIApplicationMain\",\r\n    \"@autoclosure\",\r\n    \"@actorIndependent\",\r\n    \"@asyncHandler\",\r\n    \"@available\",\r\n    \"@convention\",\r\n    \"@derivative\",\r\n    \"@differentiable\",\r\n    \"@discardableResult\",\r\n    \"@dynamicCallable\",\r\n    \"@dynamicMemberLookup\",\r\n    \"@escaping\",\r\n    \"@frozen\",\r\n    \"@globalActor\",\r\n    \"@inlinable\",\r\n    \"@inline\",\r\n    \"@main\",\r\n    \"@noDerivative\",\r\n    \"@nonobjc\",\r\n    \"@noreturn\",\r\n    \"@objc\",\r\n    \"@objcMembers\",\r\n    \"@preconcurrency\",\r\n    \"@propertyWrapper\",\r\n    \"@requires_stored_property_inits\",\r\n    \"@resultBuilder\",\r\n    \"@testable\",\r\n    \"@unchecked\",\r\n    \"@unknown\",\r\n    \"@usableFromInline\",\r\n    \"@warn_unqualified_access\"\r\n  ],\r\n  accessmodifiers: [\"open\", \"public\", \"internal\", \"fileprivate\", \"private\"],\r\n  keywords: [\r\n    \"#available\",\r\n    \"#colorLiteral\",\r\n    \"#column\",\r\n    \"#dsohandle\",\r\n    \"#else\",\r\n    \"#elseif\",\r\n    \"#endif\",\r\n    \"#error\",\r\n    \"#file\",\r\n    \"#fileID\",\r\n    \"#fileLiteral\",\r\n    \"#filePath\",\r\n    \"#function\",\r\n    \"#if\",\r\n    \"#imageLiteral\",\r\n    \"#keyPath\",\r\n    \"#line\",\r\n    \"#selector\",\r\n    \"#sourceLocation\",\r\n    \"#warning\",\r\n    \"Any\",\r\n    \"Protocol\",\r\n    \"Self\",\r\n    \"Type\",\r\n    \"actor\",\r\n    \"as\",\r\n    \"assignment\",\r\n    \"associatedtype\",\r\n    \"associativity\",\r\n    \"async\",\r\n    \"await\",\r\n    \"break\",\r\n    \"case\",\r\n    \"catch\",\r\n    \"class\",\r\n    \"continue\",\r\n    \"convenience\",\r\n    \"default\",\r\n    \"defer\",\r\n    \"deinit\",\r\n    \"didSet\",\r\n    \"do\",\r\n    \"dynamic\",\r\n    \"dynamicType\",\r\n    \"else\",\r\n    \"enum\",\r\n    \"extension\",\r\n    \"fallthrough\",\r\n    \"false\",\r\n    \"fileprivate\",\r\n    \"final\",\r\n    \"for\",\r\n    \"func\",\r\n    \"get\",\r\n    \"guard\",\r\n    \"higherThan\",\r\n    \"if\",\r\n    \"import\",\r\n    \"in\",\r\n    \"indirect\",\r\n    \"infix\",\r\n    \"init\",\r\n    \"inout\",\r\n    \"internal\",\r\n    \"is\",\r\n    \"isolated\",\r\n    \"lazy\",\r\n    \"left\",\r\n    \"let\",\r\n    \"lowerThan\",\r\n    \"mutating\",\r\n    \"nil\",\r\n    \"none\",\r\n    \"nonisolated\",\r\n    \"nonmutating\",\r\n    \"open\",\r\n    \"operator\",\r\n    \"optional\",\r\n    \"override\",\r\n    \"postfix\",\r\n    \"precedence\",\r\n    \"precedencegroup\",\r\n    \"prefix\",\r\n    \"private\",\r\n    \"protocol\",\r\n    \"public\",\r\n    \"repeat\",\r\n    \"required\",\r\n    \"rethrows\",\r\n    \"return\",\r\n    \"right\",\r\n    \"safe\",\r\n    \"self\",\r\n    \"set\",\r\n    \"some\",\r\n    \"static\",\r\n    \"struct\",\r\n    \"subscript\",\r\n    \"super\",\r\n    \"switch\",\r\n    \"throw\",\r\n    \"throws\",\r\n    \"true\",\r\n    \"try\",\r\n    \"typealias\",\r\n    \"unowned\",\r\n    \"unsafe\",\r\n    \"var\",\r\n    \"weak\",\r\n    \"where\",\r\n    \"while\",\r\n    \"willSet\",\r\n    \"__consuming\",\r\n    \"__owned\"\r\n  ],\r\n  symbols: /[=(){}\\[\\].,:;@#\\_&\\-<>`?!+*\\\\\\/]/,\r\n  // Moved . to operatorstart so it can be a delimiter\r\n  operatorstart: /[\\/=\\-+!*%<>&|^~?\\u00A1-\\u00A7\\u00A9\\u00AB\\u00AC\\u00AE\\u00B0-\\u00B1\\u00B6\\u00BB\\u00BF\\u00D7\\u00F7\\u2016-\\u2017\\u2020-\\u2027\\u2030-\\u203E\\u2041-\\u2053\\u2055-\\u205E\\u2190-\\u23FF\\u2500-\\u2775\\u2794-\\u2BFF\\u2E00-\\u2E7F\\u3001-\\u3003\\u3008-\\u3030]/,\r\n  operatorend: /[\\u0300-\\u036F\\u1DC0-\\u1DFF\\u20D0-\\u20FF\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uE0100-\\uE01EF]/,\r\n  operators: /(@operatorstart)((@operatorstart)|(@operatorend))*/,\r\n  // TODO(owensd): These are borrowed from C#; need to validate correctness for Swift.\r\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n  tokenizer: {\r\n    root: [\r\n      { include: \"@whitespace\" },\r\n      { include: \"@comment\" },\r\n      { include: \"@attribute\" },\r\n      { include: \"@literal\" },\r\n      { include: \"@keyword\" },\r\n      { include: \"@invokedmethod\" },\r\n      { include: \"@symbol\" }\r\n    ],\r\n    whitespace: [\r\n      [/\\s+/, \"white\"],\r\n      [/\"\"\"/, \"string.quote\", \"@endDblDocString\"]\r\n    ],\r\n    endDblDocString: [\r\n      [/[^\"]+/, \"string\"],\r\n      [/\\\\\"/, \"string\"],\r\n      [/\"\"\"/, \"string.quote\", \"@popall\"],\r\n      [/\"/, \"string\"]\r\n    ],\r\n    symbol: [\r\n      [/[{}()\\[\\]]/, \"@brackets\"],\r\n      [/[<>](?!@symbols)/, \"@brackets\"],\r\n      [/[.]/, \"delimiter\"],\r\n      [/@operators/, \"operator\"],\r\n      [/@symbols/, \"operator\"]\r\n    ],\r\n    comment: [\r\n      [/\\/\\/\\/.*$/, \"comment.doc\"],\r\n      [/\\/\\*\\*/, \"comment.doc\", \"@commentdocbody\"],\r\n      [/\\/\\/.*$/, \"comment\"],\r\n      [/\\/\\*/, \"comment\", \"@commentbody\"]\r\n    ],\r\n    commentdocbody: [\r\n      [/\\/\\*/, \"comment\", \"@commentbody\"],\r\n      [/\\*\\//, \"comment.doc\", \"@pop\"],\r\n      [/\\:[a-zA-Z]+\\:/, \"comment.doc.param\"],\r\n      [/./, \"comment.doc\"]\r\n    ],\r\n    commentbody: [\r\n      [/\\/\\*/, \"comment\", \"@commentbody\"],\r\n      [/\\*\\//, \"comment\", \"@pop\"],\r\n      [/./, \"comment\"]\r\n    ],\r\n    attribute: [\r\n      [\r\n        /@@@identifier/,\r\n        {\r\n          cases: {\r\n            \"@attributes\": \"keyword.control\",\r\n            \"@default\": \"\"\r\n          }\r\n        }\r\n      ]\r\n    ],\r\n    literal: [\r\n      [/\"/, { token: \"string.quote\", next: \"@stringlit\" }],\r\n      [/0[b]([01]_?)+/, \"number.binary\"],\r\n      [/0[o]([0-7]_?)+/, \"number.octal\"],\r\n      [/0[x]([0-9a-fA-F]_?)+([pP][\\-+](\\d_?)+)?/, \"number.hex\"],\r\n      [/(\\d_?)*\\.(\\d_?)+([eE][\\-+]?(\\d_?)+)?/, \"number.float\"],\r\n      [/(\\d_?)+/, \"number\"]\r\n    ],\r\n    stringlit: [\r\n      [/\\\\\\(/, { token: \"operator\", next: \"@interpolatedexpression\" }],\r\n      [/@escapes/, \"string\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [/\"/, { token: \"string.quote\", next: \"@pop\" }],\r\n      [/./, \"string\"]\r\n    ],\r\n    interpolatedexpression: [\r\n      [/\\(/, { token: \"operator\", next: \"@interpolatedexpression\" }],\r\n      [/\\)/, { token: \"operator\", next: \"@pop\" }],\r\n      { include: \"@literal\" },\r\n      { include: \"@keyword\" },\r\n      { include: \"@symbol\" }\r\n    ],\r\n    keyword: [\r\n      [/`/, { token: \"operator\", next: \"@escapedkeyword\" }],\r\n      [\r\n        /@identifier/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": \"keyword\",\r\n            \"[A-Z][a-zA-Z0-9$]*\": \"type.identifier\",\r\n            \"@default\": \"identifier\"\r\n          }\r\n        }\r\n      ]\r\n    ],\r\n    escapedkeyword: [\r\n      [/`/, { token: \"operator\", next: \"@pop\" }],\r\n      [/./, \"identifier\"]\r\n    ],\r\n    invokedmethod: [\r\n      [\r\n        /([.])(@identifier)/,\r\n        {\r\n          cases: {\r\n            $2: [\"delimeter\", \"type.identifier\"],\r\n            \"@default\": \"\"\r\n          }\r\n        }\r\n      ]\r\n    ]\r\n  }\r\n};\r\n\r\n/*!---------------------------------------------------------------------------------------------\r\n *  Copyright (C) David Owens II, owensd.io. All rights reserved.\r\n *--------------------------------------------------------------------------------------------*/\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/swift/swift.js\n");

/***/ })

}]);