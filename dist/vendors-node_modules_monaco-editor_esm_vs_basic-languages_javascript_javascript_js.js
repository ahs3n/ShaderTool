"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_monaco-editor_esm_vs_basic-languages_javascript_javascript_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/javascript/javascript.js":
/*!************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/javascript/javascript.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/* harmony import */ var _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../typescript/typescript.js */ \"./node_modules/monaco-editor/esm/vs/basic-languages/typescript/typescript.js\");\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n\r\n// src/basic-languages/javascript/javascript.ts\r\n\r\nvar conf = _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.conf;\r\nvar language = {\r\n  // Set defaultToken to invalid to see what you do not tokenize yet\r\n  defaultToken: \"invalid\",\r\n  tokenPostfix: \".js\",\r\n  keywords: [\r\n    \"break\",\r\n    \"case\",\r\n    \"catch\",\r\n    \"class\",\r\n    \"continue\",\r\n    \"const\",\r\n    \"constructor\",\r\n    \"debugger\",\r\n    \"default\",\r\n    \"delete\",\r\n    \"do\",\r\n    \"else\",\r\n    \"export\",\r\n    \"extends\",\r\n    \"false\",\r\n    \"finally\",\r\n    \"for\",\r\n    \"from\",\r\n    \"function\",\r\n    \"get\",\r\n    \"if\",\r\n    \"import\",\r\n    \"in\",\r\n    \"instanceof\",\r\n    \"let\",\r\n    \"new\",\r\n    \"null\",\r\n    \"return\",\r\n    \"set\",\r\n    \"static\",\r\n    \"super\",\r\n    \"switch\",\r\n    \"symbol\",\r\n    \"this\",\r\n    \"throw\",\r\n    \"true\",\r\n    \"try\",\r\n    \"typeof\",\r\n    \"undefined\",\r\n    \"var\",\r\n    \"void\",\r\n    \"while\",\r\n    \"with\",\r\n    \"yield\",\r\n    \"async\",\r\n    \"await\",\r\n    \"of\"\r\n  ],\r\n  typeKeywords: [],\r\n  operators: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.operators,\r\n  symbols: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.symbols,\r\n  escapes: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.escapes,\r\n  digits: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.digits,\r\n  octaldigits: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.octaldigits,\r\n  binarydigits: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.binarydigits,\r\n  hexdigits: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.hexdigits,\r\n  regexpctl: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.regexpctl,\r\n  regexpesc: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.regexpesc,\r\n  tokenizer: _typescript_typescript_js__WEBPACK_IMPORTED_MODULE_0__.language.tokenizer\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2phdmFzY3JpcHQvamF2YXNjcmlwdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDcUY7QUFDckYsV0FBVywyREFBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLCtEQUFVO0FBQ3ZCLFdBQVcsK0RBQVU7QUFDckIsV0FBVywrREFBVTtBQUNyQixVQUFVLCtEQUFVO0FBQ3BCLGVBQWUsK0RBQVU7QUFDekIsZ0JBQWdCLCtEQUFVO0FBQzFCLGFBQWEsK0RBQVU7QUFDdkIsYUFBYSwrREFBVTtBQUN2QixhQUFhLCtEQUFVO0FBQ3ZCLGFBQWEsK0RBQVU7QUFDdkI7QUFJRSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvamF2YXNjcmlwdC9qYXZhc2NyaXB0LmpzP2VkNzkiXSwic291cmNlc0NvbnRlbnQiOlsiLyohLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICogQ29weXJpZ2h0IChjKSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqIFZlcnNpb246IDAuNTAuMChjMzIxZDBmYmVjYjUwYWI4YTUzNjVmYTE5NjU0NzZiMGFlNjNmYzg3KVxyXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcclxuICogaHR0cHM6Ly9naXRodWIuY29tL21pY3Jvc29mdC9tb25hY28tZWRpdG9yL2Jsb2IvbWFpbi9MSUNFTlNFLnR4dFxyXG4gKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tKi9cclxuXHJcblxyXG4vLyBzcmMvYmFzaWMtbGFuZ3VhZ2VzL2phdmFzY3JpcHQvamF2YXNjcmlwdC50c1xyXG5pbXBvcnQgeyBjb25mIGFzIHRzQ29uZiwgbGFuZ3VhZ2UgYXMgdHNMYW5ndWFnZSB9IGZyb20gXCIuLi90eXBlc2NyaXB0L3R5cGVzY3JpcHQuanNcIjtcclxudmFyIGNvbmYgPSB0c0NvbmY7XHJcbnZhciBsYW5ndWFnZSA9IHtcclxuICAvLyBTZXQgZGVmYXVsdFRva2VuIHRvIGludmFsaWQgdG8gc2VlIHdoYXQgeW91IGRvIG5vdCB0b2tlbml6ZSB5ZXRcclxuICBkZWZhdWx0VG9rZW46IFwiaW52YWxpZFwiLFxyXG4gIHRva2VuUG9zdGZpeDogXCIuanNcIixcclxuICBrZXl3b3JkczogW1xyXG4gICAgXCJicmVha1wiLFxyXG4gICAgXCJjYXNlXCIsXHJcbiAgICBcImNhdGNoXCIsXHJcbiAgICBcImNsYXNzXCIsXHJcbiAgICBcImNvbnRpbnVlXCIsXHJcbiAgICBcImNvbnN0XCIsXHJcbiAgICBcImNvbnN0cnVjdG9yXCIsXHJcbiAgICBcImRlYnVnZ2VyXCIsXHJcbiAgICBcImRlZmF1bHRcIixcclxuICAgIFwiZGVsZXRlXCIsXHJcbiAgICBcImRvXCIsXHJcbiAgICBcImVsc2VcIixcclxuICAgIFwiZXhwb3J0XCIsXHJcbiAgICBcImV4dGVuZHNcIixcclxuICAgIFwiZmFsc2VcIixcclxuICAgIFwiZmluYWxseVwiLFxyXG4gICAgXCJmb3JcIixcclxuICAgIFwiZnJvbVwiLFxyXG4gICAgXCJmdW5jdGlvblwiLFxyXG4gICAgXCJnZXRcIixcclxuICAgIFwiaWZcIixcclxuICAgIFwiaW1wb3J0XCIsXHJcbiAgICBcImluXCIsXHJcbiAgICBcImluc3RhbmNlb2ZcIixcclxuICAgIFwibGV0XCIsXHJcbiAgICBcIm5ld1wiLFxyXG4gICAgXCJudWxsXCIsXHJcbiAgICBcInJldHVyblwiLFxyXG4gICAgXCJzZXRcIixcclxuICAgIFwic3RhdGljXCIsXHJcbiAgICBcInN1cGVyXCIsXHJcbiAgICBcInN3aXRjaFwiLFxyXG4gICAgXCJzeW1ib2xcIixcclxuICAgIFwidGhpc1wiLFxyXG4gICAgXCJ0aHJvd1wiLFxyXG4gICAgXCJ0cnVlXCIsXHJcbiAgICBcInRyeVwiLFxyXG4gICAgXCJ0eXBlb2ZcIixcclxuICAgIFwidW5kZWZpbmVkXCIsXHJcbiAgICBcInZhclwiLFxyXG4gICAgXCJ2b2lkXCIsXHJcbiAgICBcIndoaWxlXCIsXHJcbiAgICBcIndpdGhcIixcclxuICAgIFwieWllbGRcIixcclxuICAgIFwiYXN5bmNcIixcclxuICAgIFwiYXdhaXRcIixcclxuICAgIFwib2ZcIlxyXG4gIF0sXHJcbiAgdHlwZUtleXdvcmRzOiBbXSxcclxuICBvcGVyYXRvcnM6IHRzTGFuZ3VhZ2Uub3BlcmF0b3JzLFxyXG4gIHN5bWJvbHM6IHRzTGFuZ3VhZ2Uuc3ltYm9scyxcclxuICBlc2NhcGVzOiB0c0xhbmd1YWdlLmVzY2FwZXMsXHJcbiAgZGlnaXRzOiB0c0xhbmd1YWdlLmRpZ2l0cyxcclxuICBvY3RhbGRpZ2l0czogdHNMYW5ndWFnZS5vY3RhbGRpZ2l0cyxcclxuICBiaW5hcnlkaWdpdHM6IHRzTGFuZ3VhZ2UuYmluYXJ5ZGlnaXRzLFxyXG4gIGhleGRpZ2l0czogdHNMYW5ndWFnZS5oZXhkaWdpdHMsXHJcbiAgcmVnZXhwY3RsOiB0c0xhbmd1YWdlLnJlZ2V4cGN0bCxcclxuICByZWdleHBlc2M6IHRzTGFuZ3VhZ2UucmVnZXhwZXNjLFxyXG4gIHRva2VuaXplcjogdHNMYW5ndWFnZS50b2tlbml6ZXJcclxufTtcclxuZXhwb3J0IHtcclxuICBjb25mLFxyXG4gIGxhbmd1YWdlXHJcbn07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/javascript/javascript.js\n");

/***/ }),

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/typescript/typescript.js":
/*!************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/typescript/typescript.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../editor/editor.api.js */ \"./node_modules/monaco-editor/esm/vs/editor/editor.api.js\");\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\r\n\r\n// src/fillers/monaco-editor-core.ts\r\nvar monaco_editor_core_exports = {};\r\n__reExport(monaco_editor_core_exports, _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__);\r\n\r\n\r\n// src/basic-languages/typescript/typescript.ts\r\nvar conf = {\r\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n  comments: {\r\n    lineComment: \"//\",\r\n    blockComment: [\"/*\", \"*/\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  onEnterRules: [\r\n    {\r\n      // e.g. /** | */\r\n      beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n      afterText: /^\\s*\\*\\/$/,\r\n      action: {\r\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent,\r\n        appendText: \" * \"\r\n      }\r\n    },\r\n    {\r\n      // e.g. /** ...|\r\n      beforeText: /^\\s*\\/\\*\\*(?!\\/)([^\\*]|\\*(?!\\/))*$/,\r\n      action: {\r\n        indentAction: monaco_editor_core_exports.languages.IndentAction.None,\r\n        appendText: \" * \"\r\n      }\r\n    },\r\n    {\r\n      // e.g.  * ...|\r\n      beforeText: /^(\\t|(\\ \\ ))*\\ \\*(\\ ([^\\*]|\\*(?!\\/))*)?$/,\r\n      action: {\r\n        indentAction: monaco_editor_core_exports.languages.IndentAction.None,\r\n        appendText: \"* \"\r\n      }\r\n    },\r\n    {\r\n      // e.g.  */|\r\n      beforeText: /^(\\t|(\\ \\ ))*\\ \\*\\/\\s*$/,\r\n      action: {\r\n        indentAction: monaco_editor_core_exports.languages.IndentAction.None,\r\n        removeText: 1\r\n      }\r\n    }\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"', notIn: [\"string\"] },\r\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] },\r\n    { open: \"`\", close: \"`\", notIn: [\"string\", \"comment\"] },\r\n    { open: \"/**\", close: \" */\", notIn: [\"string\"] }\r\n  ],\r\n  folding: {\r\n    markers: {\r\n      start: new RegExp(\"^\\\\s*//\\\\s*#?region\\\\b\"),\r\n      end: new RegExp(\"^\\\\s*//\\\\s*#?endregion\\\\b\")\r\n    }\r\n  }\r\n};\r\nvar language = {\r\n  // Set defaultToken to invalid to see what you do not tokenize yet\r\n  defaultToken: \"invalid\",\r\n  tokenPostfix: \".ts\",\r\n  keywords: [\r\n    // Should match the keys of textToKeywordObj in\r\n    // https://github.com/microsoft/TypeScript/blob/master/src/compiler/scanner.ts\r\n    \"abstract\",\r\n    \"any\",\r\n    \"as\",\r\n    \"asserts\",\r\n    \"bigint\",\r\n    \"boolean\",\r\n    \"break\",\r\n    \"case\",\r\n    \"catch\",\r\n    \"class\",\r\n    \"continue\",\r\n    \"const\",\r\n    \"constructor\",\r\n    \"debugger\",\r\n    \"declare\",\r\n    \"default\",\r\n    \"delete\",\r\n    \"do\",\r\n    \"else\",\r\n    \"enum\",\r\n    \"export\",\r\n    \"extends\",\r\n    \"false\",\r\n    \"finally\",\r\n    \"for\",\r\n    \"from\",\r\n    \"function\",\r\n    \"get\",\r\n    \"if\",\r\n    \"implements\",\r\n    \"import\",\r\n    \"in\",\r\n    \"infer\",\r\n    \"instanceof\",\r\n    \"interface\",\r\n    \"is\",\r\n    \"keyof\",\r\n    \"let\",\r\n    \"module\",\r\n    \"namespace\",\r\n    \"never\",\r\n    \"new\",\r\n    \"null\",\r\n    \"number\",\r\n    \"object\",\r\n    \"out\",\r\n    \"package\",\r\n    \"private\",\r\n    \"protected\",\r\n    \"public\",\r\n    \"override\",\r\n    \"readonly\",\r\n    \"require\",\r\n    \"global\",\r\n    \"return\",\r\n    \"satisfies\",\r\n    \"set\",\r\n    \"static\",\r\n    \"string\",\r\n    \"super\",\r\n    \"switch\",\r\n    \"symbol\",\r\n    \"this\",\r\n    \"throw\",\r\n    \"true\",\r\n    \"try\",\r\n    \"type\",\r\n    \"typeof\",\r\n    \"undefined\",\r\n    \"unique\",\r\n    \"unknown\",\r\n    \"var\",\r\n    \"void\",\r\n    \"while\",\r\n    \"with\",\r\n    \"yield\",\r\n    \"async\",\r\n    \"await\",\r\n    \"of\"\r\n  ],\r\n  operators: [\r\n    \"<=\",\r\n    \">=\",\r\n    \"==\",\r\n    \"!=\",\r\n    \"===\",\r\n    \"!==\",\r\n    \"=>\",\r\n    \"+\",\r\n    \"-\",\r\n    \"**\",\r\n    \"*\",\r\n    \"/\",\r\n    \"%\",\r\n    \"++\",\r\n    \"--\",\r\n    \"<<\",\r\n    \"</\",\r\n    \">>\",\r\n    \">>>\",\r\n    \"&\",\r\n    \"|\",\r\n    \"^\",\r\n    \"!\",\r\n    \"~\",\r\n    \"&&\",\r\n    \"||\",\r\n    \"??\",\r\n    \"?\",\r\n    \":\",\r\n    \"=\",\r\n    \"+=\",\r\n    \"-=\",\r\n    \"*=\",\r\n    \"**=\",\r\n    \"/=\",\r\n    \"%=\",\r\n    \"<<=\",\r\n    \">>=\",\r\n    \">>>=\",\r\n    \"&=\",\r\n    \"|=\",\r\n    \"^=\",\r\n    \"@\"\r\n  ],\r\n  // we include these common regular expressions\r\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n  digits: /\\d+(_+\\d+)*/,\r\n  octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n  binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n  regexpctl: /[(){}\\[\\]\\$\\^|\\-*+?\\.]/,\r\n  regexpesc: /\\\\(?:[bBdDfnrstvwWn0\\\\\\/]|@regexpctl|c[A-Z]|x[0-9a-fA-F]{2}|u[0-9a-fA-F]{4})/,\r\n  // The main tokenizer for our languages\r\n  tokenizer: {\r\n    root: [[/[{}]/, \"delimiter.bracket\"], { include: \"common\" }],\r\n    common: [\r\n      // identifiers and keywords\r\n      [\r\n        /#?[a-z_$][\\w$]*/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": \"keyword\",\r\n            \"@default\": \"identifier\"\r\n          }\r\n        }\r\n      ],\r\n      [/[A-Z][\\w\\$]*/, \"type.identifier\"],\r\n      // to show class names nicely\r\n      // [/[A-Z][\\w\\$]*/, 'identifier'],\r\n      // whitespace\r\n      { include: \"@whitespace\" },\r\n      // regular expression: ensure it is terminated before beginning (otherwise it is an opeator)\r\n      [\r\n        /\\/(?=([^\\\\\\/]|\\\\.)+\\/([dgimsuy]*)(\\s*)(\\.|;|,|\\)|\\]|\\}|$))/,\r\n        { token: \"regexp\", bracket: \"@open\", next: \"@regexp\" }\r\n      ],\r\n      // delimiters and operators\r\n      [/[()\\[\\]]/, \"@brackets\"],\r\n      [/[<>](?!@symbols)/, \"@brackets\"],\r\n      [/!(?=([^=]|$))/, \"delimiter\"],\r\n      [\r\n        /@symbols/,\r\n        {\r\n          cases: {\r\n            \"@operators\": \"delimiter\",\r\n            \"@default\": \"\"\r\n          }\r\n        }\r\n      ],\r\n      // numbers\r\n      [/(@digits)[eE]([\\-+]?(@digits))?/, \"number.float\"],\r\n      [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?/, \"number.float\"],\r\n      [/0[xX](@hexdigits)n?/, \"number.hex\"],\r\n      [/0[oO]?(@octaldigits)n?/, \"number.octal\"],\r\n      [/0[bB](@binarydigits)n?/, \"number.binary\"],\r\n      [/(@digits)n?/, \"number\"],\r\n      // delimiter: after number because of .\\d floats\r\n      [/[;,.]/, \"delimiter\"],\r\n      // strings\r\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      // non-teminated string\r\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      // non-teminated string\r\n      [/\"/, \"string\", \"@string_double\"],\r\n      [/'/, \"string\", \"@string_single\"],\r\n      [/`/, \"string\", \"@string_backtick\"]\r\n    ],\r\n    whitespace: [\r\n      [/[ \\t\\r\\n]+/, \"\"],\r\n      [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@jsdoc\"],\r\n      [/\\/\\*/, \"comment\", \"@comment\"],\r\n      [/\\/\\/.*$/, \"comment\"]\r\n    ],\r\n    comment: [\r\n      [/[^\\/*]+/, \"comment\"],\r\n      [/\\*\\//, \"comment\", \"@pop\"],\r\n      [/[\\/*]/, \"comment\"]\r\n    ],\r\n    jsdoc: [\r\n      [/[^\\/*]+/, \"comment.doc\"],\r\n      [/\\*\\//, \"comment.doc\", \"@pop\"],\r\n      [/[\\/*]/, \"comment.doc\"]\r\n    ],\r\n    // We match regular expression quite precisely\r\n    regexp: [\r\n      [\r\n        /(\\{)(\\d+(?:,\\d*)?)(\\})/,\r\n        [\"regexp.escape.control\", \"regexp.escape.control\", \"regexp.escape.control\"]\r\n      ],\r\n      [\r\n        /(\\[)(\\^?)(?=(?:[^\\]\\\\\\/]|\\\\.)+)/,\r\n        [\"regexp.escape.control\", { token: \"regexp.escape.control\", next: \"@regexrange\" }]\r\n      ],\r\n      [/(\\()(\\?:|\\?=|\\?!)/, [\"regexp.escape.control\", \"regexp.escape.control\"]],\r\n      [/[()]/, \"regexp.escape.control\"],\r\n      [/@regexpctl/, \"regexp.escape.control\"],\r\n      [/[^\\\\\\/]/, \"regexp\"],\r\n      [/@regexpesc/, \"regexp.escape\"],\r\n      [/\\\\\\./, \"regexp.invalid\"],\r\n      [/(\\/)([dgimsuy]*)/, [{ token: \"regexp\", bracket: \"@close\", next: \"@pop\" }, \"keyword.other\"]]\r\n    ],\r\n    regexrange: [\r\n      [/-/, \"regexp.escape.control\"],\r\n      [/\\^/, \"regexp.invalid\"],\r\n      [/@regexpesc/, \"regexp.escape\"],\r\n      [/[^\\]]/, \"regexp\"],\r\n      [\r\n        /\\]/,\r\n        {\r\n          token: \"regexp.escape.control\",\r\n          next: \"@pop\",\r\n          bracket: \"@close\"\r\n        }\r\n      ]\r\n    ],\r\n    string_double: [\r\n      [/[^\\\\\"]+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [/\"/, \"string\", \"@pop\"]\r\n    ],\r\n    string_single: [\r\n      [/[^\\\\']+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [/'/, \"string\", \"@pop\"]\r\n    ],\r\n    string_backtick: [\r\n      [/\\$\\{/, { token: \"delimiter.bracket\", next: \"@bracketCounting\" }],\r\n      [/[^\\\\`$]+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [/`/, \"string\", \"@pop\"]\r\n    ],\r\n    bracketCounting: [\r\n      [/\\{/, \"delimiter.bracket\", \"@bracketCounting\"],\r\n      [/\\}/, \"delimiter.bracket\", \"@pop\"],\r\n      { include: \"common\" }\r\n    ]\r\n  }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/typescript/typescript.js\n");

/***/ })

}]);