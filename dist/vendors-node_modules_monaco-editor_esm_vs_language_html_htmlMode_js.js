"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_monaco-editor_esm_vs_language_html_htmlMode_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js":
/*!*********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompletionAdapter: () => (/* binding */ CompletionAdapter),\n/* harmony export */   DefinitionAdapter: () => (/* binding */ DefinitionAdapter),\n/* harmony export */   DiagnosticsAdapter: () => (/* binding */ DiagnosticsAdapter),\n/* harmony export */   DocumentColorAdapter: () => (/* binding */ DocumentColorAdapter),\n/* harmony export */   DocumentFormattingEditProvider: () => (/* binding */ DocumentFormattingEditProvider),\n/* harmony export */   DocumentHighlightAdapter: () => (/* binding */ DocumentHighlightAdapter),\n/* harmony export */   DocumentLinkAdapter: () => (/* binding */ DocumentLinkAdapter),\n/* harmony export */   DocumentRangeFormattingEditProvider: () => (/* binding */ DocumentRangeFormattingEditProvider),\n/* harmony export */   DocumentSymbolAdapter: () => (/* binding */ DocumentSymbolAdapter),\n/* harmony export */   FoldingRangeAdapter: () => (/* binding */ FoldingRangeAdapter),\n/* harmony export */   HoverAdapter: () => (/* binding */ HoverAdapter),\n/* harmony export */   ReferenceAdapter: () => (/* binding */ ReferenceAdapter),\n/* harmony export */   RenameAdapter: () => (/* binding */ RenameAdapter),\n/* harmony export */   SelectionRangeAdapter: () => (/* binding */ SelectionRangeAdapter),\n/* harmony export */   WorkerManager: () => (/* binding */ WorkerManager),\n/* harmony export */   fromPosition: () => (/* binding */ fromPosition),\n/* harmony export */   fromRange: () => (/* binding */ fromRange),\n/* harmony export */   setupMode: () => (/* binding */ setupMode),\n/* harmony export */   setupMode1: () => (/* binding */ setupMode1),\n/* harmony export */   toRange: () => (/* binding */ toRange),\n/* harmony export */   toTextEdit: () => (/* binding */ toTextEdit)\n/* harmony export */ });\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../editor/editor.api.js */ \"./node_modules/monaco-editor/esm/vs/editor/editor.api.js\");\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\r\n\r\n// src/fillers/monaco-editor-core.ts\r\nvar monaco_editor_core_exports = {};\r\n__reExport(monaco_editor_core_exports, _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__);\r\n\r\n\r\n// src/language/html/workerManager.ts\r\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1e3;\r\nvar WorkerManager = class {\r\n  constructor(defaults) {\r\n    this._defaults = defaults;\r\n    this._worker = null;\r\n    this._client = null;\r\n    this._idleCheckInterval = window.setInterval(() => this._checkIfIdle(), 30 * 1e3);\r\n    this._lastUsedTime = 0;\r\n    this._configChangeListener = this._defaults.onDidChange(() => this._stopWorker());\r\n  }\r\n  _stopWorker() {\r\n    if (this._worker) {\r\n      this._worker.dispose();\r\n      this._worker = null;\r\n    }\r\n    this._client = null;\r\n  }\r\n  dispose() {\r\n    clearInterval(this._idleCheckInterval);\r\n    this._configChangeListener.dispose();\r\n    this._stopWorker();\r\n  }\r\n  _checkIfIdle() {\r\n    if (!this._worker) {\r\n      return;\r\n    }\r\n    let timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\r\n    if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\r\n      this._stopWorker();\r\n    }\r\n  }\r\n  _getClient() {\r\n    this._lastUsedTime = Date.now();\r\n    if (!this._client) {\r\n      this._worker = monaco_editor_core_exports.editor.createWebWorker({\r\n        // module that exports the create() method and returns a `HTMLWorker` instance\r\n        moduleId: \"vs/language/html/htmlWorker\",\r\n        // passed in to the create() method\r\n        createData: {\r\n          languageSettings: this._defaults.options,\r\n          languageId: this._defaults.languageId\r\n        },\r\n        label: this._defaults.languageId\r\n      });\r\n      this._client = this._worker.getProxy();\r\n    }\r\n    return this._client;\r\n  }\r\n  getLanguageServiceWorker(...resources) {\r\n    let _client;\r\n    return this._getClient().then((client) => {\r\n      _client = client;\r\n    }).then((_) => {\r\n      if (this._worker) {\r\n        return this._worker.withSyncedResources(resources);\r\n      }\r\n    }).then((_) => _client);\r\n  }\r\n};\r\n\r\n// node_modules/vscode-languageserver-types/lib/esm/main.js\r\nvar DocumentUri;\r\n(function(DocumentUri2) {\r\n  function is(value) {\r\n    return typeof value === \"string\";\r\n  }\r\n  DocumentUri2.is = is;\r\n})(DocumentUri || (DocumentUri = {}));\r\nvar URI;\r\n(function(URI2) {\r\n  function is(value) {\r\n    return typeof value === \"string\";\r\n  }\r\n  URI2.is = is;\r\n})(URI || (URI = {}));\r\nvar integer;\r\n(function(integer2) {\r\n  integer2.MIN_VALUE = -2147483648;\r\n  integer2.MAX_VALUE = 2147483647;\r\n  function is(value) {\r\n    return typeof value === \"number\" && integer2.MIN_VALUE <= value && value <= integer2.MAX_VALUE;\r\n  }\r\n  integer2.is = is;\r\n})(integer || (integer = {}));\r\nvar uinteger;\r\n(function(uinteger2) {\r\n  uinteger2.MIN_VALUE = 0;\r\n  uinteger2.MAX_VALUE = 2147483647;\r\n  function is(value) {\r\n    return typeof value === \"number\" && uinteger2.MIN_VALUE <= value && value <= uinteger2.MAX_VALUE;\r\n  }\r\n  uinteger2.is = is;\r\n})(uinteger || (uinteger = {}));\r\nvar Position;\r\n(function(Position3) {\r\n  function create(line, character) {\r\n    if (line === Number.MAX_VALUE) {\r\n      line = uinteger.MAX_VALUE;\r\n    }\r\n    if (character === Number.MAX_VALUE) {\r\n      character = uinteger.MAX_VALUE;\r\n    }\r\n    return { line, character };\r\n  }\r\n  Position3.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\r\n  }\r\n  Position3.is = is;\r\n})(Position || (Position = {}));\r\nvar Range;\r\n(function(Range3) {\r\n  function create(one, two, three, four) {\r\n    if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\r\n      return { start: Position.create(one, two), end: Position.create(three, four) };\r\n    } else if (Position.is(one) && Position.is(two)) {\r\n      return { start: one, end: two };\r\n    } else {\r\n      throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\r\n    }\r\n  }\r\n  Range3.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n  }\r\n  Range3.is = is;\r\n})(Range || (Range = {}));\r\nvar Location;\r\n(function(Location2) {\r\n  function create(uri, range) {\r\n    return { uri, range };\r\n  }\r\n  Location2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n  }\r\n  Location2.is = is;\r\n})(Location || (Location = {}));\r\nvar LocationLink;\r\n(function(LocationLink2) {\r\n  function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n    return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\r\n  }\r\n  LocationLink2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri) && Range.is(candidate.targetSelectionRange) && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n  }\r\n  LocationLink2.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\nvar Color;\r\n(function(Color2) {\r\n  function create(red, green, blue, alpha) {\r\n    return {\r\n      red,\r\n      green,\r\n      blue,\r\n      alpha\r\n    };\r\n  }\r\n  Color2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1) && Is.numberRange(candidate.green, 0, 1) && Is.numberRange(candidate.blue, 0, 1) && Is.numberRange(candidate.alpha, 0, 1);\r\n  }\r\n  Color2.is = is;\r\n})(Color || (Color = {}));\r\nvar ColorInformation;\r\n(function(ColorInformation2) {\r\n  function create(range, color) {\r\n    return {\r\n      range,\r\n      color\r\n    };\r\n  }\r\n  ColorInformation2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\r\n  }\r\n  ColorInformation2.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\nvar ColorPresentation;\r\n(function(ColorPresentation2) {\r\n  function create(label, textEdit, additionalTextEdits) {\r\n    return {\r\n      label,\r\n      textEdit,\r\n      additionalTextEdits\r\n    };\r\n  }\r\n  ColorPresentation2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Is.string(candidate.label) && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate)) && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n  }\r\n  ColorPresentation2.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\nvar FoldingRangeKind;\r\n(function(FoldingRangeKind2) {\r\n  FoldingRangeKind2.Comment = \"comment\";\r\n  FoldingRangeKind2.Imports = \"imports\";\r\n  FoldingRangeKind2.Region = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\nvar FoldingRange;\r\n(function(FoldingRange2) {\r\n  function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\r\n    const result = {\r\n      startLine,\r\n      endLine\r\n    };\r\n    if (Is.defined(startCharacter)) {\r\n      result.startCharacter = startCharacter;\r\n    }\r\n    if (Is.defined(endCharacter)) {\r\n      result.endCharacter = endCharacter;\r\n    }\r\n    if (Is.defined(kind)) {\r\n      result.kind = kind;\r\n    }\r\n    if (Is.defined(collapsedText)) {\r\n      result.collapsedText = collapsedText;\r\n    }\r\n    return result;\r\n  }\r\n  FoldingRange2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine) && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter)) && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter)) && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n  }\r\n  FoldingRange2.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\nvar DiagnosticRelatedInformation;\r\n(function(DiagnosticRelatedInformation2) {\r\n  function create(location, message) {\r\n    return {\r\n      location,\r\n      message\r\n    };\r\n  }\r\n  DiagnosticRelatedInformation2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n  }\r\n  DiagnosticRelatedInformation2.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\nvar DiagnosticSeverity;\r\n(function(DiagnosticSeverity2) {\r\n  DiagnosticSeverity2.Error = 1;\r\n  DiagnosticSeverity2.Warning = 2;\r\n  DiagnosticSeverity2.Information = 3;\r\n  DiagnosticSeverity2.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\nvar DiagnosticTag;\r\n(function(DiagnosticTag2) {\r\n  DiagnosticTag2.Unnecessary = 1;\r\n  DiagnosticTag2.Deprecated = 2;\r\n})(DiagnosticTag || (DiagnosticTag = {}));\r\nvar CodeDescription;\r\n(function(CodeDescription2) {\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Is.string(candidate.href);\r\n  }\r\n  CodeDescription2.is = is;\r\n})(CodeDescription || (CodeDescription = {}));\r\nvar Diagnostic;\r\n(function(Diagnostic2) {\r\n  function create(range, message, severity, code, source, relatedInformation) {\r\n    let result = { range, message };\r\n    if (Is.defined(severity)) {\r\n      result.severity = severity;\r\n    }\r\n    if (Is.defined(code)) {\r\n      result.code = code;\r\n    }\r\n    if (Is.defined(source)) {\r\n      result.source = source;\r\n    }\r\n    if (Is.defined(relatedInformation)) {\r\n      result.relatedInformation = relatedInformation;\r\n    }\r\n    return result;\r\n  }\r\n  Diagnostic2.create = create;\r\n  function is(value) {\r\n    var _a;\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Range.is(candidate.range) && Is.string(candidate.message) && (Is.number(candidate.severity) || Is.undefined(candidate.severity)) && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code)) && (Is.undefined(candidate.codeDescription) || Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)) && (Is.string(candidate.source) || Is.undefined(candidate.source)) && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n  }\r\n  Diagnostic2.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\nvar Command;\r\n(function(Command2) {\r\n  function create(title, command, ...args) {\r\n    let result = { title, command };\r\n    if (Is.defined(args) && args.length > 0) {\r\n      result.arguments = args;\r\n    }\r\n    return result;\r\n  }\r\n  Command2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n  }\r\n  Command2.is = is;\r\n})(Command || (Command = {}));\r\nvar TextEdit;\r\n(function(TextEdit2) {\r\n  function replace(range, newText) {\r\n    return { range, newText };\r\n  }\r\n  TextEdit2.replace = replace;\r\n  function insert(position, newText) {\r\n    return { range: { start: position, end: position }, newText };\r\n  }\r\n  TextEdit2.insert = insert;\r\n  function del(range) {\r\n    return { range, newText: \"\" };\r\n  }\r\n  TextEdit2.del = del;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Is.string(candidate.newText) && Range.is(candidate.range);\r\n  }\r\n  TextEdit2.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\nvar ChangeAnnotation;\r\n(function(ChangeAnnotation2) {\r\n  function create(label, needsConfirmation, description) {\r\n    const result = { label };\r\n    if (needsConfirmation !== void 0) {\r\n      result.needsConfirmation = needsConfirmation;\r\n    }\r\n    if (description !== void 0) {\r\n      result.description = description;\r\n    }\r\n    return result;\r\n  }\r\n  ChangeAnnotation2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Is.string(candidate.label) && (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === void 0) && (Is.string(candidate.description) || candidate.description === void 0);\r\n  }\r\n  ChangeAnnotation2.is = is;\r\n})(ChangeAnnotation || (ChangeAnnotation = {}));\r\nvar ChangeAnnotationIdentifier;\r\n(function(ChangeAnnotationIdentifier2) {\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.string(candidate);\r\n  }\r\n  ChangeAnnotationIdentifier2.is = is;\r\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\r\nvar AnnotatedTextEdit;\r\n(function(AnnotatedTextEdit2) {\r\n  function replace(range, newText, annotation) {\r\n    return { range, newText, annotationId: annotation };\r\n  }\r\n  AnnotatedTextEdit2.replace = replace;\r\n  function insert(position, newText, annotation) {\r\n    return { range: { start: position, end: position }, newText, annotationId: annotation };\r\n  }\r\n  AnnotatedTextEdit2.insert = insert;\r\n  function del(range, annotation) {\r\n    return { range, newText: \"\", annotationId: annotation };\r\n  }\r\n  AnnotatedTextEdit2.del = del;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\r\n  }\r\n  AnnotatedTextEdit2.is = is;\r\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\r\nvar TextDocumentEdit;\r\n(function(TextDocumentEdit2) {\r\n  function create(textDocument, edits) {\r\n    return { textDocument, edits };\r\n  }\r\n  TextDocumentEdit2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument) && Array.isArray(candidate.edits);\r\n  }\r\n  TextDocumentEdit2.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nvar CreateFile;\r\n(function(CreateFile2) {\r\n  function create(uri, options, annotation) {\r\n    let result = {\r\n      kind: \"create\",\r\n      uri\r\n    };\r\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n      result.options = options;\r\n    }\r\n    if (annotation !== void 0) {\r\n      result.annotationId = annotation;\r\n    }\r\n    return result;\r\n  }\r\n  CreateFile2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return candidate && candidate.kind === \"create\" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\r\n  }\r\n  CreateFile2.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nvar RenameFile;\r\n(function(RenameFile2) {\r\n  function create(oldUri, newUri, options, annotation) {\r\n    let result = {\r\n      kind: \"rename\",\r\n      oldUri,\r\n      newUri\r\n    };\r\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n      result.options = options;\r\n    }\r\n    if (annotation !== void 0) {\r\n      result.annotationId = annotation;\r\n    }\r\n    return result;\r\n  }\r\n  RenameFile2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return candidate && candidate.kind === \"rename\" && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\r\n  }\r\n  RenameFile2.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nvar DeleteFile;\r\n(function(DeleteFile2) {\r\n  function create(uri, options, annotation) {\r\n    let result = {\r\n      kind: \"delete\",\r\n      uri\r\n    };\r\n    if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n      result.options = options;\r\n    }\r\n    if (annotation !== void 0) {\r\n      result.annotationId = annotation;\r\n    }\r\n    return result;\r\n  }\r\n  DeleteFile2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return candidate && candidate.kind === \"delete\" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\r\n  }\r\n  DeleteFile2.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nvar WorkspaceEdit;\r\n(function(WorkspaceEdit2) {\r\n  function is(value) {\r\n    let candidate = value;\r\n    return candidate && (candidate.changes !== void 0 || candidate.documentChanges !== void 0) && (candidate.documentChanges === void 0 || candidate.documentChanges.every((change) => {\r\n      if (Is.string(change.kind)) {\r\n        return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n      } else {\r\n        return TextDocumentEdit.is(change);\r\n      }\r\n    }));\r\n  }\r\n  WorkspaceEdit2.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextDocumentIdentifier;\r\n(function(TextDocumentIdentifier2) {\r\n  function create(uri) {\r\n    return { uri };\r\n  }\r\n  TextDocumentIdentifier2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.string(candidate.uri);\r\n  }\r\n  TextDocumentIdentifier2.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\nvar VersionedTextDocumentIdentifier;\r\n(function(VersionedTextDocumentIdentifier2) {\r\n  function create(uri, version) {\r\n    return { uri, version };\r\n  }\r\n  VersionedTextDocumentIdentifier2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\r\n  }\r\n  VersionedTextDocumentIdentifier2.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\nvar OptionalVersionedTextDocumentIdentifier;\r\n(function(OptionalVersionedTextDocumentIdentifier2) {\r\n  function create(uri, version) {\r\n    return { uri, version };\r\n  }\r\n  OptionalVersionedTextDocumentIdentifier2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\r\n  }\r\n  OptionalVersionedTextDocumentIdentifier2.is = is;\r\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\r\nvar TextDocumentItem;\r\n(function(TextDocumentItem2) {\r\n  function create(uri, languageId, version, text) {\r\n    return { uri, languageId, version, text };\r\n  }\r\n  TextDocumentItem2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\r\n  }\r\n  TextDocumentItem2.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\nvar MarkupKind;\r\n(function(MarkupKind2) {\r\n  MarkupKind2.PlainText = \"plaintext\";\r\n  MarkupKind2.Markdown = \"markdown\";\r\n  function is(value) {\r\n    const candidate = value;\r\n    return candidate === MarkupKind2.PlainText || candidate === MarkupKind2.Markdown;\r\n  }\r\n  MarkupKind2.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nvar MarkupContent;\r\n(function(MarkupContent2) {\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n  }\r\n  MarkupContent2.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\nvar CompletionItemKind;\r\n(function(CompletionItemKind2) {\r\n  CompletionItemKind2.Text = 1;\r\n  CompletionItemKind2.Method = 2;\r\n  CompletionItemKind2.Function = 3;\r\n  CompletionItemKind2.Constructor = 4;\r\n  CompletionItemKind2.Field = 5;\r\n  CompletionItemKind2.Variable = 6;\r\n  CompletionItemKind2.Class = 7;\r\n  CompletionItemKind2.Interface = 8;\r\n  CompletionItemKind2.Module = 9;\r\n  CompletionItemKind2.Property = 10;\r\n  CompletionItemKind2.Unit = 11;\r\n  CompletionItemKind2.Value = 12;\r\n  CompletionItemKind2.Enum = 13;\r\n  CompletionItemKind2.Keyword = 14;\r\n  CompletionItemKind2.Snippet = 15;\r\n  CompletionItemKind2.Color = 16;\r\n  CompletionItemKind2.File = 17;\r\n  CompletionItemKind2.Reference = 18;\r\n  CompletionItemKind2.Folder = 19;\r\n  CompletionItemKind2.EnumMember = 20;\r\n  CompletionItemKind2.Constant = 21;\r\n  CompletionItemKind2.Struct = 22;\r\n  CompletionItemKind2.Event = 23;\r\n  CompletionItemKind2.Operator = 24;\r\n  CompletionItemKind2.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\nvar InsertTextFormat;\r\n(function(InsertTextFormat2) {\r\n  InsertTextFormat2.PlainText = 1;\r\n  InsertTextFormat2.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\nvar CompletionItemTag;\r\n(function(CompletionItemTag2) {\r\n  CompletionItemTag2.Deprecated = 1;\r\n})(CompletionItemTag || (CompletionItemTag = {}));\r\nvar InsertReplaceEdit;\r\n(function(InsertReplaceEdit2) {\r\n  function create(newText, insert, replace) {\r\n    return { newText, insert, replace };\r\n  }\r\n  InsertReplaceEdit2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\r\n  }\r\n  InsertReplaceEdit2.is = is;\r\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\r\nvar InsertTextMode;\r\n(function(InsertTextMode2) {\r\n  InsertTextMode2.asIs = 1;\r\n  InsertTextMode2.adjustIndentation = 2;\r\n})(InsertTextMode || (InsertTextMode = {}));\r\nvar CompletionItemLabelDetails;\r\n(function(CompletionItemLabelDetails2) {\r\n  function is(value) {\r\n    const candidate = value;\r\n    return candidate && (Is.string(candidate.detail) || candidate.detail === void 0) && (Is.string(candidate.description) || candidate.description === void 0);\r\n  }\r\n  CompletionItemLabelDetails2.is = is;\r\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\r\nvar CompletionItem;\r\n(function(CompletionItem2) {\r\n  function create(label) {\r\n    return { label };\r\n  }\r\n  CompletionItem2.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\nvar CompletionList;\r\n(function(CompletionList2) {\r\n  function create(items, isIncomplete) {\r\n    return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n  }\r\n  CompletionList2.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nvar MarkedString;\r\n(function(MarkedString2) {\r\n  function fromPlainText(plainText) {\r\n    return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\");\r\n  }\r\n  MarkedString2.fromPlainText = fromPlainText;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.string(candidate) || Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value);\r\n  }\r\n  MarkedString2.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nvar Hover;\r\n(function(Hover2) {\r\n  function is(value) {\r\n    let candidate = value;\r\n    return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) || MarkedString.is(candidate.contents) || Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n  }\r\n  Hover2.is = is;\r\n})(Hover || (Hover = {}));\r\nvar ParameterInformation;\r\n(function(ParameterInformation2) {\r\n  function create(label, documentation) {\r\n    return documentation ? { label, documentation } : { label };\r\n  }\r\n  ParameterInformation2.create = create;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\nvar SignatureInformation;\r\n(function(SignatureInformation2) {\r\n  function create(label, documentation, ...parameters) {\r\n    let result = { label };\r\n    if (Is.defined(documentation)) {\r\n      result.documentation = documentation;\r\n    }\r\n    if (Is.defined(parameters)) {\r\n      result.parameters = parameters;\r\n    } else {\r\n      result.parameters = [];\r\n    }\r\n    return result;\r\n  }\r\n  SignatureInformation2.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\nvar DocumentHighlightKind;\r\n(function(DocumentHighlightKind2) {\r\n  DocumentHighlightKind2.Text = 1;\r\n  DocumentHighlightKind2.Read = 2;\r\n  DocumentHighlightKind2.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\nvar DocumentHighlight;\r\n(function(DocumentHighlight2) {\r\n  function create(range, kind) {\r\n    let result = { range };\r\n    if (Is.number(kind)) {\r\n      result.kind = kind;\r\n    }\r\n    return result;\r\n  }\r\n  DocumentHighlight2.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\nvar SymbolKind;\r\n(function(SymbolKind2) {\r\n  SymbolKind2.File = 1;\r\n  SymbolKind2.Module = 2;\r\n  SymbolKind2.Namespace = 3;\r\n  SymbolKind2.Package = 4;\r\n  SymbolKind2.Class = 5;\r\n  SymbolKind2.Method = 6;\r\n  SymbolKind2.Property = 7;\r\n  SymbolKind2.Field = 8;\r\n  SymbolKind2.Constructor = 9;\r\n  SymbolKind2.Enum = 10;\r\n  SymbolKind2.Interface = 11;\r\n  SymbolKind2.Function = 12;\r\n  SymbolKind2.Variable = 13;\r\n  SymbolKind2.Constant = 14;\r\n  SymbolKind2.String = 15;\r\n  SymbolKind2.Number = 16;\r\n  SymbolKind2.Boolean = 17;\r\n  SymbolKind2.Array = 18;\r\n  SymbolKind2.Object = 19;\r\n  SymbolKind2.Key = 20;\r\n  SymbolKind2.Null = 21;\r\n  SymbolKind2.EnumMember = 22;\r\n  SymbolKind2.Struct = 23;\r\n  SymbolKind2.Event = 24;\r\n  SymbolKind2.Operator = 25;\r\n  SymbolKind2.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nvar SymbolTag;\r\n(function(SymbolTag2) {\r\n  SymbolTag2.Deprecated = 1;\r\n})(SymbolTag || (SymbolTag = {}));\r\nvar SymbolInformation;\r\n(function(SymbolInformation2) {\r\n  function create(name, kind, range, uri, containerName) {\r\n    let result = {\r\n      name,\r\n      kind,\r\n      location: { uri, range }\r\n    };\r\n    if (containerName) {\r\n      result.containerName = containerName;\r\n    }\r\n    return result;\r\n  }\r\n  SymbolInformation2.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\nvar WorkspaceSymbol;\r\n(function(WorkspaceSymbol2) {\r\n  function create(name, kind, uri, range) {\r\n    return range !== void 0 ? { name, kind, location: { uri, range } } : { name, kind, location: { uri } };\r\n  }\r\n  WorkspaceSymbol2.create = create;\r\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\r\nvar DocumentSymbol;\r\n(function(DocumentSymbol2) {\r\n  function create(name, detail, kind, range, selectionRange, children) {\r\n    let result = {\r\n      name,\r\n      detail,\r\n      kind,\r\n      range,\r\n      selectionRange\r\n    };\r\n    if (children !== void 0) {\r\n      result.children = children;\r\n    }\r\n    return result;\r\n  }\r\n  DocumentSymbol2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return candidate && Is.string(candidate.name) && Is.number(candidate.kind) && Range.is(candidate.range) && Range.is(candidate.selectionRange) && (candidate.detail === void 0 || Is.string(candidate.detail)) && (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) && (candidate.children === void 0 || Array.isArray(candidate.children)) && (candidate.tags === void 0 || Array.isArray(candidate.tags));\r\n  }\r\n  DocumentSymbol2.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\nvar CodeActionKind;\r\n(function(CodeActionKind2) {\r\n  CodeActionKind2.Empty = \"\";\r\n  CodeActionKind2.QuickFix = \"quickfix\";\r\n  CodeActionKind2.Refactor = \"refactor\";\r\n  CodeActionKind2.RefactorExtract = \"refactor.extract\";\r\n  CodeActionKind2.RefactorInline = \"refactor.inline\";\r\n  CodeActionKind2.RefactorRewrite = \"refactor.rewrite\";\r\n  CodeActionKind2.Source = \"source\";\r\n  CodeActionKind2.SourceOrganizeImports = \"source.organizeImports\";\r\n  CodeActionKind2.SourceFixAll = \"source.fixAll\";\r\n})(CodeActionKind || (CodeActionKind = {}));\r\nvar CodeActionTriggerKind;\r\n(function(CodeActionTriggerKind2) {\r\n  CodeActionTriggerKind2.Invoked = 1;\r\n  CodeActionTriggerKind2.Automatic = 2;\r\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\r\nvar CodeActionContext;\r\n(function(CodeActionContext2) {\r\n  function create(diagnostics, only, triggerKind) {\r\n    let result = { diagnostics };\r\n    if (only !== void 0 && only !== null) {\r\n      result.only = only;\r\n    }\r\n    if (triggerKind !== void 0 && triggerKind !== null) {\r\n      result.triggerKind = triggerKind;\r\n    }\r\n    return result;\r\n  }\r\n  CodeActionContext2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string)) && (candidate.triggerKind === void 0 || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\r\n  }\r\n  CodeActionContext2.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nvar CodeAction;\r\n(function(CodeAction2) {\r\n  function create(title, kindOrCommandOrEdit, kind) {\r\n    let result = { title };\r\n    let checkKind = true;\r\n    if (typeof kindOrCommandOrEdit === \"string\") {\r\n      checkKind = false;\r\n      result.kind = kindOrCommandOrEdit;\r\n    } else if (Command.is(kindOrCommandOrEdit)) {\r\n      result.command = kindOrCommandOrEdit;\r\n    } else {\r\n      result.edit = kindOrCommandOrEdit;\r\n    }\r\n    if (checkKind && kind !== void 0) {\r\n      result.kind = kind;\r\n    }\r\n    return result;\r\n  }\r\n  CodeAction2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return candidate && Is.string(candidate.title) && (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) && (candidate.kind === void 0 || Is.string(candidate.kind)) && (candidate.edit !== void 0 || candidate.command !== void 0) && (candidate.command === void 0 || Command.is(candidate.command)) && (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) && (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n  }\r\n  CodeAction2.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\nvar CodeLens;\r\n(function(CodeLens2) {\r\n  function create(range, data) {\r\n    let result = { range };\r\n    if (Is.defined(data)) {\r\n      result.data = data;\r\n    }\r\n    return result;\r\n  }\r\n  CodeLens2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n  }\r\n  CodeLens2.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\nvar FormattingOptions;\r\n(function(FormattingOptions2) {\r\n  function create(tabSize, insertSpaces) {\r\n    return { tabSize, insertSpaces };\r\n  }\r\n  FormattingOptions2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n  }\r\n  FormattingOptions2.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\nvar DocumentLink;\r\n(function(DocumentLink2) {\r\n  function create(range, target, data) {\r\n    return { range, target, data };\r\n  }\r\n  DocumentLink2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n  }\r\n  DocumentLink2.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nvar SelectionRange;\r\n(function(SelectionRange2) {\r\n  function create(range, parent) {\r\n    return { range, parent };\r\n  }\r\n  SelectionRange2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === void 0 || SelectionRange2.is(candidate.parent));\r\n  }\r\n  SelectionRange2.is = is;\r\n})(SelectionRange || (SelectionRange = {}));\r\nvar SemanticTokenTypes;\r\n(function(SemanticTokenTypes2) {\r\n  SemanticTokenTypes2[\"namespace\"] = \"namespace\";\r\n  SemanticTokenTypes2[\"type\"] = \"type\";\r\n  SemanticTokenTypes2[\"class\"] = \"class\";\r\n  SemanticTokenTypes2[\"enum\"] = \"enum\";\r\n  SemanticTokenTypes2[\"interface\"] = \"interface\";\r\n  SemanticTokenTypes2[\"struct\"] = \"struct\";\r\n  SemanticTokenTypes2[\"typeParameter\"] = \"typeParameter\";\r\n  SemanticTokenTypes2[\"parameter\"] = \"parameter\";\r\n  SemanticTokenTypes2[\"variable\"] = \"variable\";\r\n  SemanticTokenTypes2[\"property\"] = \"property\";\r\n  SemanticTokenTypes2[\"enumMember\"] = \"enumMember\";\r\n  SemanticTokenTypes2[\"event\"] = \"event\";\r\n  SemanticTokenTypes2[\"function\"] = \"function\";\r\n  SemanticTokenTypes2[\"method\"] = \"method\";\r\n  SemanticTokenTypes2[\"macro\"] = \"macro\";\r\n  SemanticTokenTypes2[\"keyword\"] = \"keyword\";\r\n  SemanticTokenTypes2[\"modifier\"] = \"modifier\";\r\n  SemanticTokenTypes2[\"comment\"] = \"comment\";\r\n  SemanticTokenTypes2[\"string\"] = \"string\";\r\n  SemanticTokenTypes2[\"number\"] = \"number\";\r\n  SemanticTokenTypes2[\"regexp\"] = \"regexp\";\r\n  SemanticTokenTypes2[\"operator\"] = \"operator\";\r\n  SemanticTokenTypes2[\"decorator\"] = \"decorator\";\r\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\r\nvar SemanticTokenModifiers;\r\n(function(SemanticTokenModifiers2) {\r\n  SemanticTokenModifiers2[\"declaration\"] = \"declaration\";\r\n  SemanticTokenModifiers2[\"definition\"] = \"definition\";\r\n  SemanticTokenModifiers2[\"readonly\"] = \"readonly\";\r\n  SemanticTokenModifiers2[\"static\"] = \"static\";\r\n  SemanticTokenModifiers2[\"deprecated\"] = \"deprecated\";\r\n  SemanticTokenModifiers2[\"abstract\"] = \"abstract\";\r\n  SemanticTokenModifiers2[\"async\"] = \"async\";\r\n  SemanticTokenModifiers2[\"modification\"] = \"modification\";\r\n  SemanticTokenModifiers2[\"documentation\"] = \"documentation\";\r\n  SemanticTokenModifiers2[\"defaultLibrary\"] = \"defaultLibrary\";\r\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\r\nvar SemanticTokens;\r\n(function(SemanticTokens2) {\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && (candidate.resultId === void 0 || typeof candidate.resultId === \"string\") && Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === \"number\");\r\n  }\r\n  SemanticTokens2.is = is;\r\n})(SemanticTokens || (SemanticTokens = {}));\r\nvar InlineValueText;\r\n(function(InlineValueText2) {\r\n  function create(range, text) {\r\n    return { range, text };\r\n  }\r\n  InlineValueText2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\r\n  }\r\n  InlineValueText2.is = is;\r\n})(InlineValueText || (InlineValueText = {}));\r\nvar InlineValueVariableLookup;\r\n(function(InlineValueVariableLookup2) {\r\n  function create(range, variableName, caseSensitiveLookup) {\r\n    return { range, variableName, caseSensitiveLookup };\r\n  }\r\n  InlineValueVariableLookup2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup) && (Is.string(candidate.variableName) || candidate.variableName === void 0);\r\n  }\r\n  InlineValueVariableLookup2.is = is;\r\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\r\nvar InlineValueEvaluatableExpression;\r\n(function(InlineValueEvaluatableExpression2) {\r\n  function create(range, expression) {\r\n    return { range, expression };\r\n  }\r\n  InlineValueEvaluatableExpression2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && (Is.string(candidate.expression) || candidate.expression === void 0);\r\n  }\r\n  InlineValueEvaluatableExpression2.is = is;\r\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\r\nvar InlineValueContext;\r\n(function(InlineValueContext2) {\r\n  function create(frameId, stoppedLocation) {\r\n    return { frameId, stoppedLocation };\r\n  }\r\n  InlineValueContext2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.defined(candidate) && Range.is(value.stoppedLocation);\r\n  }\r\n  InlineValueContext2.is = is;\r\n})(InlineValueContext || (InlineValueContext = {}));\r\nvar InlayHintKind;\r\n(function(InlayHintKind2) {\r\n  InlayHintKind2.Type = 1;\r\n  InlayHintKind2.Parameter = 2;\r\n  function is(value) {\r\n    return value === 1 || value === 2;\r\n  }\r\n  InlayHintKind2.is = is;\r\n})(InlayHintKind || (InlayHintKind = {}));\r\nvar InlayHintLabelPart;\r\n(function(InlayHintLabelPart2) {\r\n  function create(value) {\r\n    return { value };\r\n  }\r\n  InlayHintLabelPart2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && (candidate.tooltip === void 0 || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip)) && (candidate.location === void 0 || Location.is(candidate.location)) && (candidate.command === void 0 || Command.is(candidate.command));\r\n  }\r\n  InlayHintLabelPart2.is = is;\r\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\r\nvar InlayHint;\r\n(function(InlayHint2) {\r\n  function create(position, label, kind) {\r\n    const result = { position, label };\r\n    if (kind !== void 0) {\r\n      result.kind = kind;\r\n    }\r\n    return result;\r\n  }\r\n  InlayHint2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Position.is(candidate.position) && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is)) && (candidate.kind === void 0 || InlayHintKind.is(candidate.kind)) && candidate.textEdits === void 0 || Is.typedArray(candidate.textEdits, TextEdit.is) && (candidate.tooltip === void 0 || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip)) && (candidate.paddingLeft === void 0 || Is.boolean(candidate.paddingLeft)) && (candidate.paddingRight === void 0 || Is.boolean(candidate.paddingRight));\r\n  }\r\n  InlayHint2.is = is;\r\n})(InlayHint || (InlayHint = {}));\r\nvar StringValue;\r\n(function(StringValue2) {\r\n  function createSnippet(value) {\r\n    return { kind: \"snippet\", value };\r\n  }\r\n  StringValue2.createSnippet = createSnippet;\r\n})(StringValue || (StringValue = {}));\r\nvar InlineCompletionItem;\r\n(function(InlineCompletionItem2) {\r\n  function create(insertText, filterText, range, command) {\r\n    return { insertText, filterText, range, command };\r\n  }\r\n  InlineCompletionItem2.create = create;\r\n})(InlineCompletionItem || (InlineCompletionItem = {}));\r\nvar InlineCompletionList;\r\n(function(InlineCompletionList2) {\r\n  function create(items) {\r\n    return { items };\r\n  }\r\n  InlineCompletionList2.create = create;\r\n})(InlineCompletionList || (InlineCompletionList = {}));\r\nvar InlineCompletionTriggerKind;\r\n(function(InlineCompletionTriggerKind2) {\r\n  InlineCompletionTriggerKind2.Invoked = 0;\r\n  InlineCompletionTriggerKind2.Automatic = 1;\r\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\r\nvar SelectedCompletionInfo;\r\n(function(SelectedCompletionInfo2) {\r\n  function create(range, text) {\r\n    return { range, text };\r\n  }\r\n  SelectedCompletionInfo2.create = create;\r\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\r\nvar InlineCompletionContext;\r\n(function(InlineCompletionContext2) {\r\n  function create(triggerKind, selectedCompletionInfo) {\r\n    return { triggerKind, selectedCompletionInfo };\r\n  }\r\n  InlineCompletionContext2.create = create;\r\n})(InlineCompletionContext || (InlineCompletionContext = {}));\r\nvar WorkspaceFolder;\r\n(function(WorkspaceFolder2) {\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\r\n  }\r\n  WorkspaceFolder2.is = is;\r\n})(WorkspaceFolder || (WorkspaceFolder = {}));\r\nvar TextDocument;\r\n(function(TextDocument2) {\r\n  function create(uri, languageId, version, content) {\r\n    return new FullTextDocument(uri, languageId, version, content);\r\n  }\r\n  TextDocument2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount) && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n  }\r\n  TextDocument2.is = is;\r\n  function applyEdits(document, edits) {\r\n    let text = document.getText();\r\n    let sortedEdits = mergeSort(edits, (a, b) => {\r\n      let diff = a.range.start.line - b.range.start.line;\r\n      if (diff === 0) {\r\n        return a.range.start.character - b.range.start.character;\r\n      }\r\n      return diff;\r\n    });\r\n    let lastModifiedOffset = text.length;\r\n    for (let i = sortedEdits.length - 1; i >= 0; i--) {\r\n      let e = sortedEdits[i];\r\n      let startOffset = document.offsetAt(e.range.start);\r\n      let endOffset = document.offsetAt(e.range.end);\r\n      if (endOffset <= lastModifiedOffset) {\r\n        text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n      } else {\r\n        throw new Error(\"Overlapping edit\");\r\n      }\r\n      lastModifiedOffset = startOffset;\r\n    }\r\n    return text;\r\n  }\r\n  TextDocument2.applyEdits = applyEdits;\r\n  function mergeSort(data, compare) {\r\n    if (data.length <= 1) {\r\n      return data;\r\n    }\r\n    const p = data.length / 2 | 0;\r\n    const left = data.slice(0, p);\r\n    const right = data.slice(p);\r\n    mergeSort(left, compare);\r\n    mergeSort(right, compare);\r\n    let leftIdx = 0;\r\n    let rightIdx = 0;\r\n    let i = 0;\r\n    while (leftIdx < left.length && rightIdx < right.length) {\r\n      let ret = compare(left[leftIdx], right[rightIdx]);\r\n      if (ret <= 0) {\r\n        data[i++] = left[leftIdx++];\r\n      } else {\r\n        data[i++] = right[rightIdx++];\r\n      }\r\n    }\r\n    while (leftIdx < left.length) {\r\n      data[i++] = left[leftIdx++];\r\n    }\r\n    while (rightIdx < right.length) {\r\n      data[i++] = right[rightIdx++];\r\n    }\r\n    return data;\r\n  }\r\n})(TextDocument || (TextDocument = {}));\r\nvar FullTextDocument = class {\r\n  constructor(uri, languageId, version, content) {\r\n    this._uri = uri;\r\n    this._languageId = languageId;\r\n    this._version = version;\r\n    this._content = content;\r\n    this._lineOffsets = void 0;\r\n  }\r\n  get uri() {\r\n    return this._uri;\r\n  }\r\n  get languageId() {\r\n    return this._languageId;\r\n  }\r\n  get version() {\r\n    return this._version;\r\n  }\r\n  getText(range) {\r\n    if (range) {\r\n      let start = this.offsetAt(range.start);\r\n      let end = this.offsetAt(range.end);\r\n      return this._content.substring(start, end);\r\n    }\r\n    return this._content;\r\n  }\r\n  update(event, version) {\r\n    this._content = event.text;\r\n    this._version = version;\r\n    this._lineOffsets = void 0;\r\n  }\r\n  getLineOffsets() {\r\n    if (this._lineOffsets === void 0) {\r\n      let lineOffsets = [];\r\n      let text = this._content;\r\n      let isLineStart = true;\r\n      for (let i = 0; i < text.length; i++) {\r\n        if (isLineStart) {\r\n          lineOffsets.push(i);\r\n          isLineStart = false;\r\n        }\r\n        let ch = text.charAt(i);\r\n        isLineStart = ch === \"\\r\" || ch === \"\\n\";\r\n        if (ch === \"\\r\" && i + 1 < text.length && text.charAt(i + 1) === \"\\n\") {\r\n          i++;\r\n        }\r\n      }\r\n      if (isLineStart && text.length > 0) {\r\n        lineOffsets.push(text.length);\r\n      }\r\n      this._lineOffsets = lineOffsets;\r\n    }\r\n    return this._lineOffsets;\r\n  }\r\n  positionAt(offset) {\r\n    offset = Math.max(Math.min(offset, this._content.length), 0);\r\n    let lineOffsets = this.getLineOffsets();\r\n    let low = 0, high = lineOffsets.length;\r\n    if (high === 0) {\r\n      return Position.create(0, offset);\r\n    }\r\n    while (low < high) {\r\n      let mid = Math.floor((low + high) / 2);\r\n      if (lineOffsets[mid] > offset) {\r\n        high = mid;\r\n      } else {\r\n        low = mid + 1;\r\n      }\r\n    }\r\n    let line = low - 1;\r\n    return Position.create(line, offset - lineOffsets[line]);\r\n  }\r\n  offsetAt(position) {\r\n    let lineOffsets = this.getLineOffsets();\r\n    if (position.line >= lineOffsets.length) {\r\n      return this._content.length;\r\n    } else if (position.line < 0) {\r\n      return 0;\r\n    }\r\n    let lineOffset = lineOffsets[position.line];\r\n    let nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;\r\n    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n  }\r\n  get lineCount() {\r\n    return this.getLineOffsets().length;\r\n  }\r\n};\r\nvar Is;\r\n(function(Is2) {\r\n  const toString = Object.prototype.toString;\r\n  function defined(value) {\r\n    return typeof value !== \"undefined\";\r\n  }\r\n  Is2.defined = defined;\r\n  function undefined2(value) {\r\n    return typeof value === \"undefined\";\r\n  }\r\n  Is2.undefined = undefined2;\r\n  function boolean(value) {\r\n    return value === true || value === false;\r\n  }\r\n  Is2.boolean = boolean;\r\n  function string(value) {\r\n    return toString.call(value) === \"[object String]\";\r\n  }\r\n  Is2.string = string;\r\n  function number(value) {\r\n    return toString.call(value) === \"[object Number]\";\r\n  }\r\n  Is2.number = number;\r\n  function numberRange(value, min, max) {\r\n    return toString.call(value) === \"[object Number]\" && min <= value && value <= max;\r\n  }\r\n  Is2.numberRange = numberRange;\r\n  function integer2(value) {\r\n    return toString.call(value) === \"[object Number]\" && -2147483648 <= value && value <= 2147483647;\r\n  }\r\n  Is2.integer = integer2;\r\n  function uinteger2(value) {\r\n    return toString.call(value) === \"[object Number]\" && 0 <= value && value <= 2147483647;\r\n  }\r\n  Is2.uinteger = uinteger2;\r\n  function func(value) {\r\n    return toString.call(value) === \"[object Function]\";\r\n  }\r\n  Is2.func = func;\r\n  function objectLiteral(value) {\r\n    return value !== null && typeof value === \"object\";\r\n  }\r\n  Is2.objectLiteral = objectLiteral;\r\n  function typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n  }\r\n  Is2.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n\r\n// src/language/common/lspLanguageFeatures.ts\r\nvar DiagnosticsAdapter = class {\r\n  constructor(_languageId, _worker, configChangeEvent) {\r\n    this._languageId = _languageId;\r\n    this._worker = _worker;\r\n    this._disposables = [];\r\n    this._listener = /* @__PURE__ */ Object.create(null);\r\n    const onModelAdd = (model) => {\r\n      let modeId = model.getLanguageId();\r\n      if (modeId !== this._languageId) {\r\n        return;\r\n      }\r\n      let handle;\r\n      this._listener[model.uri.toString()] = model.onDidChangeContent(() => {\r\n        window.clearTimeout(handle);\r\n        handle = window.setTimeout(() => this._doValidate(model.uri, modeId), 500);\r\n      });\r\n      this._doValidate(model.uri, modeId);\r\n    };\r\n    const onModelRemoved = (model) => {\r\n      monaco_editor_core_exports.editor.setModelMarkers(model, this._languageId, []);\r\n      let uriStr = model.uri.toString();\r\n      let listener = this._listener[uriStr];\r\n      if (listener) {\r\n        listener.dispose();\r\n        delete this._listener[uriStr];\r\n      }\r\n    };\r\n    this._disposables.push(monaco_editor_core_exports.editor.onDidCreateModel(onModelAdd));\r\n    this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\r\n    this._disposables.push(\r\n      monaco_editor_core_exports.editor.onDidChangeModelLanguage((event) => {\r\n        onModelRemoved(event.model);\r\n        onModelAdd(event.model);\r\n      })\r\n    );\r\n    this._disposables.push(\r\n      configChangeEvent((_) => {\r\n        monaco_editor_core_exports.editor.getModels().forEach((model) => {\r\n          if (model.getLanguageId() === this._languageId) {\r\n            onModelRemoved(model);\r\n            onModelAdd(model);\r\n          }\r\n        });\r\n      })\r\n    );\r\n    this._disposables.push({\r\n      dispose: () => {\r\n        monaco_editor_core_exports.editor.getModels().forEach(onModelRemoved);\r\n        for (let key in this._listener) {\r\n          this._listener[key].dispose();\r\n        }\r\n      }\r\n    });\r\n    monaco_editor_core_exports.editor.getModels().forEach(onModelAdd);\r\n  }\r\n  dispose() {\r\n    this._disposables.forEach((d) => d && d.dispose());\r\n    this._disposables.length = 0;\r\n  }\r\n  _doValidate(resource, languageId) {\r\n    this._worker(resource).then((worker) => {\r\n      return worker.doValidation(resource.toString());\r\n    }).then((diagnostics) => {\r\n      const markers = diagnostics.map((d) => toDiagnostics(resource, d));\r\n      let model = monaco_editor_core_exports.editor.getModel(resource);\r\n      if (model && model.getLanguageId() === languageId) {\r\n        monaco_editor_core_exports.editor.setModelMarkers(model, languageId, markers);\r\n      }\r\n    }).then(void 0, (err) => {\r\n      console.error(err);\r\n    });\r\n  }\r\n};\r\nfunction toSeverity(lsSeverity) {\r\n  switch (lsSeverity) {\r\n    case DiagnosticSeverity.Error:\r\n      return monaco_editor_core_exports.MarkerSeverity.Error;\r\n    case DiagnosticSeverity.Warning:\r\n      return monaco_editor_core_exports.MarkerSeverity.Warning;\r\n    case DiagnosticSeverity.Information:\r\n      return monaco_editor_core_exports.MarkerSeverity.Info;\r\n    case DiagnosticSeverity.Hint:\r\n      return monaco_editor_core_exports.MarkerSeverity.Hint;\r\n    default:\r\n      return monaco_editor_core_exports.MarkerSeverity.Info;\r\n  }\r\n}\r\nfunction toDiagnostics(resource, diag) {\r\n  let code = typeof diag.code === \"number\" ? String(diag.code) : diag.code;\r\n  return {\r\n    severity: toSeverity(diag.severity),\r\n    startLineNumber: diag.range.start.line + 1,\r\n    startColumn: diag.range.start.character + 1,\r\n    endLineNumber: diag.range.end.line + 1,\r\n    endColumn: diag.range.end.character + 1,\r\n    message: diag.message,\r\n    code,\r\n    source: diag.source\r\n  };\r\n}\r\nvar CompletionAdapter = class {\r\n  constructor(_worker, _triggerCharacters) {\r\n    this._worker = _worker;\r\n    this._triggerCharacters = _triggerCharacters;\r\n  }\r\n  get triggerCharacters() {\r\n    return this._triggerCharacters;\r\n  }\r\n  provideCompletionItems(model, position, context, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker) => {\r\n      return worker.doComplete(resource.toString(), fromPosition(position));\r\n    }).then((info) => {\r\n      if (!info) {\r\n        return;\r\n      }\r\n      const wordInfo = model.getWordUntilPosition(position);\r\n      const wordRange = new monaco_editor_core_exports.Range(\r\n        position.lineNumber,\r\n        wordInfo.startColumn,\r\n        position.lineNumber,\r\n        wordInfo.endColumn\r\n      );\r\n      const items = info.items.map((entry) => {\r\n        const item = {\r\n          label: entry.label,\r\n          insertText: entry.insertText || entry.label,\r\n          sortText: entry.sortText,\r\n          filterText: entry.filterText,\r\n          documentation: entry.documentation,\r\n          detail: entry.detail,\r\n          command: toCommand(entry.command),\r\n          range: wordRange,\r\n          kind: toCompletionItemKind(entry.kind)\r\n        };\r\n        if (entry.textEdit) {\r\n          if (isInsertReplaceEdit(entry.textEdit)) {\r\n            item.range = {\r\n              insert: toRange(entry.textEdit.insert),\r\n              replace: toRange(entry.textEdit.replace)\r\n            };\r\n          } else {\r\n            item.range = toRange(entry.textEdit.range);\r\n          }\r\n          item.insertText = entry.textEdit.newText;\r\n        }\r\n        if (entry.additionalTextEdits) {\r\n          item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\r\n        }\r\n        if (entry.insertTextFormat === InsertTextFormat.Snippet) {\r\n          item.insertTextRules = monaco_editor_core_exports.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n        }\r\n        return item;\r\n      });\r\n      return {\r\n        isIncomplete: info.isIncomplete,\r\n        suggestions: items\r\n      };\r\n    });\r\n  }\r\n};\r\nfunction fromPosition(position) {\r\n  if (!position) {\r\n    return void 0;\r\n  }\r\n  return { character: position.column - 1, line: position.lineNumber - 1 };\r\n}\r\nfunction fromRange(range) {\r\n  if (!range) {\r\n    return void 0;\r\n  }\r\n  return {\r\n    start: {\r\n      line: range.startLineNumber - 1,\r\n      character: range.startColumn - 1\r\n    },\r\n    end: { line: range.endLineNumber - 1, character: range.endColumn - 1 }\r\n  };\r\n}\r\nfunction toRange(range) {\r\n  if (!range) {\r\n    return void 0;\r\n  }\r\n  return new monaco_editor_core_exports.Range(\r\n    range.start.line + 1,\r\n    range.start.character + 1,\r\n    range.end.line + 1,\r\n    range.end.character + 1\r\n  );\r\n}\r\nfunction isInsertReplaceEdit(edit) {\r\n  return typeof edit.insert !== \"undefined\" && typeof edit.replace !== \"undefined\";\r\n}\r\nfunction toCompletionItemKind(kind) {\r\n  const mItemKind = monaco_editor_core_exports.languages.CompletionItemKind;\r\n  switch (kind) {\r\n    case CompletionItemKind.Text:\r\n      return mItemKind.Text;\r\n    case CompletionItemKind.Method:\r\n      return mItemKind.Method;\r\n    case CompletionItemKind.Function:\r\n      return mItemKind.Function;\r\n    case CompletionItemKind.Constructor:\r\n      return mItemKind.Constructor;\r\n    case CompletionItemKind.Field:\r\n      return mItemKind.Field;\r\n    case CompletionItemKind.Variable:\r\n      return mItemKind.Variable;\r\n    case CompletionItemKind.Class:\r\n      return mItemKind.Class;\r\n    case CompletionItemKind.Interface:\r\n      return mItemKind.Interface;\r\n    case CompletionItemKind.Module:\r\n      return mItemKind.Module;\r\n    case CompletionItemKind.Property:\r\n      return mItemKind.Property;\r\n    case CompletionItemKind.Unit:\r\n      return mItemKind.Unit;\r\n    case CompletionItemKind.Value:\r\n      return mItemKind.Value;\r\n    case CompletionItemKind.Enum:\r\n      return mItemKind.Enum;\r\n    case CompletionItemKind.Keyword:\r\n      return mItemKind.Keyword;\r\n    case CompletionItemKind.Snippet:\r\n      return mItemKind.Snippet;\r\n    case CompletionItemKind.Color:\r\n      return mItemKind.Color;\r\n    case CompletionItemKind.File:\r\n      return mItemKind.File;\r\n    case CompletionItemKind.Reference:\r\n      return mItemKind.Reference;\r\n  }\r\n  return mItemKind.Property;\r\n}\r\nfunction toTextEdit(textEdit) {\r\n  if (!textEdit) {\r\n    return void 0;\r\n  }\r\n  return {\r\n    range: toRange(textEdit.range),\r\n    text: textEdit.newText\r\n  };\r\n}\r\nfunction toCommand(c) {\r\n  return c && c.command === \"editor.action.triggerSuggest\" ? { id: c.command, title: c.title, arguments: c.arguments } : void 0;\r\n}\r\nvar HoverAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideHover(model, position, token) {\r\n    let resource = model.uri;\r\n    return this._worker(resource).then((worker) => {\r\n      return worker.doHover(resource.toString(), fromPosition(position));\r\n    }).then((info) => {\r\n      if (!info) {\r\n        return;\r\n      }\r\n      return {\r\n        range: toRange(info.range),\r\n        contents: toMarkedStringArray(info.contents)\r\n      };\r\n    });\r\n  }\r\n};\r\nfunction isMarkupContent(thing) {\r\n  return thing && typeof thing === \"object\" && typeof thing.kind === \"string\";\r\n}\r\nfunction toMarkdownString(entry) {\r\n  if (typeof entry === \"string\") {\r\n    return {\r\n      value: entry\r\n    };\r\n  }\r\n  if (isMarkupContent(entry)) {\r\n    if (entry.kind === \"plaintext\") {\r\n      return {\r\n        value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\")\r\n      };\r\n    }\r\n    return {\r\n      value: entry.value\r\n    };\r\n  }\r\n  return { value: \"```\" + entry.language + \"\\n\" + entry.value + \"\\n```\\n\" };\r\n}\r\nfunction toMarkedStringArray(contents) {\r\n  if (!contents) {\r\n    return void 0;\r\n  }\r\n  if (Array.isArray(contents)) {\r\n    return contents.map(toMarkdownString);\r\n  }\r\n  return [toMarkdownString(contents)];\r\n}\r\nvar DocumentHighlightAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideDocumentHighlights(model, position, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker) => worker.findDocumentHighlights(resource.toString(), fromPosition(position))).then((entries) => {\r\n      if (!entries) {\r\n        return;\r\n      }\r\n      return entries.map((entry) => {\r\n        return {\r\n          range: toRange(entry.range),\r\n          kind: toDocumentHighlightKind(entry.kind)\r\n        };\r\n      });\r\n    });\r\n  }\r\n};\r\nfunction toDocumentHighlightKind(kind) {\r\n  switch (kind) {\r\n    case DocumentHighlightKind.Read:\r\n      return monaco_editor_core_exports.languages.DocumentHighlightKind.Read;\r\n    case DocumentHighlightKind.Write:\r\n      return monaco_editor_core_exports.languages.DocumentHighlightKind.Write;\r\n    case DocumentHighlightKind.Text:\r\n      return monaco_editor_core_exports.languages.DocumentHighlightKind.Text;\r\n  }\r\n  return monaco_editor_core_exports.languages.DocumentHighlightKind.Text;\r\n}\r\nvar DefinitionAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideDefinition(model, position, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker) => {\r\n      return worker.findDefinition(resource.toString(), fromPosition(position));\r\n    }).then((definition) => {\r\n      if (!definition) {\r\n        return;\r\n      }\r\n      return [toLocation(definition)];\r\n    });\r\n  }\r\n};\r\nfunction toLocation(location) {\r\n  return {\r\n    uri: monaco_editor_core_exports.Uri.parse(location.uri),\r\n    range: toRange(location.range)\r\n  };\r\n}\r\nvar ReferenceAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideReferences(model, position, context, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker) => {\r\n      return worker.findReferences(resource.toString(), fromPosition(position));\r\n    }).then((entries) => {\r\n      if (!entries) {\r\n        return;\r\n      }\r\n      return entries.map(toLocation);\r\n    });\r\n  }\r\n};\r\nvar RenameAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideRenameEdits(model, position, newName, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker) => {\r\n      return worker.doRename(resource.toString(), fromPosition(position), newName);\r\n    }).then((edit) => {\r\n      return toWorkspaceEdit(edit);\r\n    });\r\n  }\r\n};\r\nfunction toWorkspaceEdit(edit) {\r\n  if (!edit || !edit.changes) {\r\n    return void 0;\r\n  }\r\n  let resourceEdits = [];\r\n  for (let uri in edit.changes) {\r\n    const _uri = monaco_editor_core_exports.Uri.parse(uri);\r\n    for (let e of edit.changes[uri]) {\r\n      resourceEdits.push({\r\n        resource: _uri,\r\n        versionId: void 0,\r\n        textEdit: {\r\n          range: toRange(e.range),\r\n          text: e.newText\r\n        }\r\n      });\r\n    }\r\n  }\r\n  return {\r\n    edits: resourceEdits\r\n  };\r\n}\r\nvar DocumentSymbolAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideDocumentSymbols(model, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker) => worker.findDocumentSymbols(resource.toString())).then((items) => {\r\n      if (!items) {\r\n        return;\r\n      }\r\n      return items.map((item) => {\r\n        if (isDocumentSymbol(item)) {\r\n          return toDocumentSymbol(item);\r\n        }\r\n        return {\r\n          name: item.name,\r\n          detail: \"\",\r\n          containerName: item.containerName,\r\n          kind: toSymbolKind(item.kind),\r\n          range: toRange(item.location.range),\r\n          selectionRange: toRange(item.location.range),\r\n          tags: []\r\n        };\r\n      });\r\n    });\r\n  }\r\n};\r\nfunction isDocumentSymbol(symbol) {\r\n  return \"children\" in symbol;\r\n}\r\nfunction toDocumentSymbol(symbol) {\r\n  return {\r\n    name: symbol.name,\r\n    detail: symbol.detail ?? \"\",\r\n    kind: toSymbolKind(symbol.kind),\r\n    range: toRange(symbol.range),\r\n    selectionRange: toRange(symbol.selectionRange),\r\n    tags: symbol.tags ?? [],\r\n    children: (symbol.children ?? []).map((item) => toDocumentSymbol(item))\r\n  };\r\n}\r\nfunction toSymbolKind(kind) {\r\n  let mKind = monaco_editor_core_exports.languages.SymbolKind;\r\n  switch (kind) {\r\n    case SymbolKind.File:\r\n      return mKind.File;\r\n    case SymbolKind.Module:\r\n      return mKind.Module;\r\n    case SymbolKind.Namespace:\r\n      return mKind.Namespace;\r\n    case SymbolKind.Package:\r\n      return mKind.Package;\r\n    case SymbolKind.Class:\r\n      return mKind.Class;\r\n    case SymbolKind.Method:\r\n      return mKind.Method;\r\n    case SymbolKind.Property:\r\n      return mKind.Property;\r\n    case SymbolKind.Field:\r\n      return mKind.Field;\r\n    case SymbolKind.Constructor:\r\n      return mKind.Constructor;\r\n    case SymbolKind.Enum:\r\n      return mKind.Enum;\r\n    case SymbolKind.Interface:\r\n      return mKind.Interface;\r\n    case SymbolKind.Function:\r\n      return mKind.Function;\r\n    case SymbolKind.Variable:\r\n      return mKind.Variable;\r\n    case SymbolKind.Constant:\r\n      return mKind.Constant;\r\n    case SymbolKind.String:\r\n      return mKind.String;\r\n    case SymbolKind.Number:\r\n      return mKind.Number;\r\n    case SymbolKind.Boolean:\r\n      return mKind.Boolean;\r\n    case SymbolKind.Array:\r\n      return mKind.Array;\r\n  }\r\n  return mKind.Function;\r\n}\r\nvar DocumentLinkAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideLinks(model, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker) => worker.findDocumentLinks(resource.toString())).then((items) => {\r\n      if (!items) {\r\n        return;\r\n      }\r\n      return {\r\n        links: items.map((item) => ({\r\n          range: toRange(item.range),\r\n          url: item.target\r\n        }))\r\n      };\r\n    });\r\n  }\r\n};\r\nvar DocumentFormattingEditProvider = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideDocumentFormattingEdits(model, options, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker) => {\r\n      return worker.format(resource.toString(), null, fromFormattingOptions(options)).then((edits) => {\r\n        if (!edits || edits.length === 0) {\r\n          return;\r\n        }\r\n        return edits.map(toTextEdit);\r\n      });\r\n    });\r\n  }\r\n};\r\nvar DocumentRangeFormattingEditProvider = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n    this.canFormatMultipleRanges = false;\r\n  }\r\n  provideDocumentRangeFormattingEdits(model, range, options, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker) => {\r\n      return worker.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then((edits) => {\r\n        if (!edits || edits.length === 0) {\r\n          return;\r\n        }\r\n        return edits.map(toTextEdit);\r\n      });\r\n    });\r\n  }\r\n};\r\nfunction fromFormattingOptions(options) {\r\n  return {\r\n    tabSize: options.tabSize,\r\n    insertSpaces: options.insertSpaces\r\n  };\r\n}\r\nvar DocumentColorAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideDocumentColors(model, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker) => worker.findDocumentColors(resource.toString())).then((infos) => {\r\n      if (!infos) {\r\n        return;\r\n      }\r\n      return infos.map((item) => ({\r\n        color: item.color,\r\n        range: toRange(item.range)\r\n      }));\r\n    });\r\n  }\r\n  provideColorPresentations(model, info, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then(\r\n      (worker) => worker.getColorPresentations(resource.toString(), info.color, fromRange(info.range))\r\n    ).then((presentations) => {\r\n      if (!presentations) {\r\n        return;\r\n      }\r\n      return presentations.map((presentation) => {\r\n        let item = {\r\n          label: presentation.label\r\n        };\r\n        if (presentation.textEdit) {\r\n          item.textEdit = toTextEdit(presentation.textEdit);\r\n        }\r\n        if (presentation.additionalTextEdits) {\r\n          item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\r\n        }\r\n        return item;\r\n      });\r\n    });\r\n  }\r\n};\r\nvar FoldingRangeAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideFoldingRanges(model, context, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker) => worker.getFoldingRanges(resource.toString(), context)).then((ranges) => {\r\n      if (!ranges) {\r\n        return;\r\n      }\r\n      return ranges.map((range) => {\r\n        const result = {\r\n          start: range.startLine + 1,\r\n          end: range.endLine + 1\r\n        };\r\n        if (typeof range.kind !== \"undefined\") {\r\n          result.kind = toFoldingRangeKind(range.kind);\r\n        }\r\n        return result;\r\n      });\r\n    });\r\n  }\r\n};\r\nfunction toFoldingRangeKind(kind) {\r\n  switch (kind) {\r\n    case FoldingRangeKind.Comment:\r\n      return monaco_editor_core_exports.languages.FoldingRangeKind.Comment;\r\n    case FoldingRangeKind.Imports:\r\n      return monaco_editor_core_exports.languages.FoldingRangeKind.Imports;\r\n    case FoldingRangeKind.Region:\r\n      return monaco_editor_core_exports.languages.FoldingRangeKind.Region;\r\n  }\r\n  return void 0;\r\n}\r\nvar SelectionRangeAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideSelectionRanges(model, positions, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then(\r\n      (worker) => worker.getSelectionRanges(\r\n        resource.toString(),\r\n        positions.map(fromPosition)\r\n      )\r\n    ).then((selectionRanges) => {\r\n      if (!selectionRanges) {\r\n        return;\r\n      }\r\n      return selectionRanges.map((selectionRange) => {\r\n        const result = [];\r\n        while (selectionRange) {\r\n          result.push({ range: toRange(selectionRange.range) });\r\n          selectionRange = selectionRange.parent;\r\n        }\r\n        return result;\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// src/language/html/htmlMode.ts\r\nvar HTMLCompletionAdapter = class extends CompletionAdapter {\r\n  constructor(worker) {\r\n    super(worker, [\".\", \":\", \"<\", '\"', \"=\", \"/\"]);\r\n  }\r\n};\r\nfunction setupMode1(defaults) {\r\n  const client = new WorkerManager(defaults);\r\n  const worker = (...uris) => {\r\n    return client.getLanguageServiceWorker(...uris);\r\n  };\r\n  let languageId = defaults.languageId;\r\n  monaco_editor_core_exports.languages.registerCompletionItemProvider(languageId, new HTMLCompletionAdapter(worker));\r\n  monaco_editor_core_exports.languages.registerHoverProvider(languageId, new HoverAdapter(worker));\r\n  monaco_editor_core_exports.languages.registerDocumentHighlightProvider(\r\n    languageId,\r\n    new DocumentHighlightAdapter(worker)\r\n  );\r\n  monaco_editor_core_exports.languages.registerLinkProvider(languageId, new DocumentLinkAdapter(worker));\r\n  monaco_editor_core_exports.languages.registerFoldingRangeProvider(\r\n    languageId,\r\n    new FoldingRangeAdapter(worker)\r\n  );\r\n  monaco_editor_core_exports.languages.registerDocumentSymbolProvider(\r\n    languageId,\r\n    new DocumentSymbolAdapter(worker)\r\n  );\r\n  monaco_editor_core_exports.languages.registerSelectionRangeProvider(\r\n    languageId,\r\n    new SelectionRangeAdapter(worker)\r\n  );\r\n  monaco_editor_core_exports.languages.registerRenameProvider(languageId, new RenameAdapter(worker));\r\n  if (languageId === \"html\") {\r\n    monaco_editor_core_exports.languages.registerDocumentFormattingEditProvider(\r\n      languageId,\r\n      new DocumentFormattingEditProvider(worker)\r\n    );\r\n    monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(\r\n      languageId,\r\n      new DocumentRangeFormattingEditProvider(worker)\r\n    );\r\n  }\r\n}\r\nfunction setupMode(defaults) {\r\n  const disposables = [];\r\n  const providers = [];\r\n  const client = new WorkerManager(defaults);\r\n  disposables.push(client);\r\n  const worker = (...uris) => {\r\n    return client.getLanguageServiceWorker(...uris);\r\n  };\r\n  function registerProviders() {\r\n    const { languageId, modeConfiguration } = defaults;\r\n    disposeAll(providers);\r\n    if (modeConfiguration.completionItems) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerCompletionItemProvider(languageId, new HTMLCompletionAdapter(worker))\r\n      );\r\n    }\r\n    if (modeConfiguration.hovers) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerHoverProvider(languageId, new HoverAdapter(worker))\r\n      );\r\n    }\r\n    if (modeConfiguration.documentHighlights) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerDocumentHighlightProvider(\r\n          languageId,\r\n          new DocumentHighlightAdapter(worker)\r\n        )\r\n      );\r\n    }\r\n    if (modeConfiguration.links) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerLinkProvider(languageId, new DocumentLinkAdapter(worker))\r\n      );\r\n    }\r\n    if (modeConfiguration.documentSymbols) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerDocumentSymbolProvider(\r\n          languageId,\r\n          new DocumentSymbolAdapter(worker)\r\n        )\r\n      );\r\n    }\r\n    if (modeConfiguration.rename) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerRenameProvider(languageId, new RenameAdapter(worker))\r\n      );\r\n    }\r\n    if (modeConfiguration.foldingRanges) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerFoldingRangeProvider(\r\n          languageId,\r\n          new FoldingRangeAdapter(worker)\r\n        )\r\n      );\r\n    }\r\n    if (modeConfiguration.selectionRanges) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerSelectionRangeProvider(\r\n          languageId,\r\n          new SelectionRangeAdapter(worker)\r\n        )\r\n      );\r\n    }\r\n    if (modeConfiguration.documentFormattingEdits) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerDocumentFormattingEditProvider(\r\n          languageId,\r\n          new DocumentFormattingEditProvider(worker)\r\n        )\r\n      );\r\n    }\r\n    if (modeConfiguration.documentRangeFormattingEdits) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(\r\n          languageId,\r\n          new DocumentRangeFormattingEditProvider(worker)\r\n        )\r\n      );\r\n    }\r\n  }\r\n  registerProviders();\r\n  disposables.push(asDisposable(providers));\r\n  return asDisposable(disposables);\r\n}\r\nfunction asDisposable(disposables) {\r\n  return { dispose: () => disposeAll(disposables) };\r\n}\r\nfunction disposeAll(disposables) {\r\n  while (disposables.length) {\r\n    disposables.pop().dispose();\r\n  }\r\n}\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvbGFuZ3VhZ2UvaHRtbC9odG1sTW9kZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLDRGQUE0RjtBQUN6SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxrREFBdUI7QUFDUTtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0NBQWtDO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0JBQWtCO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBCQUEwQjtBQUMzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0QkFBNEI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0QkFBNEI7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlO0FBQ2YsTUFBTTtBQUNOLGVBQWU7QUFDZixNQUFNO0FBQ04sb0VBQW9FLElBQUksSUFBSSxJQUFJLElBQUksTUFBTSxJQUFJLEtBQUs7QUFDbkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0JBQXNCO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNEJBQTRCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0NBQW9DO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQkFBc0I7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNENBQTRDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOENBQThDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRDQUE0QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9DQUFvQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvRUFBb0U7QUFDckU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnREFBZ0Q7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHNDQUFzQztBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMENBQTBDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQztBQUNqQztBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMEJBQTBCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxhQUFhLFNBQVMsZ0NBQWdDO0FBQ3REO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNEJBQTRCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyw0Q0FBNEM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdFQUFnRTtBQUNqRTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0EsYUFBYSxTQUFTLGdDQUFnQztBQUN0RDtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhDQUE4QztBQUMvQztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRDQUE0QztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLENBQUMsc0NBQXNDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0RBQXdEO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMEVBQTBFO0FBQzNFO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMEZBQTBGO0FBQzNGO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNENBQTRDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQ0FBc0M7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnREFBZ0Q7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRDQUE0QztBQUM3QztBQUNBO0FBQ0E7QUFDQSxDQUFDLDhDQUE4QztBQUMvQztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhDQUE4QztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0NBQXdDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnRUFBZ0U7QUFDakU7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxDQUFDLHdDQUF3QztBQUN6QztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLENBQUMsd0NBQXdDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQztBQUN0QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0NBQW9DO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQkFBc0I7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHVCQUF1QixJQUFJO0FBQ3hEO0FBQ0E7QUFDQSxDQUFDLG9EQUFvRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxvREFBb0Q7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsc0RBQXNEO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhDQUE4QztBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsZ0NBQWdDO0FBQ2pDO0FBQ0E7QUFDQTtBQUNBLENBQUMsOEJBQThCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOENBQThDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQyx3QkFBd0IsZUFBZSxJQUFJLHdCQUF3QjtBQUNuRztBQUNBO0FBQ0EsQ0FBQywwQ0FBMEM7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3Q0FBd0M7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0NBQXdDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzREFBc0Q7QUFDdkQ7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhDQUE4QztBQUMvQztBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdDQUFnQztBQUNqQztBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNEJBQTRCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsOENBQThDO0FBQy9DO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsb0NBQW9DO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsd0NBQXdDO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnREFBZ0Q7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyx3REFBd0Q7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLHdDQUF3QztBQUN6QztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDBDQUEwQztBQUMzQztBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhEQUE4RDtBQUMvRDtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRFQUE0RTtBQUM3RTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdEQUFnRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxzQ0FBc0M7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxnREFBZ0Q7QUFDakQ7QUFDQTtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDhCQUE4QjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLENBQUMsa0NBQWtDO0FBQ25DO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsQ0FBQyxvREFBb0Q7QUFDckQ7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxDQUFDLG9EQUFvRDtBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsa0VBQWtFO0FBQ25FO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0EsQ0FBQyx3REFBd0Q7QUFDekQ7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQSxDQUFDLDBEQUEwRDtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMENBQTBDO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EseUNBQXlDLFFBQVE7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLG9DQUFvQztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLGlCQUFpQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLGdCQUFnQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtEQUErRCx3REFBd0Q7QUFDdkg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEM7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVztBQUNYO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1AsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isc0NBQXNDO0FBQzlEO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUCxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLGdDQUFnQztBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBdUJFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2xhbmd1YWdlL2h0bWwvaHRtbE1vZGUuanM/ZmE1YiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogVmVyc2lvbjogMC41MC4wKGMzMjFkMGZiZWNiNTBhYjhhNTM2NWZhMTk2NTQ3NmIwYWU2M2ZjODcpXHJcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L21vbmFjby1lZGl0b3IvYmxvYi9tYWluL0xJQ0VOU0UudHh0XHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxudmFyIF9fZGVmUHJvcCA9IE9iamVjdC5kZWZpbmVQcm9wZXJ0eTtcclxudmFyIF9fZ2V0T3duUHJvcERlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO1xyXG52YXIgX19nZXRPd25Qcm9wTmFtZXMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcztcclxudmFyIF9faGFzT3duUHJvcCA9IE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7XHJcbnZhciBfX2NvcHlQcm9wcyA9ICh0bywgZnJvbSwgZXhjZXB0LCBkZXNjKSA9PiB7XHJcbiAgaWYgKGZyb20gJiYgdHlwZW9mIGZyb20gPT09IFwib2JqZWN0XCIgfHwgdHlwZW9mIGZyb20gPT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgZm9yIChsZXQga2V5IG9mIF9fZ2V0T3duUHJvcE5hbWVzKGZyb20pKVxyXG4gICAgICBpZiAoIV9faGFzT3duUHJvcC5jYWxsKHRvLCBrZXkpICYmIGtleSAhPT0gZXhjZXB0KVxyXG4gICAgICAgIF9fZGVmUHJvcCh0bywga2V5LCB7IGdldDogKCkgPT4gZnJvbVtrZXldLCBlbnVtZXJhYmxlOiAhKGRlc2MgPSBfX2dldE93blByb3BEZXNjKGZyb20sIGtleSkpIHx8IGRlc2MuZW51bWVyYWJsZSB9KTtcclxuICB9XHJcbiAgcmV0dXJuIHRvO1xyXG59O1xyXG52YXIgX19yZUV4cG9ydCA9ICh0YXJnZXQsIG1vZCwgc2Vjb25kVGFyZ2V0KSA9PiAoX19jb3B5UHJvcHModGFyZ2V0LCBtb2QsIFwiZGVmYXVsdFwiKSwgc2Vjb25kVGFyZ2V0ICYmIF9fY29weVByb3BzKHNlY29uZFRhcmdldCwgbW9kLCBcImRlZmF1bHRcIikpO1xyXG5cclxuLy8gc3JjL2ZpbGxlcnMvbW9uYWNvLWVkaXRvci1jb3JlLnRzXHJcbnZhciBtb25hY29fZWRpdG9yX2NvcmVfZXhwb3J0cyA9IHt9O1xyXG5fX3JlRXhwb3J0KG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLCBtb25hY29fZWRpdG9yX2NvcmVfc3Rhcik7XHJcbmltcG9ydCAqIGFzIG1vbmFjb19lZGl0b3JfY29yZV9zdGFyIGZyb20gXCIuLi8uLi9lZGl0b3IvZWRpdG9yLmFwaS5qc1wiO1xyXG5cclxuLy8gc3JjL2xhbmd1YWdlL2h0bWwvd29ya2VyTWFuYWdlci50c1xyXG52YXIgU1RPUF9XSEVOX0lETEVfRk9SID0gMiAqIDYwICogMWUzO1xyXG52YXIgV29ya2VyTWFuYWdlciA9IGNsYXNzIHtcclxuICBjb25zdHJ1Y3RvcihkZWZhdWx0cykge1xyXG4gICAgdGhpcy5fZGVmYXVsdHMgPSBkZWZhdWx0cztcclxuICAgIHRoaXMuX3dvcmtlciA9IG51bGw7XHJcbiAgICB0aGlzLl9jbGllbnQgPSBudWxsO1xyXG4gICAgdGhpcy5faWRsZUNoZWNrSW50ZXJ2YWwgPSB3aW5kb3cuc2V0SW50ZXJ2YWwoKCkgPT4gdGhpcy5fY2hlY2tJZklkbGUoKSwgMzAgKiAxZTMpO1xyXG4gICAgdGhpcy5fbGFzdFVzZWRUaW1lID0gMDtcclxuICAgIHRoaXMuX2NvbmZpZ0NoYW5nZUxpc3RlbmVyID0gdGhpcy5fZGVmYXVsdHMub25EaWRDaGFuZ2UoKCkgPT4gdGhpcy5fc3RvcFdvcmtlcigpKTtcclxuICB9XHJcbiAgX3N0b3BXb3JrZXIoKSB7XHJcbiAgICBpZiAodGhpcy5fd29ya2VyKSB7XHJcbiAgICAgIHRoaXMuX3dvcmtlci5kaXNwb3NlKCk7XHJcbiAgICAgIHRoaXMuX3dvcmtlciA9IG51bGw7XHJcbiAgICB9XHJcbiAgICB0aGlzLl9jbGllbnQgPSBudWxsO1xyXG4gIH1cclxuICBkaXNwb3NlKCkge1xyXG4gICAgY2xlYXJJbnRlcnZhbCh0aGlzLl9pZGxlQ2hlY2tJbnRlcnZhbCk7XHJcbiAgICB0aGlzLl9jb25maWdDaGFuZ2VMaXN0ZW5lci5kaXNwb3NlKCk7XHJcbiAgICB0aGlzLl9zdG9wV29ya2VyKCk7XHJcbiAgfVxyXG4gIF9jaGVja0lmSWRsZSgpIHtcclxuICAgIGlmICghdGhpcy5fd29ya2VyKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGxldCB0aW1lUGFzc2VkU2luY2VMYXN0VXNlZCA9IERhdGUubm93KCkgLSB0aGlzLl9sYXN0VXNlZFRpbWU7XHJcbiAgICBpZiAodGltZVBhc3NlZFNpbmNlTGFzdFVzZWQgPiBTVE9QX1dIRU5fSURMRV9GT1IpIHtcclxuICAgICAgdGhpcy5fc3RvcFdvcmtlcigpO1xyXG4gICAgfVxyXG4gIH1cclxuICBfZ2V0Q2xpZW50KCkge1xyXG4gICAgdGhpcy5fbGFzdFVzZWRUaW1lID0gRGF0ZS5ub3coKTtcclxuICAgIGlmICghdGhpcy5fY2xpZW50KSB7XHJcbiAgICAgIHRoaXMuX3dvcmtlciA9IG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLmVkaXRvci5jcmVhdGVXZWJXb3JrZXIoe1xyXG4gICAgICAgIC8vIG1vZHVsZSB0aGF0IGV4cG9ydHMgdGhlIGNyZWF0ZSgpIG1ldGhvZCBhbmQgcmV0dXJucyBhIGBIVE1MV29ya2VyYCBpbnN0YW5jZVxyXG4gICAgICAgIG1vZHVsZUlkOiBcInZzL2xhbmd1YWdlL2h0bWwvaHRtbFdvcmtlclwiLFxyXG4gICAgICAgIC8vIHBhc3NlZCBpbiB0byB0aGUgY3JlYXRlKCkgbWV0aG9kXHJcbiAgICAgICAgY3JlYXRlRGF0YToge1xyXG4gICAgICAgICAgbGFuZ3VhZ2VTZXR0aW5nczogdGhpcy5fZGVmYXVsdHMub3B0aW9ucyxcclxuICAgICAgICAgIGxhbmd1YWdlSWQ6IHRoaXMuX2RlZmF1bHRzLmxhbmd1YWdlSWRcclxuICAgICAgICB9LFxyXG4gICAgICAgIGxhYmVsOiB0aGlzLl9kZWZhdWx0cy5sYW5ndWFnZUlkXHJcbiAgICAgIH0pO1xyXG4gICAgICB0aGlzLl9jbGllbnQgPSB0aGlzLl93b3JrZXIuZ2V0UHJveHkoKTtcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLl9jbGllbnQ7XHJcbiAgfVxyXG4gIGdldExhbmd1YWdlU2VydmljZVdvcmtlciguLi5yZXNvdXJjZXMpIHtcclxuICAgIGxldCBfY2xpZW50O1xyXG4gICAgcmV0dXJuIHRoaXMuX2dldENsaWVudCgpLnRoZW4oKGNsaWVudCkgPT4ge1xyXG4gICAgICBfY2xpZW50ID0gY2xpZW50O1xyXG4gICAgfSkudGhlbigoXykgPT4ge1xyXG4gICAgICBpZiAodGhpcy5fd29ya2VyKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3dvcmtlci53aXRoU3luY2VkUmVzb3VyY2VzKHJlc291cmNlcyk7XHJcbiAgICAgIH1cclxuICAgIH0pLnRoZW4oKF8pID0+IF9jbGllbnQpO1xyXG4gIH1cclxufTtcclxuXHJcbi8vIG5vZGVfbW9kdWxlcy92c2NvZGUtbGFuZ3VhZ2VzZXJ2ZXItdHlwZXMvbGliL2VzbS9tYWluLmpzXHJcbnZhciBEb2N1bWVudFVyaTtcclxuKGZ1bmN0aW9uKERvY3VtZW50VXJpMikge1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiO1xyXG4gIH1cclxuICBEb2N1bWVudFVyaTIuaXMgPSBpcztcclxufSkoRG9jdW1lbnRVcmkgfHwgKERvY3VtZW50VXJpID0ge30pKTtcclxudmFyIFVSSTtcclxuKGZ1bmN0aW9uKFVSSTIpIHtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIjtcclxuICB9XHJcbiAgVVJJMi5pcyA9IGlzO1xyXG59KShVUkkgfHwgKFVSSSA9IHt9KSk7XHJcbnZhciBpbnRlZ2VyO1xyXG4oZnVuY3Rpb24oaW50ZWdlcjIpIHtcclxuICBpbnRlZ2VyMi5NSU5fVkFMVUUgPSAtMjE0NzQ4MzY0ODtcclxuICBpbnRlZ2VyMi5NQVhfVkFMVUUgPSAyMTQ3NDgzNjQ3O1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlID09PSBcIm51bWJlclwiICYmIGludGVnZXIyLk1JTl9WQUxVRSA8PSB2YWx1ZSAmJiB2YWx1ZSA8PSBpbnRlZ2VyMi5NQVhfVkFMVUU7XHJcbiAgfVxyXG4gIGludGVnZXIyLmlzID0gaXM7XHJcbn0pKGludGVnZXIgfHwgKGludGVnZXIgPSB7fSkpO1xyXG52YXIgdWludGVnZXI7XHJcbihmdW5jdGlvbih1aW50ZWdlcjIpIHtcclxuICB1aW50ZWdlcjIuTUlOX1ZBTFVFID0gMDtcclxuICB1aW50ZWdlcjIuTUFYX1ZBTFVFID0gMjE0NzQ4MzY0NztcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJudW1iZXJcIiAmJiB1aW50ZWdlcjIuTUlOX1ZBTFVFIDw9IHZhbHVlICYmIHZhbHVlIDw9IHVpbnRlZ2VyMi5NQVhfVkFMVUU7XHJcbiAgfVxyXG4gIHVpbnRlZ2VyMi5pcyA9IGlzO1xyXG59KSh1aW50ZWdlciB8fCAodWludGVnZXIgPSB7fSkpO1xyXG52YXIgUG9zaXRpb247XHJcbihmdW5jdGlvbihQb3NpdGlvbjMpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUobGluZSwgY2hhcmFjdGVyKSB7XHJcbiAgICBpZiAobGluZSA9PT0gTnVtYmVyLk1BWF9WQUxVRSkge1xyXG4gICAgICBsaW5lID0gdWludGVnZXIuTUFYX1ZBTFVFO1xyXG4gICAgfVxyXG4gICAgaWYgKGNoYXJhY3RlciA9PT0gTnVtYmVyLk1BWF9WQUxVRSkge1xyXG4gICAgICBjaGFyYWN0ZXIgPSB1aW50ZWdlci5NQVhfVkFMVUU7XHJcbiAgICB9XHJcbiAgICByZXR1cm4geyBsaW5lLCBjaGFyYWN0ZXIgfTtcclxuICB9XHJcbiAgUG9zaXRpb24zLmNyZWF0ZSA9IGNyZWF0ZTtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgbGV0IGNhbmRpZGF0ZSA9IHZhbHVlO1xyXG4gICAgcmV0dXJuIElzLm9iamVjdExpdGVyYWwoY2FuZGlkYXRlKSAmJiBJcy51aW50ZWdlcihjYW5kaWRhdGUubGluZSkgJiYgSXMudWludGVnZXIoY2FuZGlkYXRlLmNoYXJhY3Rlcik7XHJcbiAgfVxyXG4gIFBvc2l0aW9uMy5pcyA9IGlzO1xyXG59KShQb3NpdGlvbiB8fCAoUG9zaXRpb24gPSB7fSkpO1xyXG52YXIgUmFuZ2U7XHJcbihmdW5jdGlvbihSYW5nZTMpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUob25lLCB0d28sIHRocmVlLCBmb3VyKSB7XHJcbiAgICBpZiAoSXMudWludGVnZXIob25lKSAmJiBJcy51aW50ZWdlcih0d28pICYmIElzLnVpbnRlZ2VyKHRocmVlKSAmJiBJcy51aW50ZWdlcihmb3VyKSkge1xyXG4gICAgICByZXR1cm4geyBzdGFydDogUG9zaXRpb24uY3JlYXRlKG9uZSwgdHdvKSwgZW5kOiBQb3NpdGlvbi5jcmVhdGUodGhyZWUsIGZvdXIpIH07XHJcbiAgICB9IGVsc2UgaWYgKFBvc2l0aW9uLmlzKG9uZSkgJiYgUG9zaXRpb24uaXModHdvKSkge1xyXG4gICAgICByZXR1cm4geyBzdGFydDogb25lLCBlbmQ6IHR3byB9O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKGBSYW5nZSNjcmVhdGUgY2FsbGVkIHdpdGggaW52YWxpZCBhcmd1bWVudHNbJHtvbmV9LCAke3R3b30sICR7dGhyZWV9LCAke2ZvdXJ9XWApO1xyXG4gICAgfVxyXG4gIH1cclxuICBSYW5nZTMuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBsZXQgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMub2JqZWN0TGl0ZXJhbChjYW5kaWRhdGUpICYmIFBvc2l0aW9uLmlzKGNhbmRpZGF0ZS5zdGFydCkgJiYgUG9zaXRpb24uaXMoY2FuZGlkYXRlLmVuZCk7XHJcbiAgfVxyXG4gIFJhbmdlMy5pcyA9IGlzO1xyXG59KShSYW5nZSB8fCAoUmFuZ2UgPSB7fSkpO1xyXG52YXIgTG9jYXRpb247XHJcbihmdW5jdGlvbihMb2NhdGlvbjIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUodXJpLCByYW5nZSkge1xyXG4gICAgcmV0dXJuIHsgdXJpLCByYW5nZSB9O1xyXG4gIH1cclxuICBMb2NhdGlvbjIuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBsZXQgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMub2JqZWN0TGl0ZXJhbChjYW5kaWRhdGUpICYmIFJhbmdlLmlzKGNhbmRpZGF0ZS5yYW5nZSkgJiYgKElzLnN0cmluZyhjYW5kaWRhdGUudXJpKSB8fCBJcy51bmRlZmluZWQoY2FuZGlkYXRlLnVyaSkpO1xyXG4gIH1cclxuICBMb2NhdGlvbjIuaXMgPSBpcztcclxufSkoTG9jYXRpb24gfHwgKExvY2F0aW9uID0ge30pKTtcclxudmFyIExvY2F0aW9uTGluaztcclxuKGZ1bmN0aW9uKExvY2F0aW9uTGluazIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUodGFyZ2V0VXJpLCB0YXJnZXRSYW5nZSwgdGFyZ2V0U2VsZWN0aW9uUmFuZ2UsIG9yaWdpblNlbGVjdGlvblJhbmdlKSB7XHJcbiAgICByZXR1cm4geyB0YXJnZXRVcmksIHRhcmdldFJhbmdlLCB0YXJnZXRTZWxlY3Rpb25SYW5nZSwgb3JpZ2luU2VsZWN0aW9uUmFuZ2UgfTtcclxuICB9XHJcbiAgTG9jYXRpb25MaW5rMi5jcmVhdGUgPSBjcmVhdGU7XHJcbiAgZnVuY3Rpb24gaXModmFsdWUpIHtcclxuICAgIGxldCBjYW5kaWRhdGUgPSB2YWx1ZTtcclxuICAgIHJldHVybiBJcy5vYmplY3RMaXRlcmFsKGNhbmRpZGF0ZSkgJiYgUmFuZ2UuaXMoY2FuZGlkYXRlLnRhcmdldFJhbmdlKSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLnRhcmdldFVyaSkgJiYgUmFuZ2UuaXMoY2FuZGlkYXRlLnRhcmdldFNlbGVjdGlvblJhbmdlKSAmJiAoUmFuZ2UuaXMoY2FuZGlkYXRlLm9yaWdpblNlbGVjdGlvblJhbmdlKSB8fCBJcy51bmRlZmluZWQoY2FuZGlkYXRlLm9yaWdpblNlbGVjdGlvblJhbmdlKSk7XHJcbiAgfVxyXG4gIExvY2F0aW9uTGluazIuaXMgPSBpcztcclxufSkoTG9jYXRpb25MaW5rIHx8IChMb2NhdGlvbkxpbmsgPSB7fSkpO1xyXG52YXIgQ29sb3I7XHJcbihmdW5jdGlvbihDb2xvcjIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUocmVkLCBncmVlbiwgYmx1ZSwgYWxwaGEpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIHJlZCxcclxuICAgICAgZ3JlZW4sXHJcbiAgICAgIGJsdWUsXHJcbiAgICAgIGFscGhhXHJcbiAgICB9O1xyXG4gIH1cclxuICBDb2xvcjIuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBjb25zdCBjYW5kaWRhdGUgPSB2YWx1ZTtcclxuICAgIHJldHVybiBJcy5vYmplY3RMaXRlcmFsKGNhbmRpZGF0ZSkgJiYgSXMubnVtYmVyUmFuZ2UoY2FuZGlkYXRlLnJlZCwgMCwgMSkgJiYgSXMubnVtYmVyUmFuZ2UoY2FuZGlkYXRlLmdyZWVuLCAwLCAxKSAmJiBJcy5udW1iZXJSYW5nZShjYW5kaWRhdGUuYmx1ZSwgMCwgMSkgJiYgSXMubnVtYmVyUmFuZ2UoY2FuZGlkYXRlLmFscGhhLCAwLCAxKTtcclxuICB9XHJcbiAgQ29sb3IyLmlzID0gaXM7XHJcbn0pKENvbG9yIHx8IChDb2xvciA9IHt9KSk7XHJcbnZhciBDb2xvckluZm9ybWF0aW9uO1xyXG4oZnVuY3Rpb24oQ29sb3JJbmZvcm1hdGlvbjIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUocmFuZ2UsIGNvbG9yKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICByYW5nZSxcclxuICAgICAgY29sb3JcclxuICAgIH07XHJcbiAgfVxyXG4gIENvbG9ySW5mb3JtYXRpb24yLmNyZWF0ZSA9IGNyZWF0ZTtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgY29uc3QgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMub2JqZWN0TGl0ZXJhbChjYW5kaWRhdGUpICYmIFJhbmdlLmlzKGNhbmRpZGF0ZS5yYW5nZSkgJiYgQ29sb3IuaXMoY2FuZGlkYXRlLmNvbG9yKTtcclxuICB9XHJcbiAgQ29sb3JJbmZvcm1hdGlvbjIuaXMgPSBpcztcclxufSkoQ29sb3JJbmZvcm1hdGlvbiB8fCAoQ29sb3JJbmZvcm1hdGlvbiA9IHt9KSk7XHJcbnZhciBDb2xvclByZXNlbnRhdGlvbjtcclxuKGZ1bmN0aW9uKENvbG9yUHJlc2VudGF0aW9uMikge1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZShsYWJlbCwgdGV4dEVkaXQsIGFkZGl0aW9uYWxUZXh0RWRpdHMpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGxhYmVsLFxyXG4gICAgICB0ZXh0RWRpdCxcclxuICAgICAgYWRkaXRpb25hbFRleHRFZGl0c1xyXG4gICAgfTtcclxuICB9XHJcbiAgQ29sb3JQcmVzZW50YXRpb24yLmNyZWF0ZSA9IGNyZWF0ZTtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgY29uc3QgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMub2JqZWN0TGl0ZXJhbChjYW5kaWRhdGUpICYmIElzLnN0cmluZyhjYW5kaWRhdGUubGFiZWwpICYmIChJcy51bmRlZmluZWQoY2FuZGlkYXRlLnRleHRFZGl0KSB8fCBUZXh0RWRpdC5pcyhjYW5kaWRhdGUpKSAmJiAoSXMudW5kZWZpbmVkKGNhbmRpZGF0ZS5hZGRpdGlvbmFsVGV4dEVkaXRzKSB8fCBJcy50eXBlZEFycmF5KGNhbmRpZGF0ZS5hZGRpdGlvbmFsVGV4dEVkaXRzLCBUZXh0RWRpdC5pcykpO1xyXG4gIH1cclxuICBDb2xvclByZXNlbnRhdGlvbjIuaXMgPSBpcztcclxufSkoQ29sb3JQcmVzZW50YXRpb24gfHwgKENvbG9yUHJlc2VudGF0aW9uID0ge30pKTtcclxudmFyIEZvbGRpbmdSYW5nZUtpbmQ7XHJcbihmdW5jdGlvbihGb2xkaW5nUmFuZ2VLaW5kMikge1xyXG4gIEZvbGRpbmdSYW5nZUtpbmQyLkNvbW1lbnQgPSBcImNvbW1lbnRcIjtcclxuICBGb2xkaW5nUmFuZ2VLaW5kMi5JbXBvcnRzID0gXCJpbXBvcnRzXCI7XHJcbiAgRm9sZGluZ1JhbmdlS2luZDIuUmVnaW9uID0gXCJyZWdpb25cIjtcclxufSkoRm9sZGluZ1JhbmdlS2luZCB8fCAoRm9sZGluZ1JhbmdlS2luZCA9IHt9KSk7XHJcbnZhciBGb2xkaW5nUmFuZ2U7XHJcbihmdW5jdGlvbihGb2xkaW5nUmFuZ2UyKSB7XHJcbiAgZnVuY3Rpb24gY3JlYXRlKHN0YXJ0TGluZSwgZW5kTGluZSwgc3RhcnRDaGFyYWN0ZXIsIGVuZENoYXJhY3Rlciwga2luZCwgY29sbGFwc2VkVGV4dCkge1xyXG4gICAgY29uc3QgcmVzdWx0ID0ge1xyXG4gICAgICBzdGFydExpbmUsXHJcbiAgICAgIGVuZExpbmVcclxuICAgIH07XHJcbiAgICBpZiAoSXMuZGVmaW5lZChzdGFydENoYXJhY3RlcikpIHtcclxuICAgICAgcmVzdWx0LnN0YXJ0Q2hhcmFjdGVyID0gc3RhcnRDaGFyYWN0ZXI7XHJcbiAgICB9XHJcbiAgICBpZiAoSXMuZGVmaW5lZChlbmRDaGFyYWN0ZXIpKSB7XHJcbiAgICAgIHJlc3VsdC5lbmRDaGFyYWN0ZXIgPSBlbmRDaGFyYWN0ZXI7XHJcbiAgICB9XHJcbiAgICBpZiAoSXMuZGVmaW5lZChraW5kKSkge1xyXG4gICAgICByZXN1bHQua2luZCA9IGtpbmQ7XHJcbiAgICB9XHJcbiAgICBpZiAoSXMuZGVmaW5lZChjb2xsYXBzZWRUZXh0KSkge1xyXG4gICAgICByZXN1bHQuY29sbGFwc2VkVGV4dCA9IGNvbGxhcHNlZFRleHQ7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxuICBGb2xkaW5nUmFuZ2UyLmNyZWF0ZSA9IGNyZWF0ZTtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgY29uc3QgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMub2JqZWN0TGl0ZXJhbChjYW5kaWRhdGUpICYmIElzLnVpbnRlZ2VyKGNhbmRpZGF0ZS5zdGFydExpbmUpICYmIElzLnVpbnRlZ2VyKGNhbmRpZGF0ZS5zdGFydExpbmUpICYmIChJcy51bmRlZmluZWQoY2FuZGlkYXRlLnN0YXJ0Q2hhcmFjdGVyKSB8fCBJcy51aW50ZWdlcihjYW5kaWRhdGUuc3RhcnRDaGFyYWN0ZXIpKSAmJiAoSXMudW5kZWZpbmVkKGNhbmRpZGF0ZS5lbmRDaGFyYWN0ZXIpIHx8IElzLnVpbnRlZ2VyKGNhbmRpZGF0ZS5lbmRDaGFyYWN0ZXIpKSAmJiAoSXMudW5kZWZpbmVkKGNhbmRpZGF0ZS5raW5kKSB8fCBJcy5zdHJpbmcoY2FuZGlkYXRlLmtpbmQpKTtcclxuICB9XHJcbiAgRm9sZGluZ1JhbmdlMi5pcyA9IGlzO1xyXG59KShGb2xkaW5nUmFuZ2UgfHwgKEZvbGRpbmdSYW5nZSA9IHt9KSk7XHJcbnZhciBEaWFnbm9zdGljUmVsYXRlZEluZm9ybWF0aW9uO1xyXG4oZnVuY3Rpb24oRGlhZ25vc3RpY1JlbGF0ZWRJbmZvcm1hdGlvbjIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUobG9jYXRpb24sIG1lc3NhZ2UpIHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGxvY2F0aW9uLFxyXG4gICAgICBtZXNzYWdlXHJcbiAgICB9O1xyXG4gIH1cclxuICBEaWFnbm9zdGljUmVsYXRlZEluZm9ybWF0aW9uMi5jcmVhdGUgPSBjcmVhdGU7XHJcbiAgZnVuY3Rpb24gaXModmFsdWUpIHtcclxuICAgIGxldCBjYW5kaWRhdGUgPSB2YWx1ZTtcclxuICAgIHJldHVybiBJcy5kZWZpbmVkKGNhbmRpZGF0ZSkgJiYgTG9jYXRpb24uaXMoY2FuZGlkYXRlLmxvY2F0aW9uKSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLm1lc3NhZ2UpO1xyXG4gIH1cclxuICBEaWFnbm9zdGljUmVsYXRlZEluZm9ybWF0aW9uMi5pcyA9IGlzO1xyXG59KShEaWFnbm9zdGljUmVsYXRlZEluZm9ybWF0aW9uIHx8IChEaWFnbm9zdGljUmVsYXRlZEluZm9ybWF0aW9uID0ge30pKTtcclxudmFyIERpYWdub3N0aWNTZXZlcml0eTtcclxuKGZ1bmN0aW9uKERpYWdub3N0aWNTZXZlcml0eTIpIHtcclxuICBEaWFnbm9zdGljU2V2ZXJpdHkyLkVycm9yID0gMTtcclxuICBEaWFnbm9zdGljU2V2ZXJpdHkyLldhcm5pbmcgPSAyO1xyXG4gIERpYWdub3N0aWNTZXZlcml0eTIuSW5mb3JtYXRpb24gPSAzO1xyXG4gIERpYWdub3N0aWNTZXZlcml0eTIuSGludCA9IDQ7XHJcbn0pKERpYWdub3N0aWNTZXZlcml0eSB8fCAoRGlhZ25vc3RpY1NldmVyaXR5ID0ge30pKTtcclxudmFyIERpYWdub3N0aWNUYWc7XHJcbihmdW5jdGlvbihEaWFnbm9zdGljVGFnMikge1xyXG4gIERpYWdub3N0aWNUYWcyLlVubmVjZXNzYXJ5ID0gMTtcclxuICBEaWFnbm9zdGljVGFnMi5EZXByZWNhdGVkID0gMjtcclxufSkoRGlhZ25vc3RpY1RhZyB8fCAoRGlhZ25vc3RpY1RhZyA9IHt9KSk7XHJcbnZhciBDb2RlRGVzY3JpcHRpb247XHJcbihmdW5jdGlvbihDb2RlRGVzY3JpcHRpb24yKSB7XHJcbiAgZnVuY3Rpb24gaXModmFsdWUpIHtcclxuICAgIGNvbnN0IGNhbmRpZGF0ZSA9IHZhbHVlO1xyXG4gICAgcmV0dXJuIElzLm9iamVjdExpdGVyYWwoY2FuZGlkYXRlKSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLmhyZWYpO1xyXG4gIH1cclxuICBDb2RlRGVzY3JpcHRpb24yLmlzID0gaXM7XHJcbn0pKENvZGVEZXNjcmlwdGlvbiB8fCAoQ29kZURlc2NyaXB0aW9uID0ge30pKTtcclxudmFyIERpYWdub3N0aWM7XHJcbihmdW5jdGlvbihEaWFnbm9zdGljMikge1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZShyYW5nZSwgbWVzc2FnZSwgc2V2ZXJpdHksIGNvZGUsIHNvdXJjZSwgcmVsYXRlZEluZm9ybWF0aW9uKSB7XHJcbiAgICBsZXQgcmVzdWx0ID0geyByYW5nZSwgbWVzc2FnZSB9O1xyXG4gICAgaWYgKElzLmRlZmluZWQoc2V2ZXJpdHkpKSB7XHJcbiAgICAgIHJlc3VsdC5zZXZlcml0eSA9IHNldmVyaXR5O1xyXG4gICAgfVxyXG4gICAgaWYgKElzLmRlZmluZWQoY29kZSkpIHtcclxuICAgICAgcmVzdWx0LmNvZGUgPSBjb2RlO1xyXG4gICAgfVxyXG4gICAgaWYgKElzLmRlZmluZWQoc291cmNlKSkge1xyXG4gICAgICByZXN1bHQuc291cmNlID0gc291cmNlO1xyXG4gICAgfVxyXG4gICAgaWYgKElzLmRlZmluZWQocmVsYXRlZEluZm9ybWF0aW9uKSkge1xyXG4gICAgICByZXN1bHQucmVsYXRlZEluZm9ybWF0aW9uID0gcmVsYXRlZEluZm9ybWF0aW9uO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9XHJcbiAgRGlhZ25vc3RpYzIuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICB2YXIgX2E7XHJcbiAgICBsZXQgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMuZGVmaW5lZChjYW5kaWRhdGUpICYmIFJhbmdlLmlzKGNhbmRpZGF0ZS5yYW5nZSkgJiYgSXMuc3RyaW5nKGNhbmRpZGF0ZS5tZXNzYWdlKSAmJiAoSXMubnVtYmVyKGNhbmRpZGF0ZS5zZXZlcml0eSkgfHwgSXMudW5kZWZpbmVkKGNhbmRpZGF0ZS5zZXZlcml0eSkpICYmIChJcy5pbnRlZ2VyKGNhbmRpZGF0ZS5jb2RlKSB8fCBJcy5zdHJpbmcoY2FuZGlkYXRlLmNvZGUpIHx8IElzLnVuZGVmaW5lZChjYW5kaWRhdGUuY29kZSkpICYmIChJcy51bmRlZmluZWQoY2FuZGlkYXRlLmNvZGVEZXNjcmlwdGlvbikgfHwgSXMuc3RyaW5nKChfYSA9IGNhbmRpZGF0ZS5jb2RlRGVzY3JpcHRpb24pID09PSBudWxsIHx8IF9hID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfYS5ocmVmKSkgJiYgKElzLnN0cmluZyhjYW5kaWRhdGUuc291cmNlKSB8fCBJcy51bmRlZmluZWQoY2FuZGlkYXRlLnNvdXJjZSkpICYmIChJcy51bmRlZmluZWQoY2FuZGlkYXRlLnJlbGF0ZWRJbmZvcm1hdGlvbikgfHwgSXMudHlwZWRBcnJheShjYW5kaWRhdGUucmVsYXRlZEluZm9ybWF0aW9uLCBEaWFnbm9zdGljUmVsYXRlZEluZm9ybWF0aW9uLmlzKSk7XHJcbiAgfVxyXG4gIERpYWdub3N0aWMyLmlzID0gaXM7XHJcbn0pKERpYWdub3N0aWMgfHwgKERpYWdub3N0aWMgPSB7fSkpO1xyXG52YXIgQ29tbWFuZDtcclxuKGZ1bmN0aW9uKENvbW1hbmQyKSB7XHJcbiAgZnVuY3Rpb24gY3JlYXRlKHRpdGxlLCBjb21tYW5kLCAuLi5hcmdzKSB7XHJcbiAgICBsZXQgcmVzdWx0ID0geyB0aXRsZSwgY29tbWFuZCB9O1xyXG4gICAgaWYgKElzLmRlZmluZWQoYXJncykgJiYgYXJncy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIHJlc3VsdC5hcmd1bWVudHMgPSBhcmdzO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9XHJcbiAgQ29tbWFuZDIuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBsZXQgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMuZGVmaW5lZChjYW5kaWRhdGUpICYmIElzLnN0cmluZyhjYW5kaWRhdGUudGl0bGUpICYmIElzLnN0cmluZyhjYW5kaWRhdGUuY29tbWFuZCk7XHJcbiAgfVxyXG4gIENvbW1hbmQyLmlzID0gaXM7XHJcbn0pKENvbW1hbmQgfHwgKENvbW1hbmQgPSB7fSkpO1xyXG52YXIgVGV4dEVkaXQ7XHJcbihmdW5jdGlvbihUZXh0RWRpdDIpIHtcclxuICBmdW5jdGlvbiByZXBsYWNlKHJhbmdlLCBuZXdUZXh0KSB7XHJcbiAgICByZXR1cm4geyByYW5nZSwgbmV3VGV4dCB9O1xyXG4gIH1cclxuICBUZXh0RWRpdDIucmVwbGFjZSA9IHJlcGxhY2U7XHJcbiAgZnVuY3Rpb24gaW5zZXJ0KHBvc2l0aW9uLCBuZXdUZXh0KSB7XHJcbiAgICByZXR1cm4geyByYW5nZTogeyBzdGFydDogcG9zaXRpb24sIGVuZDogcG9zaXRpb24gfSwgbmV3VGV4dCB9O1xyXG4gIH1cclxuICBUZXh0RWRpdDIuaW5zZXJ0ID0gaW5zZXJ0O1xyXG4gIGZ1bmN0aW9uIGRlbChyYW5nZSkge1xyXG4gICAgcmV0dXJuIHsgcmFuZ2UsIG5ld1RleHQ6IFwiXCIgfTtcclxuICB9XHJcbiAgVGV4dEVkaXQyLmRlbCA9IGRlbDtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgY29uc3QgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMub2JqZWN0TGl0ZXJhbChjYW5kaWRhdGUpICYmIElzLnN0cmluZyhjYW5kaWRhdGUubmV3VGV4dCkgJiYgUmFuZ2UuaXMoY2FuZGlkYXRlLnJhbmdlKTtcclxuICB9XHJcbiAgVGV4dEVkaXQyLmlzID0gaXM7XHJcbn0pKFRleHRFZGl0IHx8IChUZXh0RWRpdCA9IHt9KSk7XHJcbnZhciBDaGFuZ2VBbm5vdGF0aW9uO1xyXG4oZnVuY3Rpb24oQ2hhbmdlQW5ub3RhdGlvbjIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUobGFiZWwsIG5lZWRzQ29uZmlybWF0aW9uLCBkZXNjcmlwdGlvbikge1xyXG4gICAgY29uc3QgcmVzdWx0ID0geyBsYWJlbCB9O1xyXG4gICAgaWYgKG5lZWRzQ29uZmlybWF0aW9uICE9PSB2b2lkIDApIHtcclxuICAgICAgcmVzdWx0Lm5lZWRzQ29uZmlybWF0aW9uID0gbmVlZHNDb25maXJtYXRpb247XHJcbiAgICB9XHJcbiAgICBpZiAoZGVzY3JpcHRpb24gIT09IHZvaWQgMCkge1xyXG4gICAgICByZXN1bHQuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG4gIENoYW5nZUFubm90YXRpb24yLmNyZWF0ZSA9IGNyZWF0ZTtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgY29uc3QgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMub2JqZWN0TGl0ZXJhbChjYW5kaWRhdGUpICYmIElzLnN0cmluZyhjYW5kaWRhdGUubGFiZWwpICYmIChJcy5ib29sZWFuKGNhbmRpZGF0ZS5uZWVkc0NvbmZpcm1hdGlvbikgfHwgY2FuZGlkYXRlLm5lZWRzQ29uZmlybWF0aW9uID09PSB2b2lkIDApICYmIChJcy5zdHJpbmcoY2FuZGlkYXRlLmRlc2NyaXB0aW9uKSB8fCBjYW5kaWRhdGUuZGVzY3JpcHRpb24gPT09IHZvaWQgMCk7XHJcbiAgfVxyXG4gIENoYW5nZUFubm90YXRpb24yLmlzID0gaXM7XHJcbn0pKENoYW5nZUFubm90YXRpb24gfHwgKENoYW5nZUFubm90YXRpb24gPSB7fSkpO1xyXG52YXIgQ2hhbmdlQW5ub3RhdGlvbklkZW50aWZpZXI7XHJcbihmdW5jdGlvbihDaGFuZ2VBbm5vdGF0aW9uSWRlbnRpZmllcjIpIHtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgY29uc3QgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMuc3RyaW5nKGNhbmRpZGF0ZSk7XHJcbiAgfVxyXG4gIENoYW5nZUFubm90YXRpb25JZGVudGlmaWVyMi5pcyA9IGlzO1xyXG59KShDaGFuZ2VBbm5vdGF0aW9uSWRlbnRpZmllciB8fCAoQ2hhbmdlQW5ub3RhdGlvbklkZW50aWZpZXIgPSB7fSkpO1xyXG52YXIgQW5ub3RhdGVkVGV4dEVkaXQ7XHJcbihmdW5jdGlvbihBbm5vdGF0ZWRUZXh0RWRpdDIpIHtcclxuICBmdW5jdGlvbiByZXBsYWNlKHJhbmdlLCBuZXdUZXh0LCBhbm5vdGF0aW9uKSB7XHJcbiAgICByZXR1cm4geyByYW5nZSwgbmV3VGV4dCwgYW5ub3RhdGlvbklkOiBhbm5vdGF0aW9uIH07XHJcbiAgfVxyXG4gIEFubm90YXRlZFRleHRFZGl0Mi5yZXBsYWNlID0gcmVwbGFjZTtcclxuICBmdW5jdGlvbiBpbnNlcnQocG9zaXRpb24sIG5ld1RleHQsIGFubm90YXRpb24pIHtcclxuICAgIHJldHVybiB7IHJhbmdlOiB7IHN0YXJ0OiBwb3NpdGlvbiwgZW5kOiBwb3NpdGlvbiB9LCBuZXdUZXh0LCBhbm5vdGF0aW9uSWQ6IGFubm90YXRpb24gfTtcclxuICB9XHJcbiAgQW5ub3RhdGVkVGV4dEVkaXQyLmluc2VydCA9IGluc2VydDtcclxuICBmdW5jdGlvbiBkZWwocmFuZ2UsIGFubm90YXRpb24pIHtcclxuICAgIHJldHVybiB7IHJhbmdlLCBuZXdUZXh0OiBcIlwiLCBhbm5vdGF0aW9uSWQ6IGFubm90YXRpb24gfTtcclxuICB9XHJcbiAgQW5ub3RhdGVkVGV4dEVkaXQyLmRlbCA9IGRlbDtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgY29uc3QgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gVGV4dEVkaXQuaXMoY2FuZGlkYXRlKSAmJiAoQ2hhbmdlQW5ub3RhdGlvbi5pcyhjYW5kaWRhdGUuYW5ub3RhdGlvbklkKSB8fCBDaGFuZ2VBbm5vdGF0aW9uSWRlbnRpZmllci5pcyhjYW5kaWRhdGUuYW5ub3RhdGlvbklkKSk7XHJcbiAgfVxyXG4gIEFubm90YXRlZFRleHRFZGl0Mi5pcyA9IGlzO1xyXG59KShBbm5vdGF0ZWRUZXh0RWRpdCB8fCAoQW5ub3RhdGVkVGV4dEVkaXQgPSB7fSkpO1xyXG52YXIgVGV4dERvY3VtZW50RWRpdDtcclxuKGZ1bmN0aW9uKFRleHREb2N1bWVudEVkaXQyKSB7XHJcbiAgZnVuY3Rpb24gY3JlYXRlKHRleHREb2N1bWVudCwgZWRpdHMpIHtcclxuICAgIHJldHVybiB7IHRleHREb2N1bWVudCwgZWRpdHMgfTtcclxuICB9XHJcbiAgVGV4dERvY3VtZW50RWRpdDIuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBsZXQgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMuZGVmaW5lZChjYW5kaWRhdGUpICYmIE9wdGlvbmFsVmVyc2lvbmVkVGV4dERvY3VtZW50SWRlbnRpZmllci5pcyhjYW5kaWRhdGUudGV4dERvY3VtZW50KSAmJiBBcnJheS5pc0FycmF5KGNhbmRpZGF0ZS5lZGl0cyk7XHJcbiAgfVxyXG4gIFRleHREb2N1bWVudEVkaXQyLmlzID0gaXM7XHJcbn0pKFRleHREb2N1bWVudEVkaXQgfHwgKFRleHREb2N1bWVudEVkaXQgPSB7fSkpO1xyXG52YXIgQ3JlYXRlRmlsZTtcclxuKGZ1bmN0aW9uKENyZWF0ZUZpbGUyKSB7XHJcbiAgZnVuY3Rpb24gY3JlYXRlKHVyaSwgb3B0aW9ucywgYW5ub3RhdGlvbikge1xyXG4gICAgbGV0IHJlc3VsdCA9IHtcclxuICAgICAga2luZDogXCJjcmVhdGVcIixcclxuICAgICAgdXJpXHJcbiAgICB9O1xyXG4gICAgaWYgKG9wdGlvbnMgIT09IHZvaWQgMCAmJiAob3B0aW9ucy5vdmVyd3JpdGUgIT09IHZvaWQgMCB8fCBvcHRpb25zLmlnbm9yZUlmRXhpc3RzICE9PSB2b2lkIDApKSB7XHJcbiAgICAgIHJlc3VsdC5vcHRpb25zID0gb3B0aW9ucztcclxuICAgIH1cclxuICAgIGlmIChhbm5vdGF0aW9uICE9PSB2b2lkIDApIHtcclxuICAgICAgcmVzdWx0LmFubm90YXRpb25JZCA9IGFubm90YXRpb247XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxuICBDcmVhdGVGaWxlMi5jcmVhdGUgPSBjcmVhdGU7XHJcbiAgZnVuY3Rpb24gaXModmFsdWUpIHtcclxuICAgIGxldCBjYW5kaWRhdGUgPSB2YWx1ZTtcclxuICAgIHJldHVybiBjYW5kaWRhdGUgJiYgY2FuZGlkYXRlLmtpbmQgPT09IFwiY3JlYXRlXCIgJiYgSXMuc3RyaW5nKGNhbmRpZGF0ZS51cmkpICYmIChjYW5kaWRhdGUub3B0aW9ucyA9PT0gdm9pZCAwIHx8IChjYW5kaWRhdGUub3B0aW9ucy5vdmVyd3JpdGUgPT09IHZvaWQgMCB8fCBJcy5ib29sZWFuKGNhbmRpZGF0ZS5vcHRpb25zLm92ZXJ3cml0ZSkpICYmIChjYW5kaWRhdGUub3B0aW9ucy5pZ25vcmVJZkV4aXN0cyA9PT0gdm9pZCAwIHx8IElzLmJvb2xlYW4oY2FuZGlkYXRlLm9wdGlvbnMuaWdub3JlSWZFeGlzdHMpKSkgJiYgKGNhbmRpZGF0ZS5hbm5vdGF0aW9uSWQgPT09IHZvaWQgMCB8fCBDaGFuZ2VBbm5vdGF0aW9uSWRlbnRpZmllci5pcyhjYW5kaWRhdGUuYW5ub3RhdGlvbklkKSk7XHJcbiAgfVxyXG4gIENyZWF0ZUZpbGUyLmlzID0gaXM7XHJcbn0pKENyZWF0ZUZpbGUgfHwgKENyZWF0ZUZpbGUgPSB7fSkpO1xyXG52YXIgUmVuYW1lRmlsZTtcclxuKGZ1bmN0aW9uKFJlbmFtZUZpbGUyKSB7XHJcbiAgZnVuY3Rpb24gY3JlYXRlKG9sZFVyaSwgbmV3VXJpLCBvcHRpb25zLCBhbm5vdGF0aW9uKSB7XHJcbiAgICBsZXQgcmVzdWx0ID0ge1xyXG4gICAgICBraW5kOiBcInJlbmFtZVwiLFxyXG4gICAgICBvbGRVcmksXHJcbiAgICAgIG5ld1VyaVxyXG4gICAgfTtcclxuICAgIGlmIChvcHRpb25zICE9PSB2b2lkIDAgJiYgKG9wdGlvbnMub3ZlcndyaXRlICE9PSB2b2lkIDAgfHwgb3B0aW9ucy5pZ25vcmVJZkV4aXN0cyAhPT0gdm9pZCAwKSkge1xyXG4gICAgICByZXN1bHQub3B0aW9ucyA9IG9wdGlvbnM7XHJcbiAgICB9XHJcbiAgICBpZiAoYW5ub3RhdGlvbiAhPT0gdm9pZCAwKSB7XHJcbiAgICAgIHJlc3VsdC5hbm5vdGF0aW9uSWQgPSBhbm5vdGF0aW9uO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9XHJcbiAgUmVuYW1lRmlsZTIuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBsZXQgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gY2FuZGlkYXRlICYmIGNhbmRpZGF0ZS5raW5kID09PSBcInJlbmFtZVwiICYmIElzLnN0cmluZyhjYW5kaWRhdGUub2xkVXJpKSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLm5ld1VyaSkgJiYgKGNhbmRpZGF0ZS5vcHRpb25zID09PSB2b2lkIDAgfHwgKGNhbmRpZGF0ZS5vcHRpb25zLm92ZXJ3cml0ZSA9PT0gdm9pZCAwIHx8IElzLmJvb2xlYW4oY2FuZGlkYXRlLm9wdGlvbnMub3ZlcndyaXRlKSkgJiYgKGNhbmRpZGF0ZS5vcHRpb25zLmlnbm9yZUlmRXhpc3RzID09PSB2b2lkIDAgfHwgSXMuYm9vbGVhbihjYW5kaWRhdGUub3B0aW9ucy5pZ25vcmVJZkV4aXN0cykpKSAmJiAoY2FuZGlkYXRlLmFubm90YXRpb25JZCA9PT0gdm9pZCAwIHx8IENoYW5nZUFubm90YXRpb25JZGVudGlmaWVyLmlzKGNhbmRpZGF0ZS5hbm5vdGF0aW9uSWQpKTtcclxuICB9XHJcbiAgUmVuYW1lRmlsZTIuaXMgPSBpcztcclxufSkoUmVuYW1lRmlsZSB8fCAoUmVuYW1lRmlsZSA9IHt9KSk7XHJcbnZhciBEZWxldGVGaWxlO1xyXG4oZnVuY3Rpb24oRGVsZXRlRmlsZTIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUodXJpLCBvcHRpb25zLCBhbm5vdGF0aW9uKSB7XHJcbiAgICBsZXQgcmVzdWx0ID0ge1xyXG4gICAgICBraW5kOiBcImRlbGV0ZVwiLFxyXG4gICAgICB1cmlcclxuICAgIH07XHJcbiAgICBpZiAob3B0aW9ucyAhPT0gdm9pZCAwICYmIChvcHRpb25zLnJlY3Vyc2l2ZSAhPT0gdm9pZCAwIHx8IG9wdGlvbnMuaWdub3JlSWZOb3RFeGlzdHMgIT09IHZvaWQgMCkpIHtcclxuICAgICAgcmVzdWx0Lm9wdGlvbnMgPSBvcHRpb25zO1xyXG4gICAgfVxyXG4gICAgaWYgKGFubm90YXRpb24gIT09IHZvaWQgMCkge1xyXG4gICAgICByZXN1bHQuYW5ub3RhdGlvbklkID0gYW5ub3RhdGlvbjtcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG4gIERlbGV0ZUZpbGUyLmNyZWF0ZSA9IGNyZWF0ZTtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgbGV0IGNhbmRpZGF0ZSA9IHZhbHVlO1xyXG4gICAgcmV0dXJuIGNhbmRpZGF0ZSAmJiBjYW5kaWRhdGUua2luZCA9PT0gXCJkZWxldGVcIiAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLnVyaSkgJiYgKGNhbmRpZGF0ZS5vcHRpb25zID09PSB2b2lkIDAgfHwgKGNhbmRpZGF0ZS5vcHRpb25zLnJlY3Vyc2l2ZSA9PT0gdm9pZCAwIHx8IElzLmJvb2xlYW4oY2FuZGlkYXRlLm9wdGlvbnMucmVjdXJzaXZlKSkgJiYgKGNhbmRpZGF0ZS5vcHRpb25zLmlnbm9yZUlmTm90RXhpc3RzID09PSB2b2lkIDAgfHwgSXMuYm9vbGVhbihjYW5kaWRhdGUub3B0aW9ucy5pZ25vcmVJZk5vdEV4aXN0cykpKSAmJiAoY2FuZGlkYXRlLmFubm90YXRpb25JZCA9PT0gdm9pZCAwIHx8IENoYW5nZUFubm90YXRpb25JZGVudGlmaWVyLmlzKGNhbmRpZGF0ZS5hbm5vdGF0aW9uSWQpKTtcclxuICB9XHJcbiAgRGVsZXRlRmlsZTIuaXMgPSBpcztcclxufSkoRGVsZXRlRmlsZSB8fCAoRGVsZXRlRmlsZSA9IHt9KSk7XHJcbnZhciBXb3Jrc3BhY2VFZGl0O1xyXG4oZnVuY3Rpb24oV29ya3NwYWNlRWRpdDIpIHtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgbGV0IGNhbmRpZGF0ZSA9IHZhbHVlO1xyXG4gICAgcmV0dXJuIGNhbmRpZGF0ZSAmJiAoY2FuZGlkYXRlLmNoYW5nZXMgIT09IHZvaWQgMCB8fCBjYW5kaWRhdGUuZG9jdW1lbnRDaGFuZ2VzICE9PSB2b2lkIDApICYmIChjYW5kaWRhdGUuZG9jdW1lbnRDaGFuZ2VzID09PSB2b2lkIDAgfHwgY2FuZGlkYXRlLmRvY3VtZW50Q2hhbmdlcy5ldmVyeSgoY2hhbmdlKSA9PiB7XHJcbiAgICAgIGlmIChJcy5zdHJpbmcoY2hhbmdlLmtpbmQpKSB7XHJcbiAgICAgICAgcmV0dXJuIENyZWF0ZUZpbGUuaXMoY2hhbmdlKSB8fCBSZW5hbWVGaWxlLmlzKGNoYW5nZSkgfHwgRGVsZXRlRmlsZS5pcyhjaGFuZ2UpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHJldHVybiBUZXh0RG9jdW1lbnRFZGl0LmlzKGNoYW5nZSk7XHJcbiAgICAgIH1cclxuICAgIH0pKTtcclxuICB9XHJcbiAgV29ya3NwYWNlRWRpdDIuaXMgPSBpcztcclxufSkoV29ya3NwYWNlRWRpdCB8fCAoV29ya3NwYWNlRWRpdCA9IHt9KSk7XHJcbnZhciBUZXh0RG9jdW1lbnRJZGVudGlmaWVyO1xyXG4oZnVuY3Rpb24oVGV4dERvY3VtZW50SWRlbnRpZmllcjIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUodXJpKSB7XHJcbiAgICByZXR1cm4geyB1cmkgfTtcclxuICB9XHJcbiAgVGV4dERvY3VtZW50SWRlbnRpZmllcjIuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBsZXQgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMuZGVmaW5lZChjYW5kaWRhdGUpICYmIElzLnN0cmluZyhjYW5kaWRhdGUudXJpKTtcclxuICB9XHJcbiAgVGV4dERvY3VtZW50SWRlbnRpZmllcjIuaXMgPSBpcztcclxufSkoVGV4dERvY3VtZW50SWRlbnRpZmllciB8fCAoVGV4dERvY3VtZW50SWRlbnRpZmllciA9IHt9KSk7XHJcbnZhciBWZXJzaW9uZWRUZXh0RG9jdW1lbnRJZGVudGlmaWVyO1xyXG4oZnVuY3Rpb24oVmVyc2lvbmVkVGV4dERvY3VtZW50SWRlbnRpZmllcjIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUodXJpLCB2ZXJzaW9uKSB7XHJcbiAgICByZXR1cm4geyB1cmksIHZlcnNpb24gfTtcclxuICB9XHJcbiAgVmVyc2lvbmVkVGV4dERvY3VtZW50SWRlbnRpZmllcjIuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBsZXQgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMuZGVmaW5lZChjYW5kaWRhdGUpICYmIElzLnN0cmluZyhjYW5kaWRhdGUudXJpKSAmJiBJcy5pbnRlZ2VyKGNhbmRpZGF0ZS52ZXJzaW9uKTtcclxuICB9XHJcbiAgVmVyc2lvbmVkVGV4dERvY3VtZW50SWRlbnRpZmllcjIuaXMgPSBpcztcclxufSkoVmVyc2lvbmVkVGV4dERvY3VtZW50SWRlbnRpZmllciB8fCAoVmVyc2lvbmVkVGV4dERvY3VtZW50SWRlbnRpZmllciA9IHt9KSk7XHJcbnZhciBPcHRpb25hbFZlcnNpb25lZFRleHREb2N1bWVudElkZW50aWZpZXI7XHJcbihmdW5jdGlvbihPcHRpb25hbFZlcnNpb25lZFRleHREb2N1bWVudElkZW50aWZpZXIyKSB7XHJcbiAgZnVuY3Rpb24gY3JlYXRlKHVyaSwgdmVyc2lvbikge1xyXG4gICAgcmV0dXJuIHsgdXJpLCB2ZXJzaW9uIH07XHJcbiAgfVxyXG4gIE9wdGlvbmFsVmVyc2lvbmVkVGV4dERvY3VtZW50SWRlbnRpZmllcjIuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBsZXQgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMuZGVmaW5lZChjYW5kaWRhdGUpICYmIElzLnN0cmluZyhjYW5kaWRhdGUudXJpKSAmJiAoY2FuZGlkYXRlLnZlcnNpb24gPT09IG51bGwgfHwgSXMuaW50ZWdlcihjYW5kaWRhdGUudmVyc2lvbikpO1xyXG4gIH1cclxuICBPcHRpb25hbFZlcnNpb25lZFRleHREb2N1bWVudElkZW50aWZpZXIyLmlzID0gaXM7XHJcbn0pKE9wdGlvbmFsVmVyc2lvbmVkVGV4dERvY3VtZW50SWRlbnRpZmllciB8fCAoT3B0aW9uYWxWZXJzaW9uZWRUZXh0RG9jdW1lbnRJZGVudGlmaWVyID0ge30pKTtcclxudmFyIFRleHREb2N1bWVudEl0ZW07XHJcbihmdW5jdGlvbihUZXh0RG9jdW1lbnRJdGVtMikge1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZSh1cmksIGxhbmd1YWdlSWQsIHZlcnNpb24sIHRleHQpIHtcclxuICAgIHJldHVybiB7IHVyaSwgbGFuZ3VhZ2VJZCwgdmVyc2lvbiwgdGV4dCB9O1xyXG4gIH1cclxuICBUZXh0RG9jdW1lbnRJdGVtMi5jcmVhdGUgPSBjcmVhdGU7XHJcbiAgZnVuY3Rpb24gaXModmFsdWUpIHtcclxuICAgIGxldCBjYW5kaWRhdGUgPSB2YWx1ZTtcclxuICAgIHJldHVybiBJcy5kZWZpbmVkKGNhbmRpZGF0ZSkgJiYgSXMuc3RyaW5nKGNhbmRpZGF0ZS51cmkpICYmIElzLnN0cmluZyhjYW5kaWRhdGUubGFuZ3VhZ2VJZCkgJiYgSXMuaW50ZWdlcihjYW5kaWRhdGUudmVyc2lvbikgJiYgSXMuc3RyaW5nKGNhbmRpZGF0ZS50ZXh0KTtcclxuICB9XHJcbiAgVGV4dERvY3VtZW50SXRlbTIuaXMgPSBpcztcclxufSkoVGV4dERvY3VtZW50SXRlbSB8fCAoVGV4dERvY3VtZW50SXRlbSA9IHt9KSk7XHJcbnZhciBNYXJrdXBLaW5kO1xyXG4oZnVuY3Rpb24oTWFya3VwS2luZDIpIHtcclxuICBNYXJrdXBLaW5kMi5QbGFpblRleHQgPSBcInBsYWludGV4dFwiO1xyXG4gIE1hcmt1cEtpbmQyLk1hcmtkb3duID0gXCJtYXJrZG93blwiO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBjb25zdCBjYW5kaWRhdGUgPSB2YWx1ZTtcclxuICAgIHJldHVybiBjYW5kaWRhdGUgPT09IE1hcmt1cEtpbmQyLlBsYWluVGV4dCB8fCBjYW5kaWRhdGUgPT09IE1hcmt1cEtpbmQyLk1hcmtkb3duO1xyXG4gIH1cclxuICBNYXJrdXBLaW5kMi5pcyA9IGlzO1xyXG59KShNYXJrdXBLaW5kIHx8IChNYXJrdXBLaW5kID0ge30pKTtcclxudmFyIE1hcmt1cENvbnRlbnQ7XHJcbihmdW5jdGlvbihNYXJrdXBDb250ZW50Mikge1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBjb25zdCBjYW5kaWRhdGUgPSB2YWx1ZTtcclxuICAgIHJldHVybiBJcy5vYmplY3RMaXRlcmFsKHZhbHVlKSAmJiBNYXJrdXBLaW5kLmlzKGNhbmRpZGF0ZS5raW5kKSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLnZhbHVlKTtcclxuICB9XHJcbiAgTWFya3VwQ29udGVudDIuaXMgPSBpcztcclxufSkoTWFya3VwQ29udGVudCB8fCAoTWFya3VwQ29udGVudCA9IHt9KSk7XHJcbnZhciBDb21wbGV0aW9uSXRlbUtpbmQ7XHJcbihmdW5jdGlvbihDb21wbGV0aW9uSXRlbUtpbmQyKSB7XHJcbiAgQ29tcGxldGlvbkl0ZW1LaW5kMi5UZXh0ID0gMTtcclxuICBDb21wbGV0aW9uSXRlbUtpbmQyLk1ldGhvZCA9IDI7XHJcbiAgQ29tcGxldGlvbkl0ZW1LaW5kMi5GdW5jdGlvbiA9IDM7XHJcbiAgQ29tcGxldGlvbkl0ZW1LaW5kMi5Db25zdHJ1Y3RvciA9IDQ7XHJcbiAgQ29tcGxldGlvbkl0ZW1LaW5kMi5GaWVsZCA9IDU7XHJcbiAgQ29tcGxldGlvbkl0ZW1LaW5kMi5WYXJpYWJsZSA9IDY7XHJcbiAgQ29tcGxldGlvbkl0ZW1LaW5kMi5DbGFzcyA9IDc7XHJcbiAgQ29tcGxldGlvbkl0ZW1LaW5kMi5JbnRlcmZhY2UgPSA4O1xyXG4gIENvbXBsZXRpb25JdGVtS2luZDIuTW9kdWxlID0gOTtcclxuICBDb21wbGV0aW9uSXRlbUtpbmQyLlByb3BlcnR5ID0gMTA7XHJcbiAgQ29tcGxldGlvbkl0ZW1LaW5kMi5Vbml0ID0gMTE7XHJcbiAgQ29tcGxldGlvbkl0ZW1LaW5kMi5WYWx1ZSA9IDEyO1xyXG4gIENvbXBsZXRpb25JdGVtS2luZDIuRW51bSA9IDEzO1xyXG4gIENvbXBsZXRpb25JdGVtS2luZDIuS2V5d29yZCA9IDE0O1xyXG4gIENvbXBsZXRpb25JdGVtS2luZDIuU25pcHBldCA9IDE1O1xyXG4gIENvbXBsZXRpb25JdGVtS2luZDIuQ29sb3IgPSAxNjtcclxuICBDb21wbGV0aW9uSXRlbUtpbmQyLkZpbGUgPSAxNztcclxuICBDb21wbGV0aW9uSXRlbUtpbmQyLlJlZmVyZW5jZSA9IDE4O1xyXG4gIENvbXBsZXRpb25JdGVtS2luZDIuRm9sZGVyID0gMTk7XHJcbiAgQ29tcGxldGlvbkl0ZW1LaW5kMi5FbnVtTWVtYmVyID0gMjA7XHJcbiAgQ29tcGxldGlvbkl0ZW1LaW5kMi5Db25zdGFudCA9IDIxO1xyXG4gIENvbXBsZXRpb25JdGVtS2luZDIuU3RydWN0ID0gMjI7XHJcbiAgQ29tcGxldGlvbkl0ZW1LaW5kMi5FdmVudCA9IDIzO1xyXG4gIENvbXBsZXRpb25JdGVtS2luZDIuT3BlcmF0b3IgPSAyNDtcclxuICBDb21wbGV0aW9uSXRlbUtpbmQyLlR5cGVQYXJhbWV0ZXIgPSAyNTtcclxufSkoQ29tcGxldGlvbkl0ZW1LaW5kIHx8IChDb21wbGV0aW9uSXRlbUtpbmQgPSB7fSkpO1xyXG52YXIgSW5zZXJ0VGV4dEZvcm1hdDtcclxuKGZ1bmN0aW9uKEluc2VydFRleHRGb3JtYXQyKSB7XHJcbiAgSW5zZXJ0VGV4dEZvcm1hdDIuUGxhaW5UZXh0ID0gMTtcclxuICBJbnNlcnRUZXh0Rm9ybWF0Mi5TbmlwcGV0ID0gMjtcclxufSkoSW5zZXJ0VGV4dEZvcm1hdCB8fCAoSW5zZXJ0VGV4dEZvcm1hdCA9IHt9KSk7XHJcbnZhciBDb21wbGV0aW9uSXRlbVRhZztcclxuKGZ1bmN0aW9uKENvbXBsZXRpb25JdGVtVGFnMikge1xyXG4gIENvbXBsZXRpb25JdGVtVGFnMi5EZXByZWNhdGVkID0gMTtcclxufSkoQ29tcGxldGlvbkl0ZW1UYWcgfHwgKENvbXBsZXRpb25JdGVtVGFnID0ge30pKTtcclxudmFyIEluc2VydFJlcGxhY2VFZGl0O1xyXG4oZnVuY3Rpb24oSW5zZXJ0UmVwbGFjZUVkaXQyKSB7XHJcbiAgZnVuY3Rpb24gY3JlYXRlKG5ld1RleHQsIGluc2VydCwgcmVwbGFjZSkge1xyXG4gICAgcmV0dXJuIHsgbmV3VGV4dCwgaW5zZXJ0LCByZXBsYWNlIH07XHJcbiAgfVxyXG4gIEluc2VydFJlcGxhY2VFZGl0Mi5jcmVhdGUgPSBjcmVhdGU7XHJcbiAgZnVuY3Rpb24gaXModmFsdWUpIHtcclxuICAgIGNvbnN0IGNhbmRpZGF0ZSA9IHZhbHVlO1xyXG4gICAgcmV0dXJuIGNhbmRpZGF0ZSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLm5ld1RleHQpICYmIFJhbmdlLmlzKGNhbmRpZGF0ZS5pbnNlcnQpICYmIFJhbmdlLmlzKGNhbmRpZGF0ZS5yZXBsYWNlKTtcclxuICB9XHJcbiAgSW5zZXJ0UmVwbGFjZUVkaXQyLmlzID0gaXM7XHJcbn0pKEluc2VydFJlcGxhY2VFZGl0IHx8IChJbnNlcnRSZXBsYWNlRWRpdCA9IHt9KSk7XHJcbnZhciBJbnNlcnRUZXh0TW9kZTtcclxuKGZ1bmN0aW9uKEluc2VydFRleHRNb2RlMikge1xyXG4gIEluc2VydFRleHRNb2RlMi5hc0lzID0gMTtcclxuICBJbnNlcnRUZXh0TW9kZTIuYWRqdXN0SW5kZW50YXRpb24gPSAyO1xyXG59KShJbnNlcnRUZXh0TW9kZSB8fCAoSW5zZXJ0VGV4dE1vZGUgPSB7fSkpO1xyXG52YXIgQ29tcGxldGlvbkl0ZW1MYWJlbERldGFpbHM7XHJcbihmdW5jdGlvbihDb21wbGV0aW9uSXRlbUxhYmVsRGV0YWlsczIpIHtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgY29uc3QgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gY2FuZGlkYXRlICYmIChJcy5zdHJpbmcoY2FuZGlkYXRlLmRldGFpbCkgfHwgY2FuZGlkYXRlLmRldGFpbCA9PT0gdm9pZCAwKSAmJiAoSXMuc3RyaW5nKGNhbmRpZGF0ZS5kZXNjcmlwdGlvbikgfHwgY2FuZGlkYXRlLmRlc2NyaXB0aW9uID09PSB2b2lkIDApO1xyXG4gIH1cclxuICBDb21wbGV0aW9uSXRlbUxhYmVsRGV0YWlsczIuaXMgPSBpcztcclxufSkoQ29tcGxldGlvbkl0ZW1MYWJlbERldGFpbHMgfHwgKENvbXBsZXRpb25JdGVtTGFiZWxEZXRhaWxzID0ge30pKTtcclxudmFyIENvbXBsZXRpb25JdGVtO1xyXG4oZnVuY3Rpb24oQ29tcGxldGlvbkl0ZW0yKSB7XHJcbiAgZnVuY3Rpb24gY3JlYXRlKGxhYmVsKSB7XHJcbiAgICByZXR1cm4geyBsYWJlbCB9O1xyXG4gIH1cclxuICBDb21wbGV0aW9uSXRlbTIuY3JlYXRlID0gY3JlYXRlO1xyXG59KShDb21wbGV0aW9uSXRlbSB8fCAoQ29tcGxldGlvbkl0ZW0gPSB7fSkpO1xyXG52YXIgQ29tcGxldGlvbkxpc3Q7XHJcbihmdW5jdGlvbihDb21wbGV0aW9uTGlzdDIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUoaXRlbXMsIGlzSW5jb21wbGV0ZSkge1xyXG4gICAgcmV0dXJuIHsgaXRlbXM6IGl0ZW1zID8gaXRlbXMgOiBbXSwgaXNJbmNvbXBsZXRlOiAhIWlzSW5jb21wbGV0ZSB9O1xyXG4gIH1cclxuICBDb21wbGV0aW9uTGlzdDIuY3JlYXRlID0gY3JlYXRlO1xyXG59KShDb21wbGV0aW9uTGlzdCB8fCAoQ29tcGxldGlvbkxpc3QgPSB7fSkpO1xyXG52YXIgTWFya2VkU3RyaW5nO1xyXG4oZnVuY3Rpb24oTWFya2VkU3RyaW5nMikge1xyXG4gIGZ1bmN0aW9uIGZyb21QbGFpblRleHQocGxhaW5UZXh0KSB7XHJcbiAgICByZXR1cm4gcGxhaW5UZXh0LnJlcGxhY2UoL1tcXFxcYCpfe31bXFxdKCkjK1xcLS4hXS9nLCBcIlxcXFwkJlwiKTtcclxuICB9XHJcbiAgTWFya2VkU3RyaW5nMi5mcm9tUGxhaW5UZXh0ID0gZnJvbVBsYWluVGV4dDtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgY29uc3QgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMuc3RyaW5nKGNhbmRpZGF0ZSkgfHwgSXMub2JqZWN0TGl0ZXJhbChjYW5kaWRhdGUpICYmIElzLnN0cmluZyhjYW5kaWRhdGUubGFuZ3VhZ2UpICYmIElzLnN0cmluZyhjYW5kaWRhdGUudmFsdWUpO1xyXG4gIH1cclxuICBNYXJrZWRTdHJpbmcyLmlzID0gaXM7XHJcbn0pKE1hcmtlZFN0cmluZyB8fCAoTWFya2VkU3RyaW5nID0ge30pKTtcclxudmFyIEhvdmVyO1xyXG4oZnVuY3Rpb24oSG92ZXIyKSB7XHJcbiAgZnVuY3Rpb24gaXModmFsdWUpIHtcclxuICAgIGxldCBjYW5kaWRhdGUgPSB2YWx1ZTtcclxuICAgIHJldHVybiAhIWNhbmRpZGF0ZSAmJiBJcy5vYmplY3RMaXRlcmFsKGNhbmRpZGF0ZSkgJiYgKE1hcmt1cENvbnRlbnQuaXMoY2FuZGlkYXRlLmNvbnRlbnRzKSB8fCBNYXJrZWRTdHJpbmcuaXMoY2FuZGlkYXRlLmNvbnRlbnRzKSB8fCBJcy50eXBlZEFycmF5KGNhbmRpZGF0ZS5jb250ZW50cywgTWFya2VkU3RyaW5nLmlzKSkgJiYgKHZhbHVlLnJhbmdlID09PSB2b2lkIDAgfHwgUmFuZ2UuaXModmFsdWUucmFuZ2UpKTtcclxuICB9XHJcbiAgSG92ZXIyLmlzID0gaXM7XHJcbn0pKEhvdmVyIHx8IChIb3ZlciA9IHt9KSk7XHJcbnZhciBQYXJhbWV0ZXJJbmZvcm1hdGlvbjtcclxuKGZ1bmN0aW9uKFBhcmFtZXRlckluZm9ybWF0aW9uMikge1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZShsYWJlbCwgZG9jdW1lbnRhdGlvbikge1xyXG4gICAgcmV0dXJuIGRvY3VtZW50YXRpb24gPyB7IGxhYmVsLCBkb2N1bWVudGF0aW9uIH0gOiB7IGxhYmVsIH07XHJcbiAgfVxyXG4gIFBhcmFtZXRlckluZm9ybWF0aW9uMi5jcmVhdGUgPSBjcmVhdGU7XHJcbn0pKFBhcmFtZXRlckluZm9ybWF0aW9uIHx8IChQYXJhbWV0ZXJJbmZvcm1hdGlvbiA9IHt9KSk7XHJcbnZhciBTaWduYXR1cmVJbmZvcm1hdGlvbjtcclxuKGZ1bmN0aW9uKFNpZ25hdHVyZUluZm9ybWF0aW9uMikge1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZShsYWJlbCwgZG9jdW1lbnRhdGlvbiwgLi4ucGFyYW1ldGVycykge1xyXG4gICAgbGV0IHJlc3VsdCA9IHsgbGFiZWwgfTtcclxuICAgIGlmIChJcy5kZWZpbmVkKGRvY3VtZW50YXRpb24pKSB7XHJcbiAgICAgIHJlc3VsdC5kb2N1bWVudGF0aW9uID0gZG9jdW1lbnRhdGlvbjtcclxuICAgIH1cclxuICAgIGlmIChJcy5kZWZpbmVkKHBhcmFtZXRlcnMpKSB7XHJcbiAgICAgIHJlc3VsdC5wYXJhbWV0ZXJzID0gcGFyYW1ldGVycztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHJlc3VsdC5wYXJhbWV0ZXJzID0gW107XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxuICBTaWduYXR1cmVJbmZvcm1hdGlvbjIuY3JlYXRlID0gY3JlYXRlO1xyXG59KShTaWduYXR1cmVJbmZvcm1hdGlvbiB8fCAoU2lnbmF0dXJlSW5mb3JtYXRpb24gPSB7fSkpO1xyXG52YXIgRG9jdW1lbnRIaWdobGlnaHRLaW5kO1xyXG4oZnVuY3Rpb24oRG9jdW1lbnRIaWdobGlnaHRLaW5kMikge1xyXG4gIERvY3VtZW50SGlnaGxpZ2h0S2luZDIuVGV4dCA9IDE7XHJcbiAgRG9jdW1lbnRIaWdobGlnaHRLaW5kMi5SZWFkID0gMjtcclxuICBEb2N1bWVudEhpZ2hsaWdodEtpbmQyLldyaXRlID0gMztcclxufSkoRG9jdW1lbnRIaWdobGlnaHRLaW5kIHx8IChEb2N1bWVudEhpZ2hsaWdodEtpbmQgPSB7fSkpO1xyXG52YXIgRG9jdW1lbnRIaWdobGlnaHQ7XHJcbihmdW5jdGlvbihEb2N1bWVudEhpZ2hsaWdodDIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUocmFuZ2UsIGtpbmQpIHtcclxuICAgIGxldCByZXN1bHQgPSB7IHJhbmdlIH07XHJcbiAgICBpZiAoSXMubnVtYmVyKGtpbmQpKSB7XHJcbiAgICAgIHJlc3VsdC5raW5kID0ga2luZDtcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG4gIERvY3VtZW50SGlnaGxpZ2h0Mi5jcmVhdGUgPSBjcmVhdGU7XHJcbn0pKERvY3VtZW50SGlnaGxpZ2h0IHx8IChEb2N1bWVudEhpZ2hsaWdodCA9IHt9KSk7XHJcbnZhciBTeW1ib2xLaW5kO1xyXG4oZnVuY3Rpb24oU3ltYm9sS2luZDIpIHtcclxuICBTeW1ib2xLaW5kMi5GaWxlID0gMTtcclxuICBTeW1ib2xLaW5kMi5Nb2R1bGUgPSAyO1xyXG4gIFN5bWJvbEtpbmQyLk5hbWVzcGFjZSA9IDM7XHJcbiAgU3ltYm9sS2luZDIuUGFja2FnZSA9IDQ7XHJcbiAgU3ltYm9sS2luZDIuQ2xhc3MgPSA1O1xyXG4gIFN5bWJvbEtpbmQyLk1ldGhvZCA9IDY7XHJcbiAgU3ltYm9sS2luZDIuUHJvcGVydHkgPSA3O1xyXG4gIFN5bWJvbEtpbmQyLkZpZWxkID0gODtcclxuICBTeW1ib2xLaW5kMi5Db25zdHJ1Y3RvciA9IDk7XHJcbiAgU3ltYm9sS2luZDIuRW51bSA9IDEwO1xyXG4gIFN5bWJvbEtpbmQyLkludGVyZmFjZSA9IDExO1xyXG4gIFN5bWJvbEtpbmQyLkZ1bmN0aW9uID0gMTI7XHJcbiAgU3ltYm9sS2luZDIuVmFyaWFibGUgPSAxMztcclxuICBTeW1ib2xLaW5kMi5Db25zdGFudCA9IDE0O1xyXG4gIFN5bWJvbEtpbmQyLlN0cmluZyA9IDE1O1xyXG4gIFN5bWJvbEtpbmQyLk51bWJlciA9IDE2O1xyXG4gIFN5bWJvbEtpbmQyLkJvb2xlYW4gPSAxNztcclxuICBTeW1ib2xLaW5kMi5BcnJheSA9IDE4O1xyXG4gIFN5bWJvbEtpbmQyLk9iamVjdCA9IDE5O1xyXG4gIFN5bWJvbEtpbmQyLktleSA9IDIwO1xyXG4gIFN5bWJvbEtpbmQyLk51bGwgPSAyMTtcclxuICBTeW1ib2xLaW5kMi5FbnVtTWVtYmVyID0gMjI7XHJcbiAgU3ltYm9sS2luZDIuU3RydWN0ID0gMjM7XHJcbiAgU3ltYm9sS2luZDIuRXZlbnQgPSAyNDtcclxuICBTeW1ib2xLaW5kMi5PcGVyYXRvciA9IDI1O1xyXG4gIFN5bWJvbEtpbmQyLlR5cGVQYXJhbWV0ZXIgPSAyNjtcclxufSkoU3ltYm9sS2luZCB8fCAoU3ltYm9sS2luZCA9IHt9KSk7XHJcbnZhciBTeW1ib2xUYWc7XHJcbihmdW5jdGlvbihTeW1ib2xUYWcyKSB7XHJcbiAgU3ltYm9sVGFnMi5EZXByZWNhdGVkID0gMTtcclxufSkoU3ltYm9sVGFnIHx8IChTeW1ib2xUYWcgPSB7fSkpO1xyXG52YXIgU3ltYm9sSW5mb3JtYXRpb247XHJcbihmdW5jdGlvbihTeW1ib2xJbmZvcm1hdGlvbjIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUobmFtZSwga2luZCwgcmFuZ2UsIHVyaSwgY29udGFpbmVyTmFtZSkge1xyXG4gICAgbGV0IHJlc3VsdCA9IHtcclxuICAgICAgbmFtZSxcclxuICAgICAga2luZCxcclxuICAgICAgbG9jYXRpb246IHsgdXJpLCByYW5nZSB9XHJcbiAgICB9O1xyXG4gICAgaWYgKGNvbnRhaW5lck5hbWUpIHtcclxuICAgICAgcmVzdWx0LmNvbnRhaW5lck5hbWUgPSBjb250YWluZXJOYW1lO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9XHJcbiAgU3ltYm9sSW5mb3JtYXRpb24yLmNyZWF0ZSA9IGNyZWF0ZTtcclxufSkoU3ltYm9sSW5mb3JtYXRpb24gfHwgKFN5bWJvbEluZm9ybWF0aW9uID0ge30pKTtcclxudmFyIFdvcmtzcGFjZVN5bWJvbDtcclxuKGZ1bmN0aW9uKFdvcmtzcGFjZVN5bWJvbDIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUobmFtZSwga2luZCwgdXJpLCByYW5nZSkge1xyXG4gICAgcmV0dXJuIHJhbmdlICE9PSB2b2lkIDAgPyB7IG5hbWUsIGtpbmQsIGxvY2F0aW9uOiB7IHVyaSwgcmFuZ2UgfSB9IDogeyBuYW1lLCBraW5kLCBsb2NhdGlvbjogeyB1cmkgfSB9O1xyXG4gIH1cclxuICBXb3Jrc3BhY2VTeW1ib2wyLmNyZWF0ZSA9IGNyZWF0ZTtcclxufSkoV29ya3NwYWNlU3ltYm9sIHx8IChXb3Jrc3BhY2VTeW1ib2wgPSB7fSkpO1xyXG52YXIgRG9jdW1lbnRTeW1ib2w7XHJcbihmdW5jdGlvbihEb2N1bWVudFN5bWJvbDIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUobmFtZSwgZGV0YWlsLCBraW5kLCByYW5nZSwgc2VsZWN0aW9uUmFuZ2UsIGNoaWxkcmVuKSB7XHJcbiAgICBsZXQgcmVzdWx0ID0ge1xyXG4gICAgICBuYW1lLFxyXG4gICAgICBkZXRhaWwsXHJcbiAgICAgIGtpbmQsXHJcbiAgICAgIHJhbmdlLFxyXG4gICAgICBzZWxlY3Rpb25SYW5nZVxyXG4gICAgfTtcclxuICAgIGlmIChjaGlsZHJlbiAhPT0gdm9pZCAwKSB7XHJcbiAgICAgIHJlc3VsdC5jaGlsZHJlbiA9IGNoaWxkcmVuO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9XHJcbiAgRG9jdW1lbnRTeW1ib2wyLmNyZWF0ZSA9IGNyZWF0ZTtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgbGV0IGNhbmRpZGF0ZSA9IHZhbHVlO1xyXG4gICAgcmV0dXJuIGNhbmRpZGF0ZSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLm5hbWUpICYmIElzLm51bWJlcihjYW5kaWRhdGUua2luZCkgJiYgUmFuZ2UuaXMoY2FuZGlkYXRlLnJhbmdlKSAmJiBSYW5nZS5pcyhjYW5kaWRhdGUuc2VsZWN0aW9uUmFuZ2UpICYmIChjYW5kaWRhdGUuZGV0YWlsID09PSB2b2lkIDAgfHwgSXMuc3RyaW5nKGNhbmRpZGF0ZS5kZXRhaWwpKSAmJiAoY2FuZGlkYXRlLmRlcHJlY2F0ZWQgPT09IHZvaWQgMCB8fCBJcy5ib29sZWFuKGNhbmRpZGF0ZS5kZXByZWNhdGVkKSkgJiYgKGNhbmRpZGF0ZS5jaGlsZHJlbiA9PT0gdm9pZCAwIHx8IEFycmF5LmlzQXJyYXkoY2FuZGlkYXRlLmNoaWxkcmVuKSkgJiYgKGNhbmRpZGF0ZS50YWdzID09PSB2b2lkIDAgfHwgQXJyYXkuaXNBcnJheShjYW5kaWRhdGUudGFncykpO1xyXG4gIH1cclxuICBEb2N1bWVudFN5bWJvbDIuaXMgPSBpcztcclxufSkoRG9jdW1lbnRTeW1ib2wgfHwgKERvY3VtZW50U3ltYm9sID0ge30pKTtcclxudmFyIENvZGVBY3Rpb25LaW5kO1xyXG4oZnVuY3Rpb24oQ29kZUFjdGlvbktpbmQyKSB7XHJcbiAgQ29kZUFjdGlvbktpbmQyLkVtcHR5ID0gXCJcIjtcclxuICBDb2RlQWN0aW9uS2luZDIuUXVpY2tGaXggPSBcInF1aWNrZml4XCI7XHJcbiAgQ29kZUFjdGlvbktpbmQyLlJlZmFjdG9yID0gXCJyZWZhY3RvclwiO1xyXG4gIENvZGVBY3Rpb25LaW5kMi5SZWZhY3RvckV4dHJhY3QgPSBcInJlZmFjdG9yLmV4dHJhY3RcIjtcclxuICBDb2RlQWN0aW9uS2luZDIuUmVmYWN0b3JJbmxpbmUgPSBcInJlZmFjdG9yLmlubGluZVwiO1xyXG4gIENvZGVBY3Rpb25LaW5kMi5SZWZhY3RvclJld3JpdGUgPSBcInJlZmFjdG9yLnJld3JpdGVcIjtcclxuICBDb2RlQWN0aW9uS2luZDIuU291cmNlID0gXCJzb3VyY2VcIjtcclxuICBDb2RlQWN0aW9uS2luZDIuU291cmNlT3JnYW5pemVJbXBvcnRzID0gXCJzb3VyY2Uub3JnYW5pemVJbXBvcnRzXCI7XHJcbiAgQ29kZUFjdGlvbktpbmQyLlNvdXJjZUZpeEFsbCA9IFwic291cmNlLmZpeEFsbFwiO1xyXG59KShDb2RlQWN0aW9uS2luZCB8fCAoQ29kZUFjdGlvbktpbmQgPSB7fSkpO1xyXG52YXIgQ29kZUFjdGlvblRyaWdnZXJLaW5kO1xyXG4oZnVuY3Rpb24oQ29kZUFjdGlvblRyaWdnZXJLaW5kMikge1xyXG4gIENvZGVBY3Rpb25UcmlnZ2VyS2luZDIuSW52b2tlZCA9IDE7XHJcbiAgQ29kZUFjdGlvblRyaWdnZXJLaW5kMi5BdXRvbWF0aWMgPSAyO1xyXG59KShDb2RlQWN0aW9uVHJpZ2dlcktpbmQgfHwgKENvZGVBY3Rpb25UcmlnZ2VyS2luZCA9IHt9KSk7XHJcbnZhciBDb2RlQWN0aW9uQ29udGV4dDtcclxuKGZ1bmN0aW9uKENvZGVBY3Rpb25Db250ZXh0Mikge1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZShkaWFnbm9zdGljcywgb25seSwgdHJpZ2dlcktpbmQpIHtcclxuICAgIGxldCByZXN1bHQgPSB7IGRpYWdub3N0aWNzIH07XHJcbiAgICBpZiAob25seSAhPT0gdm9pZCAwICYmIG9ubHkgIT09IG51bGwpIHtcclxuICAgICAgcmVzdWx0Lm9ubHkgPSBvbmx5O1xyXG4gICAgfVxyXG4gICAgaWYgKHRyaWdnZXJLaW5kICE9PSB2b2lkIDAgJiYgdHJpZ2dlcktpbmQgIT09IG51bGwpIHtcclxuICAgICAgcmVzdWx0LnRyaWdnZXJLaW5kID0gdHJpZ2dlcktpbmQ7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxuICBDb2RlQWN0aW9uQ29udGV4dDIuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBsZXQgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMuZGVmaW5lZChjYW5kaWRhdGUpICYmIElzLnR5cGVkQXJyYXkoY2FuZGlkYXRlLmRpYWdub3N0aWNzLCBEaWFnbm9zdGljLmlzKSAmJiAoY2FuZGlkYXRlLm9ubHkgPT09IHZvaWQgMCB8fCBJcy50eXBlZEFycmF5KGNhbmRpZGF0ZS5vbmx5LCBJcy5zdHJpbmcpKSAmJiAoY2FuZGlkYXRlLnRyaWdnZXJLaW5kID09PSB2b2lkIDAgfHwgY2FuZGlkYXRlLnRyaWdnZXJLaW5kID09PSBDb2RlQWN0aW9uVHJpZ2dlcktpbmQuSW52b2tlZCB8fCBjYW5kaWRhdGUudHJpZ2dlcktpbmQgPT09IENvZGVBY3Rpb25UcmlnZ2VyS2luZC5BdXRvbWF0aWMpO1xyXG4gIH1cclxuICBDb2RlQWN0aW9uQ29udGV4dDIuaXMgPSBpcztcclxufSkoQ29kZUFjdGlvbkNvbnRleHQgfHwgKENvZGVBY3Rpb25Db250ZXh0ID0ge30pKTtcclxudmFyIENvZGVBY3Rpb247XHJcbihmdW5jdGlvbihDb2RlQWN0aW9uMikge1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZSh0aXRsZSwga2luZE9yQ29tbWFuZE9yRWRpdCwga2luZCkge1xyXG4gICAgbGV0IHJlc3VsdCA9IHsgdGl0bGUgfTtcclxuICAgIGxldCBjaGVja0tpbmQgPSB0cnVlO1xyXG4gICAgaWYgKHR5cGVvZiBraW5kT3JDb21tYW5kT3JFZGl0ID09PSBcInN0cmluZ1wiKSB7XHJcbiAgICAgIGNoZWNrS2luZCA9IGZhbHNlO1xyXG4gICAgICByZXN1bHQua2luZCA9IGtpbmRPckNvbW1hbmRPckVkaXQ7XHJcbiAgICB9IGVsc2UgaWYgKENvbW1hbmQuaXMoa2luZE9yQ29tbWFuZE9yRWRpdCkpIHtcclxuICAgICAgcmVzdWx0LmNvbW1hbmQgPSBraW5kT3JDb21tYW5kT3JFZGl0O1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgcmVzdWx0LmVkaXQgPSBraW5kT3JDb21tYW5kT3JFZGl0O1xyXG4gICAgfVxyXG4gICAgaWYgKGNoZWNrS2luZCAmJiBraW5kICE9PSB2b2lkIDApIHtcclxuICAgICAgcmVzdWx0LmtpbmQgPSBraW5kO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9XHJcbiAgQ29kZUFjdGlvbjIuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBsZXQgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gY2FuZGlkYXRlICYmIElzLnN0cmluZyhjYW5kaWRhdGUudGl0bGUpICYmIChjYW5kaWRhdGUuZGlhZ25vc3RpY3MgPT09IHZvaWQgMCB8fCBJcy50eXBlZEFycmF5KGNhbmRpZGF0ZS5kaWFnbm9zdGljcywgRGlhZ25vc3RpYy5pcykpICYmIChjYW5kaWRhdGUua2luZCA9PT0gdm9pZCAwIHx8IElzLnN0cmluZyhjYW5kaWRhdGUua2luZCkpICYmIChjYW5kaWRhdGUuZWRpdCAhPT0gdm9pZCAwIHx8IGNhbmRpZGF0ZS5jb21tYW5kICE9PSB2b2lkIDApICYmIChjYW5kaWRhdGUuY29tbWFuZCA9PT0gdm9pZCAwIHx8IENvbW1hbmQuaXMoY2FuZGlkYXRlLmNvbW1hbmQpKSAmJiAoY2FuZGlkYXRlLmlzUHJlZmVycmVkID09PSB2b2lkIDAgfHwgSXMuYm9vbGVhbihjYW5kaWRhdGUuaXNQcmVmZXJyZWQpKSAmJiAoY2FuZGlkYXRlLmVkaXQgPT09IHZvaWQgMCB8fCBXb3Jrc3BhY2VFZGl0LmlzKGNhbmRpZGF0ZS5lZGl0KSk7XHJcbiAgfVxyXG4gIENvZGVBY3Rpb24yLmlzID0gaXM7XHJcbn0pKENvZGVBY3Rpb24gfHwgKENvZGVBY3Rpb24gPSB7fSkpO1xyXG52YXIgQ29kZUxlbnM7XHJcbihmdW5jdGlvbihDb2RlTGVuczIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUocmFuZ2UsIGRhdGEpIHtcclxuICAgIGxldCByZXN1bHQgPSB7IHJhbmdlIH07XHJcbiAgICBpZiAoSXMuZGVmaW5lZChkYXRhKSkge1xyXG4gICAgICByZXN1bHQuZGF0YSA9IGRhdGE7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gcmVzdWx0O1xyXG4gIH1cclxuICBDb2RlTGVuczIuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBsZXQgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMuZGVmaW5lZChjYW5kaWRhdGUpICYmIFJhbmdlLmlzKGNhbmRpZGF0ZS5yYW5nZSkgJiYgKElzLnVuZGVmaW5lZChjYW5kaWRhdGUuY29tbWFuZCkgfHwgQ29tbWFuZC5pcyhjYW5kaWRhdGUuY29tbWFuZCkpO1xyXG4gIH1cclxuICBDb2RlTGVuczIuaXMgPSBpcztcclxufSkoQ29kZUxlbnMgfHwgKENvZGVMZW5zID0ge30pKTtcclxudmFyIEZvcm1hdHRpbmdPcHRpb25zO1xyXG4oZnVuY3Rpb24oRm9ybWF0dGluZ09wdGlvbnMyKSB7XHJcbiAgZnVuY3Rpb24gY3JlYXRlKHRhYlNpemUsIGluc2VydFNwYWNlcykge1xyXG4gICAgcmV0dXJuIHsgdGFiU2l6ZSwgaW5zZXJ0U3BhY2VzIH07XHJcbiAgfVxyXG4gIEZvcm1hdHRpbmdPcHRpb25zMi5jcmVhdGUgPSBjcmVhdGU7XHJcbiAgZnVuY3Rpb24gaXModmFsdWUpIHtcclxuICAgIGxldCBjYW5kaWRhdGUgPSB2YWx1ZTtcclxuICAgIHJldHVybiBJcy5kZWZpbmVkKGNhbmRpZGF0ZSkgJiYgSXMudWludGVnZXIoY2FuZGlkYXRlLnRhYlNpemUpICYmIElzLmJvb2xlYW4oY2FuZGlkYXRlLmluc2VydFNwYWNlcyk7XHJcbiAgfVxyXG4gIEZvcm1hdHRpbmdPcHRpb25zMi5pcyA9IGlzO1xyXG59KShGb3JtYXR0aW5nT3B0aW9ucyB8fCAoRm9ybWF0dGluZ09wdGlvbnMgPSB7fSkpO1xyXG52YXIgRG9jdW1lbnRMaW5rO1xyXG4oZnVuY3Rpb24oRG9jdW1lbnRMaW5rMikge1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZShyYW5nZSwgdGFyZ2V0LCBkYXRhKSB7XHJcbiAgICByZXR1cm4geyByYW5nZSwgdGFyZ2V0LCBkYXRhIH07XHJcbiAgfVxyXG4gIERvY3VtZW50TGluazIuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBsZXQgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMuZGVmaW5lZChjYW5kaWRhdGUpICYmIFJhbmdlLmlzKGNhbmRpZGF0ZS5yYW5nZSkgJiYgKElzLnVuZGVmaW5lZChjYW5kaWRhdGUudGFyZ2V0KSB8fCBJcy5zdHJpbmcoY2FuZGlkYXRlLnRhcmdldCkpO1xyXG4gIH1cclxuICBEb2N1bWVudExpbmsyLmlzID0gaXM7XHJcbn0pKERvY3VtZW50TGluayB8fCAoRG9jdW1lbnRMaW5rID0ge30pKTtcclxudmFyIFNlbGVjdGlvblJhbmdlO1xyXG4oZnVuY3Rpb24oU2VsZWN0aW9uUmFuZ2UyKSB7XHJcbiAgZnVuY3Rpb24gY3JlYXRlKHJhbmdlLCBwYXJlbnQpIHtcclxuICAgIHJldHVybiB7IHJhbmdlLCBwYXJlbnQgfTtcclxuICB9XHJcbiAgU2VsZWN0aW9uUmFuZ2UyLmNyZWF0ZSA9IGNyZWF0ZTtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgbGV0IGNhbmRpZGF0ZSA9IHZhbHVlO1xyXG4gICAgcmV0dXJuIElzLm9iamVjdExpdGVyYWwoY2FuZGlkYXRlKSAmJiBSYW5nZS5pcyhjYW5kaWRhdGUucmFuZ2UpICYmIChjYW5kaWRhdGUucGFyZW50ID09PSB2b2lkIDAgfHwgU2VsZWN0aW9uUmFuZ2UyLmlzKGNhbmRpZGF0ZS5wYXJlbnQpKTtcclxuICB9XHJcbiAgU2VsZWN0aW9uUmFuZ2UyLmlzID0gaXM7XHJcbn0pKFNlbGVjdGlvblJhbmdlIHx8IChTZWxlY3Rpb25SYW5nZSA9IHt9KSk7XHJcbnZhciBTZW1hbnRpY1Rva2VuVHlwZXM7XHJcbihmdW5jdGlvbihTZW1hbnRpY1Rva2VuVHlwZXMyKSB7XHJcbiAgU2VtYW50aWNUb2tlblR5cGVzMltcIm5hbWVzcGFjZVwiXSA9IFwibmFtZXNwYWNlXCI7XHJcbiAgU2VtYW50aWNUb2tlblR5cGVzMltcInR5cGVcIl0gPSBcInR5cGVcIjtcclxuICBTZW1hbnRpY1Rva2VuVHlwZXMyW1wiY2xhc3NcIl0gPSBcImNsYXNzXCI7XHJcbiAgU2VtYW50aWNUb2tlblR5cGVzMltcImVudW1cIl0gPSBcImVudW1cIjtcclxuICBTZW1hbnRpY1Rva2VuVHlwZXMyW1wiaW50ZXJmYWNlXCJdID0gXCJpbnRlcmZhY2VcIjtcclxuICBTZW1hbnRpY1Rva2VuVHlwZXMyW1wic3RydWN0XCJdID0gXCJzdHJ1Y3RcIjtcclxuICBTZW1hbnRpY1Rva2VuVHlwZXMyW1widHlwZVBhcmFtZXRlclwiXSA9IFwidHlwZVBhcmFtZXRlclwiO1xyXG4gIFNlbWFudGljVG9rZW5UeXBlczJbXCJwYXJhbWV0ZXJcIl0gPSBcInBhcmFtZXRlclwiO1xyXG4gIFNlbWFudGljVG9rZW5UeXBlczJbXCJ2YXJpYWJsZVwiXSA9IFwidmFyaWFibGVcIjtcclxuICBTZW1hbnRpY1Rva2VuVHlwZXMyW1wicHJvcGVydHlcIl0gPSBcInByb3BlcnR5XCI7XHJcbiAgU2VtYW50aWNUb2tlblR5cGVzMltcImVudW1NZW1iZXJcIl0gPSBcImVudW1NZW1iZXJcIjtcclxuICBTZW1hbnRpY1Rva2VuVHlwZXMyW1wiZXZlbnRcIl0gPSBcImV2ZW50XCI7XHJcbiAgU2VtYW50aWNUb2tlblR5cGVzMltcImZ1bmN0aW9uXCJdID0gXCJmdW5jdGlvblwiO1xyXG4gIFNlbWFudGljVG9rZW5UeXBlczJbXCJtZXRob2RcIl0gPSBcIm1ldGhvZFwiO1xyXG4gIFNlbWFudGljVG9rZW5UeXBlczJbXCJtYWNyb1wiXSA9IFwibWFjcm9cIjtcclxuICBTZW1hbnRpY1Rva2VuVHlwZXMyW1wia2V5d29yZFwiXSA9IFwia2V5d29yZFwiO1xyXG4gIFNlbWFudGljVG9rZW5UeXBlczJbXCJtb2RpZmllclwiXSA9IFwibW9kaWZpZXJcIjtcclxuICBTZW1hbnRpY1Rva2VuVHlwZXMyW1wiY29tbWVudFwiXSA9IFwiY29tbWVudFwiO1xyXG4gIFNlbWFudGljVG9rZW5UeXBlczJbXCJzdHJpbmdcIl0gPSBcInN0cmluZ1wiO1xyXG4gIFNlbWFudGljVG9rZW5UeXBlczJbXCJudW1iZXJcIl0gPSBcIm51bWJlclwiO1xyXG4gIFNlbWFudGljVG9rZW5UeXBlczJbXCJyZWdleHBcIl0gPSBcInJlZ2V4cFwiO1xyXG4gIFNlbWFudGljVG9rZW5UeXBlczJbXCJvcGVyYXRvclwiXSA9IFwib3BlcmF0b3JcIjtcclxuICBTZW1hbnRpY1Rva2VuVHlwZXMyW1wiZGVjb3JhdG9yXCJdID0gXCJkZWNvcmF0b3JcIjtcclxufSkoU2VtYW50aWNUb2tlblR5cGVzIHx8IChTZW1hbnRpY1Rva2VuVHlwZXMgPSB7fSkpO1xyXG52YXIgU2VtYW50aWNUb2tlbk1vZGlmaWVycztcclxuKGZ1bmN0aW9uKFNlbWFudGljVG9rZW5Nb2RpZmllcnMyKSB7XHJcbiAgU2VtYW50aWNUb2tlbk1vZGlmaWVyczJbXCJkZWNsYXJhdGlvblwiXSA9IFwiZGVjbGFyYXRpb25cIjtcclxuICBTZW1hbnRpY1Rva2VuTW9kaWZpZXJzMltcImRlZmluaXRpb25cIl0gPSBcImRlZmluaXRpb25cIjtcclxuICBTZW1hbnRpY1Rva2VuTW9kaWZpZXJzMltcInJlYWRvbmx5XCJdID0gXCJyZWFkb25seVwiO1xyXG4gIFNlbWFudGljVG9rZW5Nb2RpZmllcnMyW1wic3RhdGljXCJdID0gXCJzdGF0aWNcIjtcclxuICBTZW1hbnRpY1Rva2VuTW9kaWZpZXJzMltcImRlcHJlY2F0ZWRcIl0gPSBcImRlcHJlY2F0ZWRcIjtcclxuICBTZW1hbnRpY1Rva2VuTW9kaWZpZXJzMltcImFic3RyYWN0XCJdID0gXCJhYnN0cmFjdFwiO1xyXG4gIFNlbWFudGljVG9rZW5Nb2RpZmllcnMyW1wiYXN5bmNcIl0gPSBcImFzeW5jXCI7XHJcbiAgU2VtYW50aWNUb2tlbk1vZGlmaWVyczJbXCJtb2RpZmljYXRpb25cIl0gPSBcIm1vZGlmaWNhdGlvblwiO1xyXG4gIFNlbWFudGljVG9rZW5Nb2RpZmllcnMyW1wiZG9jdW1lbnRhdGlvblwiXSA9IFwiZG9jdW1lbnRhdGlvblwiO1xyXG4gIFNlbWFudGljVG9rZW5Nb2RpZmllcnMyW1wiZGVmYXVsdExpYnJhcnlcIl0gPSBcImRlZmF1bHRMaWJyYXJ5XCI7XHJcbn0pKFNlbWFudGljVG9rZW5Nb2RpZmllcnMgfHwgKFNlbWFudGljVG9rZW5Nb2RpZmllcnMgPSB7fSkpO1xyXG52YXIgU2VtYW50aWNUb2tlbnM7XHJcbihmdW5jdGlvbihTZW1hbnRpY1Rva2VuczIpIHtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgY29uc3QgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMub2JqZWN0TGl0ZXJhbChjYW5kaWRhdGUpICYmIChjYW5kaWRhdGUucmVzdWx0SWQgPT09IHZvaWQgMCB8fCB0eXBlb2YgY2FuZGlkYXRlLnJlc3VsdElkID09PSBcInN0cmluZ1wiKSAmJiBBcnJheS5pc0FycmF5KGNhbmRpZGF0ZS5kYXRhKSAmJiAoY2FuZGlkYXRlLmRhdGEubGVuZ3RoID09PSAwIHx8IHR5cGVvZiBjYW5kaWRhdGUuZGF0YVswXSA9PT0gXCJudW1iZXJcIik7XHJcbiAgfVxyXG4gIFNlbWFudGljVG9rZW5zMi5pcyA9IGlzO1xyXG59KShTZW1hbnRpY1Rva2VucyB8fCAoU2VtYW50aWNUb2tlbnMgPSB7fSkpO1xyXG52YXIgSW5saW5lVmFsdWVUZXh0O1xyXG4oZnVuY3Rpb24oSW5saW5lVmFsdWVUZXh0Mikge1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZShyYW5nZSwgdGV4dCkge1xyXG4gICAgcmV0dXJuIHsgcmFuZ2UsIHRleHQgfTtcclxuICB9XHJcbiAgSW5saW5lVmFsdWVUZXh0Mi5jcmVhdGUgPSBjcmVhdGU7XHJcbiAgZnVuY3Rpb24gaXModmFsdWUpIHtcclxuICAgIGNvbnN0IGNhbmRpZGF0ZSA9IHZhbHVlO1xyXG4gICAgcmV0dXJuIGNhbmRpZGF0ZSAhPT0gdm9pZCAwICYmIGNhbmRpZGF0ZSAhPT0gbnVsbCAmJiBSYW5nZS5pcyhjYW5kaWRhdGUucmFuZ2UpICYmIElzLnN0cmluZyhjYW5kaWRhdGUudGV4dCk7XHJcbiAgfVxyXG4gIElubGluZVZhbHVlVGV4dDIuaXMgPSBpcztcclxufSkoSW5saW5lVmFsdWVUZXh0IHx8IChJbmxpbmVWYWx1ZVRleHQgPSB7fSkpO1xyXG52YXIgSW5saW5lVmFsdWVWYXJpYWJsZUxvb2t1cDtcclxuKGZ1bmN0aW9uKElubGluZVZhbHVlVmFyaWFibGVMb29rdXAyKSB7XHJcbiAgZnVuY3Rpb24gY3JlYXRlKHJhbmdlLCB2YXJpYWJsZU5hbWUsIGNhc2VTZW5zaXRpdmVMb29rdXApIHtcclxuICAgIHJldHVybiB7IHJhbmdlLCB2YXJpYWJsZU5hbWUsIGNhc2VTZW5zaXRpdmVMb29rdXAgfTtcclxuICB9XHJcbiAgSW5saW5lVmFsdWVWYXJpYWJsZUxvb2t1cDIuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBjb25zdCBjYW5kaWRhdGUgPSB2YWx1ZTtcclxuICAgIHJldHVybiBjYW5kaWRhdGUgIT09IHZvaWQgMCAmJiBjYW5kaWRhdGUgIT09IG51bGwgJiYgUmFuZ2UuaXMoY2FuZGlkYXRlLnJhbmdlKSAmJiBJcy5ib29sZWFuKGNhbmRpZGF0ZS5jYXNlU2Vuc2l0aXZlTG9va3VwKSAmJiAoSXMuc3RyaW5nKGNhbmRpZGF0ZS52YXJpYWJsZU5hbWUpIHx8IGNhbmRpZGF0ZS52YXJpYWJsZU5hbWUgPT09IHZvaWQgMCk7XHJcbiAgfVxyXG4gIElubGluZVZhbHVlVmFyaWFibGVMb29rdXAyLmlzID0gaXM7XHJcbn0pKElubGluZVZhbHVlVmFyaWFibGVMb29rdXAgfHwgKElubGluZVZhbHVlVmFyaWFibGVMb29rdXAgPSB7fSkpO1xyXG52YXIgSW5saW5lVmFsdWVFdmFsdWF0YWJsZUV4cHJlc3Npb247XHJcbihmdW5jdGlvbihJbmxpbmVWYWx1ZUV2YWx1YXRhYmxlRXhwcmVzc2lvbjIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUocmFuZ2UsIGV4cHJlc3Npb24pIHtcclxuICAgIHJldHVybiB7IHJhbmdlLCBleHByZXNzaW9uIH07XHJcbiAgfVxyXG4gIElubGluZVZhbHVlRXZhbHVhdGFibGVFeHByZXNzaW9uMi5jcmVhdGUgPSBjcmVhdGU7XHJcbiAgZnVuY3Rpb24gaXModmFsdWUpIHtcclxuICAgIGNvbnN0IGNhbmRpZGF0ZSA9IHZhbHVlO1xyXG4gICAgcmV0dXJuIGNhbmRpZGF0ZSAhPT0gdm9pZCAwICYmIGNhbmRpZGF0ZSAhPT0gbnVsbCAmJiBSYW5nZS5pcyhjYW5kaWRhdGUucmFuZ2UpICYmIChJcy5zdHJpbmcoY2FuZGlkYXRlLmV4cHJlc3Npb24pIHx8IGNhbmRpZGF0ZS5leHByZXNzaW9uID09PSB2b2lkIDApO1xyXG4gIH1cclxuICBJbmxpbmVWYWx1ZUV2YWx1YXRhYmxlRXhwcmVzc2lvbjIuaXMgPSBpcztcclxufSkoSW5saW5lVmFsdWVFdmFsdWF0YWJsZUV4cHJlc3Npb24gfHwgKElubGluZVZhbHVlRXZhbHVhdGFibGVFeHByZXNzaW9uID0ge30pKTtcclxudmFyIElubGluZVZhbHVlQ29udGV4dDtcclxuKGZ1bmN0aW9uKElubGluZVZhbHVlQ29udGV4dDIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUoZnJhbWVJZCwgc3RvcHBlZExvY2F0aW9uKSB7XHJcbiAgICByZXR1cm4geyBmcmFtZUlkLCBzdG9wcGVkTG9jYXRpb24gfTtcclxuICB9XHJcbiAgSW5saW5lVmFsdWVDb250ZXh0Mi5jcmVhdGUgPSBjcmVhdGU7XHJcbiAgZnVuY3Rpb24gaXModmFsdWUpIHtcclxuICAgIGNvbnN0IGNhbmRpZGF0ZSA9IHZhbHVlO1xyXG4gICAgcmV0dXJuIElzLmRlZmluZWQoY2FuZGlkYXRlKSAmJiBSYW5nZS5pcyh2YWx1ZS5zdG9wcGVkTG9jYXRpb24pO1xyXG4gIH1cclxuICBJbmxpbmVWYWx1ZUNvbnRleHQyLmlzID0gaXM7XHJcbn0pKElubGluZVZhbHVlQ29udGV4dCB8fCAoSW5saW5lVmFsdWVDb250ZXh0ID0ge30pKTtcclxudmFyIElubGF5SGludEtpbmQ7XHJcbihmdW5jdGlvbihJbmxheUhpbnRLaW5kMikge1xyXG4gIElubGF5SGludEtpbmQyLlR5cGUgPSAxO1xyXG4gIElubGF5SGludEtpbmQyLlBhcmFtZXRlciA9IDI7XHJcbiAgZnVuY3Rpb24gaXModmFsdWUpIHtcclxuICAgIHJldHVybiB2YWx1ZSA9PT0gMSB8fCB2YWx1ZSA9PT0gMjtcclxuICB9XHJcbiAgSW5sYXlIaW50S2luZDIuaXMgPSBpcztcclxufSkoSW5sYXlIaW50S2luZCB8fCAoSW5sYXlIaW50S2luZCA9IHt9KSk7XHJcbnZhciBJbmxheUhpbnRMYWJlbFBhcnQ7XHJcbihmdW5jdGlvbihJbmxheUhpbnRMYWJlbFBhcnQyKSB7XHJcbiAgZnVuY3Rpb24gY3JlYXRlKHZhbHVlKSB7XHJcbiAgICByZXR1cm4geyB2YWx1ZSB9O1xyXG4gIH1cclxuICBJbmxheUhpbnRMYWJlbFBhcnQyLmNyZWF0ZSA9IGNyZWF0ZTtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgY29uc3QgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMub2JqZWN0TGl0ZXJhbChjYW5kaWRhdGUpICYmIChjYW5kaWRhdGUudG9vbHRpcCA9PT0gdm9pZCAwIHx8IElzLnN0cmluZyhjYW5kaWRhdGUudG9vbHRpcCkgfHwgTWFya3VwQ29udGVudC5pcyhjYW5kaWRhdGUudG9vbHRpcCkpICYmIChjYW5kaWRhdGUubG9jYXRpb24gPT09IHZvaWQgMCB8fCBMb2NhdGlvbi5pcyhjYW5kaWRhdGUubG9jYXRpb24pKSAmJiAoY2FuZGlkYXRlLmNvbW1hbmQgPT09IHZvaWQgMCB8fCBDb21tYW5kLmlzKGNhbmRpZGF0ZS5jb21tYW5kKSk7XHJcbiAgfVxyXG4gIElubGF5SGludExhYmVsUGFydDIuaXMgPSBpcztcclxufSkoSW5sYXlIaW50TGFiZWxQYXJ0IHx8IChJbmxheUhpbnRMYWJlbFBhcnQgPSB7fSkpO1xyXG52YXIgSW5sYXlIaW50O1xyXG4oZnVuY3Rpb24oSW5sYXlIaW50Mikge1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZShwb3NpdGlvbiwgbGFiZWwsIGtpbmQpIHtcclxuICAgIGNvbnN0IHJlc3VsdCA9IHsgcG9zaXRpb24sIGxhYmVsIH07XHJcbiAgICBpZiAoa2luZCAhPT0gdm9pZCAwKSB7XHJcbiAgICAgIHJlc3VsdC5raW5kID0ga2luZDtcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfVxyXG4gIElubGF5SGludDIuY3JlYXRlID0gY3JlYXRlO1xyXG4gIGZ1bmN0aW9uIGlzKHZhbHVlKSB7XHJcbiAgICBjb25zdCBjYW5kaWRhdGUgPSB2YWx1ZTtcclxuICAgIHJldHVybiBJcy5vYmplY3RMaXRlcmFsKGNhbmRpZGF0ZSkgJiYgUG9zaXRpb24uaXMoY2FuZGlkYXRlLnBvc2l0aW9uKSAmJiAoSXMuc3RyaW5nKGNhbmRpZGF0ZS5sYWJlbCkgfHwgSXMudHlwZWRBcnJheShjYW5kaWRhdGUubGFiZWwsIElubGF5SGludExhYmVsUGFydC5pcykpICYmIChjYW5kaWRhdGUua2luZCA9PT0gdm9pZCAwIHx8IElubGF5SGludEtpbmQuaXMoY2FuZGlkYXRlLmtpbmQpKSAmJiBjYW5kaWRhdGUudGV4dEVkaXRzID09PSB2b2lkIDAgfHwgSXMudHlwZWRBcnJheShjYW5kaWRhdGUudGV4dEVkaXRzLCBUZXh0RWRpdC5pcykgJiYgKGNhbmRpZGF0ZS50b29sdGlwID09PSB2b2lkIDAgfHwgSXMuc3RyaW5nKGNhbmRpZGF0ZS50b29sdGlwKSB8fCBNYXJrdXBDb250ZW50LmlzKGNhbmRpZGF0ZS50b29sdGlwKSkgJiYgKGNhbmRpZGF0ZS5wYWRkaW5nTGVmdCA9PT0gdm9pZCAwIHx8IElzLmJvb2xlYW4oY2FuZGlkYXRlLnBhZGRpbmdMZWZ0KSkgJiYgKGNhbmRpZGF0ZS5wYWRkaW5nUmlnaHQgPT09IHZvaWQgMCB8fCBJcy5ib29sZWFuKGNhbmRpZGF0ZS5wYWRkaW5nUmlnaHQpKTtcclxuICB9XHJcbiAgSW5sYXlIaW50Mi5pcyA9IGlzO1xyXG59KShJbmxheUhpbnQgfHwgKElubGF5SGludCA9IHt9KSk7XHJcbnZhciBTdHJpbmdWYWx1ZTtcclxuKGZ1bmN0aW9uKFN0cmluZ1ZhbHVlMikge1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZVNuaXBwZXQodmFsdWUpIHtcclxuICAgIHJldHVybiB7IGtpbmQ6IFwic25pcHBldFwiLCB2YWx1ZSB9O1xyXG4gIH1cclxuICBTdHJpbmdWYWx1ZTIuY3JlYXRlU25pcHBldCA9IGNyZWF0ZVNuaXBwZXQ7XHJcbn0pKFN0cmluZ1ZhbHVlIHx8IChTdHJpbmdWYWx1ZSA9IHt9KSk7XHJcbnZhciBJbmxpbmVDb21wbGV0aW9uSXRlbTtcclxuKGZ1bmN0aW9uKElubGluZUNvbXBsZXRpb25JdGVtMikge1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZShpbnNlcnRUZXh0LCBmaWx0ZXJUZXh0LCByYW5nZSwgY29tbWFuZCkge1xyXG4gICAgcmV0dXJuIHsgaW5zZXJ0VGV4dCwgZmlsdGVyVGV4dCwgcmFuZ2UsIGNvbW1hbmQgfTtcclxuICB9XHJcbiAgSW5saW5lQ29tcGxldGlvbkl0ZW0yLmNyZWF0ZSA9IGNyZWF0ZTtcclxufSkoSW5saW5lQ29tcGxldGlvbkl0ZW0gfHwgKElubGluZUNvbXBsZXRpb25JdGVtID0ge30pKTtcclxudmFyIElubGluZUNvbXBsZXRpb25MaXN0O1xyXG4oZnVuY3Rpb24oSW5saW5lQ29tcGxldGlvbkxpc3QyKSB7XHJcbiAgZnVuY3Rpb24gY3JlYXRlKGl0ZW1zKSB7XHJcbiAgICByZXR1cm4geyBpdGVtcyB9O1xyXG4gIH1cclxuICBJbmxpbmVDb21wbGV0aW9uTGlzdDIuY3JlYXRlID0gY3JlYXRlO1xyXG59KShJbmxpbmVDb21wbGV0aW9uTGlzdCB8fCAoSW5saW5lQ29tcGxldGlvbkxpc3QgPSB7fSkpO1xyXG52YXIgSW5saW5lQ29tcGxldGlvblRyaWdnZXJLaW5kO1xyXG4oZnVuY3Rpb24oSW5saW5lQ29tcGxldGlvblRyaWdnZXJLaW5kMikge1xyXG4gIElubGluZUNvbXBsZXRpb25UcmlnZ2VyS2luZDIuSW52b2tlZCA9IDA7XHJcbiAgSW5saW5lQ29tcGxldGlvblRyaWdnZXJLaW5kMi5BdXRvbWF0aWMgPSAxO1xyXG59KShJbmxpbmVDb21wbGV0aW9uVHJpZ2dlcktpbmQgfHwgKElubGluZUNvbXBsZXRpb25UcmlnZ2VyS2luZCA9IHt9KSk7XHJcbnZhciBTZWxlY3RlZENvbXBsZXRpb25JbmZvO1xyXG4oZnVuY3Rpb24oU2VsZWN0ZWRDb21wbGV0aW9uSW5mbzIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUocmFuZ2UsIHRleHQpIHtcclxuICAgIHJldHVybiB7IHJhbmdlLCB0ZXh0IH07XHJcbiAgfVxyXG4gIFNlbGVjdGVkQ29tcGxldGlvbkluZm8yLmNyZWF0ZSA9IGNyZWF0ZTtcclxufSkoU2VsZWN0ZWRDb21wbGV0aW9uSW5mbyB8fCAoU2VsZWN0ZWRDb21wbGV0aW9uSW5mbyA9IHt9KSk7XHJcbnZhciBJbmxpbmVDb21wbGV0aW9uQ29udGV4dDtcclxuKGZ1bmN0aW9uKElubGluZUNvbXBsZXRpb25Db250ZXh0Mikge1xyXG4gIGZ1bmN0aW9uIGNyZWF0ZSh0cmlnZ2VyS2luZCwgc2VsZWN0ZWRDb21wbGV0aW9uSW5mbykge1xyXG4gICAgcmV0dXJuIHsgdHJpZ2dlcktpbmQsIHNlbGVjdGVkQ29tcGxldGlvbkluZm8gfTtcclxuICB9XHJcbiAgSW5saW5lQ29tcGxldGlvbkNvbnRleHQyLmNyZWF0ZSA9IGNyZWF0ZTtcclxufSkoSW5saW5lQ29tcGxldGlvbkNvbnRleHQgfHwgKElubGluZUNvbXBsZXRpb25Db250ZXh0ID0ge30pKTtcclxudmFyIFdvcmtzcGFjZUZvbGRlcjtcclxuKGZ1bmN0aW9uKFdvcmtzcGFjZUZvbGRlcjIpIHtcclxuICBmdW5jdGlvbiBpcyh2YWx1ZSkge1xyXG4gICAgY29uc3QgY2FuZGlkYXRlID0gdmFsdWU7XHJcbiAgICByZXR1cm4gSXMub2JqZWN0TGl0ZXJhbChjYW5kaWRhdGUpICYmIFVSSS5pcyhjYW5kaWRhdGUudXJpKSAmJiBJcy5zdHJpbmcoY2FuZGlkYXRlLm5hbWUpO1xyXG4gIH1cclxuICBXb3Jrc3BhY2VGb2xkZXIyLmlzID0gaXM7XHJcbn0pKFdvcmtzcGFjZUZvbGRlciB8fCAoV29ya3NwYWNlRm9sZGVyID0ge30pKTtcclxudmFyIFRleHREb2N1bWVudDtcclxuKGZ1bmN0aW9uKFRleHREb2N1bWVudDIpIHtcclxuICBmdW5jdGlvbiBjcmVhdGUodXJpLCBsYW5ndWFnZUlkLCB2ZXJzaW9uLCBjb250ZW50KSB7XHJcbiAgICByZXR1cm4gbmV3IEZ1bGxUZXh0RG9jdW1lbnQodXJpLCBsYW5ndWFnZUlkLCB2ZXJzaW9uLCBjb250ZW50KTtcclxuICB9XHJcbiAgVGV4dERvY3VtZW50Mi5jcmVhdGUgPSBjcmVhdGU7XHJcbiAgZnVuY3Rpb24gaXModmFsdWUpIHtcclxuICAgIGxldCBjYW5kaWRhdGUgPSB2YWx1ZTtcclxuICAgIHJldHVybiBJcy5kZWZpbmVkKGNhbmRpZGF0ZSkgJiYgSXMuc3RyaW5nKGNhbmRpZGF0ZS51cmkpICYmIChJcy51bmRlZmluZWQoY2FuZGlkYXRlLmxhbmd1YWdlSWQpIHx8IElzLnN0cmluZyhjYW5kaWRhdGUubGFuZ3VhZ2VJZCkpICYmIElzLnVpbnRlZ2VyKGNhbmRpZGF0ZS5saW5lQ291bnQpICYmIElzLmZ1bmMoY2FuZGlkYXRlLmdldFRleHQpICYmIElzLmZ1bmMoY2FuZGlkYXRlLnBvc2l0aW9uQXQpICYmIElzLmZ1bmMoY2FuZGlkYXRlLm9mZnNldEF0KSA/IHRydWUgOiBmYWxzZTtcclxuICB9XHJcbiAgVGV4dERvY3VtZW50Mi5pcyA9IGlzO1xyXG4gIGZ1bmN0aW9uIGFwcGx5RWRpdHMoZG9jdW1lbnQsIGVkaXRzKSB7XHJcbiAgICBsZXQgdGV4dCA9IGRvY3VtZW50LmdldFRleHQoKTtcclxuICAgIGxldCBzb3J0ZWRFZGl0cyA9IG1lcmdlU29ydChlZGl0cywgKGEsIGIpID0+IHtcclxuICAgICAgbGV0IGRpZmYgPSBhLnJhbmdlLnN0YXJ0LmxpbmUgLSBiLnJhbmdlLnN0YXJ0LmxpbmU7XHJcbiAgICAgIGlmIChkaWZmID09PSAwKSB7XHJcbiAgICAgICAgcmV0dXJuIGEucmFuZ2Uuc3RhcnQuY2hhcmFjdGVyIC0gYi5yYW5nZS5zdGFydC5jaGFyYWN0ZXI7XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGRpZmY7XHJcbiAgICB9KTtcclxuICAgIGxldCBsYXN0TW9kaWZpZWRPZmZzZXQgPSB0ZXh0Lmxlbmd0aDtcclxuICAgIGZvciAobGV0IGkgPSBzb3J0ZWRFZGl0cy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkge1xyXG4gICAgICBsZXQgZSA9IHNvcnRlZEVkaXRzW2ldO1xyXG4gICAgICBsZXQgc3RhcnRPZmZzZXQgPSBkb2N1bWVudC5vZmZzZXRBdChlLnJhbmdlLnN0YXJ0KTtcclxuICAgICAgbGV0IGVuZE9mZnNldCA9IGRvY3VtZW50Lm9mZnNldEF0KGUucmFuZ2UuZW5kKTtcclxuICAgICAgaWYgKGVuZE9mZnNldCA8PSBsYXN0TW9kaWZpZWRPZmZzZXQpIHtcclxuICAgICAgICB0ZXh0ID0gdGV4dC5zdWJzdHJpbmcoMCwgc3RhcnRPZmZzZXQpICsgZS5uZXdUZXh0ICsgdGV4dC5zdWJzdHJpbmcoZW5kT2Zmc2V0LCB0ZXh0Lmxlbmd0aCk7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiT3ZlcmxhcHBpbmcgZWRpdFwiKTtcclxuICAgICAgfVxyXG4gICAgICBsYXN0TW9kaWZpZWRPZmZzZXQgPSBzdGFydE9mZnNldDtcclxuICAgIH1cclxuICAgIHJldHVybiB0ZXh0O1xyXG4gIH1cclxuICBUZXh0RG9jdW1lbnQyLmFwcGx5RWRpdHMgPSBhcHBseUVkaXRzO1xyXG4gIGZ1bmN0aW9uIG1lcmdlU29ydChkYXRhLCBjb21wYXJlKSB7XHJcbiAgICBpZiAoZGF0YS5sZW5ndGggPD0gMSkge1xyXG4gICAgICByZXR1cm4gZGF0YTtcclxuICAgIH1cclxuICAgIGNvbnN0IHAgPSBkYXRhLmxlbmd0aCAvIDIgfCAwO1xyXG4gICAgY29uc3QgbGVmdCA9IGRhdGEuc2xpY2UoMCwgcCk7XHJcbiAgICBjb25zdCByaWdodCA9IGRhdGEuc2xpY2UocCk7XHJcbiAgICBtZXJnZVNvcnQobGVmdCwgY29tcGFyZSk7XHJcbiAgICBtZXJnZVNvcnQocmlnaHQsIGNvbXBhcmUpO1xyXG4gICAgbGV0IGxlZnRJZHggPSAwO1xyXG4gICAgbGV0IHJpZ2h0SWR4ID0gMDtcclxuICAgIGxldCBpID0gMDtcclxuICAgIHdoaWxlIChsZWZ0SWR4IDwgbGVmdC5sZW5ndGggJiYgcmlnaHRJZHggPCByaWdodC5sZW5ndGgpIHtcclxuICAgICAgbGV0IHJldCA9IGNvbXBhcmUobGVmdFtsZWZ0SWR4XSwgcmlnaHRbcmlnaHRJZHhdKTtcclxuICAgICAgaWYgKHJldCA8PSAwKSB7XHJcbiAgICAgICAgZGF0YVtpKytdID0gbGVmdFtsZWZ0SWR4KytdO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRhdGFbaSsrXSA9IHJpZ2h0W3JpZ2h0SWR4KytdO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICB3aGlsZSAobGVmdElkeCA8IGxlZnQubGVuZ3RoKSB7XHJcbiAgICAgIGRhdGFbaSsrXSA9IGxlZnRbbGVmdElkeCsrXTtcclxuICAgIH1cclxuICAgIHdoaWxlIChyaWdodElkeCA8IHJpZ2h0Lmxlbmd0aCkge1xyXG4gICAgICBkYXRhW2krK10gPSByaWdodFtyaWdodElkeCsrXTtcclxuICAgIH1cclxuICAgIHJldHVybiBkYXRhO1xyXG4gIH1cclxufSkoVGV4dERvY3VtZW50IHx8IChUZXh0RG9jdW1lbnQgPSB7fSkpO1xyXG52YXIgRnVsbFRleHREb2N1bWVudCA9IGNsYXNzIHtcclxuICBjb25zdHJ1Y3Rvcih1cmksIGxhbmd1YWdlSWQsIHZlcnNpb24sIGNvbnRlbnQpIHtcclxuICAgIHRoaXMuX3VyaSA9IHVyaTtcclxuICAgIHRoaXMuX2xhbmd1YWdlSWQgPSBsYW5ndWFnZUlkO1xyXG4gICAgdGhpcy5fdmVyc2lvbiA9IHZlcnNpb247XHJcbiAgICB0aGlzLl9jb250ZW50ID0gY29udGVudDtcclxuICAgIHRoaXMuX2xpbmVPZmZzZXRzID0gdm9pZCAwO1xyXG4gIH1cclxuICBnZXQgdXJpKCkge1xyXG4gICAgcmV0dXJuIHRoaXMuX3VyaTtcclxuICB9XHJcbiAgZ2V0IGxhbmd1YWdlSWQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fbGFuZ3VhZ2VJZDtcclxuICB9XHJcbiAgZ2V0IHZlcnNpb24oKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fdmVyc2lvbjtcclxuICB9XHJcbiAgZ2V0VGV4dChyYW5nZSkge1xyXG4gICAgaWYgKHJhbmdlKSB7XHJcbiAgICAgIGxldCBzdGFydCA9IHRoaXMub2Zmc2V0QXQocmFuZ2Uuc3RhcnQpO1xyXG4gICAgICBsZXQgZW5kID0gdGhpcy5vZmZzZXRBdChyYW5nZS5lbmQpO1xyXG4gICAgICByZXR1cm4gdGhpcy5fY29udGVudC5zdWJzdHJpbmcoc3RhcnQsIGVuZCk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5fY29udGVudDtcclxuICB9XHJcbiAgdXBkYXRlKGV2ZW50LCB2ZXJzaW9uKSB7XHJcbiAgICB0aGlzLl9jb250ZW50ID0gZXZlbnQudGV4dDtcclxuICAgIHRoaXMuX3ZlcnNpb24gPSB2ZXJzaW9uO1xyXG4gICAgdGhpcy5fbGluZU9mZnNldHMgPSB2b2lkIDA7XHJcbiAgfVxyXG4gIGdldExpbmVPZmZzZXRzKCkge1xyXG4gICAgaWYgKHRoaXMuX2xpbmVPZmZzZXRzID09PSB2b2lkIDApIHtcclxuICAgICAgbGV0IGxpbmVPZmZzZXRzID0gW107XHJcbiAgICAgIGxldCB0ZXh0ID0gdGhpcy5fY29udGVudDtcclxuICAgICAgbGV0IGlzTGluZVN0YXJ0ID0gdHJ1ZTtcclxuICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0ZXh0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgaWYgKGlzTGluZVN0YXJ0KSB7XHJcbiAgICAgICAgICBsaW5lT2Zmc2V0cy5wdXNoKGkpO1xyXG4gICAgICAgICAgaXNMaW5lU3RhcnQgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGNoID0gdGV4dC5jaGFyQXQoaSk7XHJcbiAgICAgICAgaXNMaW5lU3RhcnQgPSBjaCA9PT0gXCJcXHJcIiB8fCBjaCA9PT0gXCJcXG5cIjtcclxuICAgICAgICBpZiAoY2ggPT09IFwiXFxyXCIgJiYgaSArIDEgPCB0ZXh0Lmxlbmd0aCAmJiB0ZXh0LmNoYXJBdChpICsgMSkgPT09IFwiXFxuXCIpIHtcclxuICAgICAgICAgIGkrKztcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgaWYgKGlzTGluZVN0YXJ0ICYmIHRleHQubGVuZ3RoID4gMCkge1xyXG4gICAgICAgIGxpbmVPZmZzZXRzLnB1c2godGV4dC5sZW5ndGgpO1xyXG4gICAgICB9XHJcbiAgICAgIHRoaXMuX2xpbmVPZmZzZXRzID0gbGluZU9mZnNldHM7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdGhpcy5fbGluZU9mZnNldHM7XHJcbiAgfVxyXG4gIHBvc2l0aW9uQXQob2Zmc2V0KSB7XHJcbiAgICBvZmZzZXQgPSBNYXRoLm1heChNYXRoLm1pbihvZmZzZXQsIHRoaXMuX2NvbnRlbnQubGVuZ3RoKSwgMCk7XHJcbiAgICBsZXQgbGluZU9mZnNldHMgPSB0aGlzLmdldExpbmVPZmZzZXRzKCk7XHJcbiAgICBsZXQgbG93ID0gMCwgaGlnaCA9IGxpbmVPZmZzZXRzLmxlbmd0aDtcclxuICAgIGlmIChoaWdoID09PSAwKSB7XHJcbiAgICAgIHJldHVybiBQb3NpdGlvbi5jcmVhdGUoMCwgb2Zmc2V0KTtcclxuICAgIH1cclxuICAgIHdoaWxlIChsb3cgPCBoaWdoKSB7XHJcbiAgICAgIGxldCBtaWQgPSBNYXRoLmZsb29yKChsb3cgKyBoaWdoKSAvIDIpO1xyXG4gICAgICBpZiAobGluZU9mZnNldHNbbWlkXSA+IG9mZnNldCkge1xyXG4gICAgICAgIGhpZ2ggPSBtaWQ7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgbG93ID0gbWlkICsgMTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgbGV0IGxpbmUgPSBsb3cgLSAxO1xyXG4gICAgcmV0dXJuIFBvc2l0aW9uLmNyZWF0ZShsaW5lLCBvZmZzZXQgLSBsaW5lT2Zmc2V0c1tsaW5lXSk7XHJcbiAgfVxyXG4gIG9mZnNldEF0KHBvc2l0aW9uKSB7XHJcbiAgICBsZXQgbGluZU9mZnNldHMgPSB0aGlzLmdldExpbmVPZmZzZXRzKCk7XHJcbiAgICBpZiAocG9zaXRpb24ubGluZSA+PSBsaW5lT2Zmc2V0cy5sZW5ndGgpIHtcclxuICAgICAgcmV0dXJuIHRoaXMuX2NvbnRlbnQubGVuZ3RoO1xyXG4gICAgfSBlbHNlIGlmIChwb3NpdGlvbi5saW5lIDwgMCkge1xyXG4gICAgICByZXR1cm4gMDtcclxuICAgIH1cclxuICAgIGxldCBsaW5lT2Zmc2V0ID0gbGluZU9mZnNldHNbcG9zaXRpb24ubGluZV07XHJcbiAgICBsZXQgbmV4dExpbmVPZmZzZXQgPSBwb3NpdGlvbi5saW5lICsgMSA8IGxpbmVPZmZzZXRzLmxlbmd0aCA/IGxpbmVPZmZzZXRzW3Bvc2l0aW9uLmxpbmUgKyAxXSA6IHRoaXMuX2NvbnRlbnQubGVuZ3RoO1xyXG4gICAgcmV0dXJuIE1hdGgubWF4KE1hdGgubWluKGxpbmVPZmZzZXQgKyBwb3NpdGlvbi5jaGFyYWN0ZXIsIG5leHRMaW5lT2Zmc2V0KSwgbGluZU9mZnNldCk7XHJcbiAgfVxyXG4gIGdldCBsaW5lQ291bnQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5nZXRMaW5lT2Zmc2V0cygpLmxlbmd0aDtcclxuICB9XHJcbn07XHJcbnZhciBJcztcclxuKGZ1bmN0aW9uKElzMikge1xyXG4gIGNvbnN0IHRvU3RyaW5nID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZztcclxuICBmdW5jdGlvbiBkZWZpbmVkKHZhbHVlKSB7XHJcbiAgICByZXR1cm4gdHlwZW9mIHZhbHVlICE9PSBcInVuZGVmaW5lZFwiO1xyXG4gIH1cclxuICBJczIuZGVmaW5lZCA9IGRlZmluZWQ7XHJcbiAgZnVuY3Rpb24gdW5kZWZpbmVkMih2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHR5cGVvZiB2YWx1ZSA9PT0gXCJ1bmRlZmluZWRcIjtcclxuICB9XHJcbiAgSXMyLnVuZGVmaW5lZCA9IHVuZGVmaW5lZDI7XHJcbiAgZnVuY3Rpb24gYm9vbGVhbih2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHZhbHVlID09PSB0cnVlIHx8IHZhbHVlID09PSBmYWxzZTtcclxuICB9XHJcbiAgSXMyLmJvb2xlYW4gPSBib29sZWFuO1xyXG4gIGZ1bmN0aW9uIHN0cmluZyh2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsdWUpID09PSBcIltvYmplY3QgU3RyaW5nXVwiO1xyXG4gIH1cclxuICBJczIuc3RyaW5nID0gc3RyaW5nO1xyXG4gIGZ1bmN0aW9uIG51bWJlcih2YWx1ZSkge1xyXG4gICAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsdWUpID09PSBcIltvYmplY3QgTnVtYmVyXVwiO1xyXG4gIH1cclxuICBJczIubnVtYmVyID0gbnVtYmVyO1xyXG4gIGZ1bmN0aW9uIG51bWJlclJhbmdlKHZhbHVlLCBtaW4sIG1heCkge1xyXG4gICAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsdWUpID09PSBcIltvYmplY3QgTnVtYmVyXVwiICYmIG1pbiA8PSB2YWx1ZSAmJiB2YWx1ZSA8PSBtYXg7XHJcbiAgfVxyXG4gIElzMi5udW1iZXJSYW5nZSA9IG51bWJlclJhbmdlO1xyXG4gIGZ1bmN0aW9uIGludGVnZXIyKHZhbHVlKSB7XHJcbiAgICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09IFwiW29iamVjdCBOdW1iZXJdXCIgJiYgLTIxNDc0ODM2NDggPD0gdmFsdWUgJiYgdmFsdWUgPD0gMjE0NzQ4MzY0NztcclxuICB9XHJcbiAgSXMyLmludGVnZXIgPSBpbnRlZ2VyMjtcclxuICBmdW5jdGlvbiB1aW50ZWdlcjIodmFsdWUpIHtcclxuICAgIHJldHVybiB0b1N0cmluZy5jYWxsKHZhbHVlKSA9PT0gXCJbb2JqZWN0IE51bWJlcl1cIiAmJiAwIDw9IHZhbHVlICYmIHZhbHVlIDw9IDIxNDc0ODM2NDc7XHJcbiAgfVxyXG4gIElzMi51aW50ZWdlciA9IHVpbnRlZ2VyMjtcclxuICBmdW5jdGlvbiBmdW5jKHZhbHVlKSB7XHJcbiAgICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09IFwiW29iamVjdCBGdW5jdGlvbl1cIjtcclxuICB9XHJcbiAgSXMyLmZ1bmMgPSBmdW5jO1xyXG4gIGZ1bmN0aW9uIG9iamVjdExpdGVyYWwodmFsdWUpIHtcclxuICAgIHJldHVybiB2YWx1ZSAhPT0gbnVsbCAmJiB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCI7XHJcbiAgfVxyXG4gIElzMi5vYmplY3RMaXRlcmFsID0gb2JqZWN0TGl0ZXJhbDtcclxuICBmdW5jdGlvbiB0eXBlZEFycmF5KHZhbHVlLCBjaGVjaykge1xyXG4gICAgcmV0dXJuIEFycmF5LmlzQXJyYXkodmFsdWUpICYmIHZhbHVlLmV2ZXJ5KGNoZWNrKTtcclxuICB9XHJcbiAgSXMyLnR5cGVkQXJyYXkgPSB0eXBlZEFycmF5O1xyXG59KShJcyB8fCAoSXMgPSB7fSkpO1xyXG5cclxuLy8gc3JjL2xhbmd1YWdlL2NvbW1vbi9sc3BMYW5ndWFnZUZlYXR1cmVzLnRzXHJcbnZhciBEaWFnbm9zdGljc0FkYXB0ZXIgPSBjbGFzcyB7XHJcbiAgY29uc3RydWN0b3IoX2xhbmd1YWdlSWQsIF93b3JrZXIsIGNvbmZpZ0NoYW5nZUV2ZW50KSB7XHJcbiAgICB0aGlzLl9sYW5ndWFnZUlkID0gX2xhbmd1YWdlSWQ7XHJcbiAgICB0aGlzLl93b3JrZXIgPSBfd29ya2VyO1xyXG4gICAgdGhpcy5fZGlzcG9zYWJsZXMgPSBbXTtcclxuICAgIHRoaXMuX2xpc3RlbmVyID0gLyogQF9fUFVSRV9fICovIE9iamVjdC5jcmVhdGUobnVsbCk7XHJcbiAgICBjb25zdCBvbk1vZGVsQWRkID0gKG1vZGVsKSA9PiB7XHJcbiAgICAgIGxldCBtb2RlSWQgPSBtb2RlbC5nZXRMYW5ndWFnZUlkKCk7XHJcbiAgICAgIGlmIChtb2RlSWQgIT09IHRoaXMuX2xhbmd1YWdlSWQpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgbGV0IGhhbmRsZTtcclxuICAgICAgdGhpcy5fbGlzdGVuZXJbbW9kZWwudXJpLnRvU3RyaW5nKCldID0gbW9kZWwub25EaWRDaGFuZ2VDb250ZW50KCgpID0+IHtcclxuICAgICAgICB3aW5kb3cuY2xlYXJUaW1lb3V0KGhhbmRsZSk7XHJcbiAgICAgICAgaGFuZGxlID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4gdGhpcy5fZG9WYWxpZGF0ZShtb2RlbC51cmksIG1vZGVJZCksIDUwMCk7XHJcbiAgICAgIH0pO1xyXG4gICAgICB0aGlzLl9kb1ZhbGlkYXRlKG1vZGVsLnVyaSwgbW9kZUlkKTtcclxuICAgIH07XHJcbiAgICBjb25zdCBvbk1vZGVsUmVtb3ZlZCA9IChtb2RlbCkgPT4ge1xyXG4gICAgICBtb25hY29fZWRpdG9yX2NvcmVfZXhwb3J0cy5lZGl0b3Iuc2V0TW9kZWxNYXJrZXJzKG1vZGVsLCB0aGlzLl9sYW5ndWFnZUlkLCBbXSk7XHJcbiAgICAgIGxldCB1cmlTdHIgPSBtb2RlbC51cmkudG9TdHJpbmcoKTtcclxuICAgICAgbGV0IGxpc3RlbmVyID0gdGhpcy5fbGlzdGVuZXJbdXJpU3RyXTtcclxuICAgICAgaWYgKGxpc3RlbmVyKSB7XHJcbiAgICAgICAgbGlzdGVuZXIuZGlzcG9zZSgpO1xyXG4gICAgICAgIGRlbGV0ZSB0aGlzLl9saXN0ZW5lclt1cmlTdHJdO1xyXG4gICAgICB9XHJcbiAgICB9O1xyXG4gICAgdGhpcy5fZGlzcG9zYWJsZXMucHVzaChtb25hY29fZWRpdG9yX2NvcmVfZXhwb3J0cy5lZGl0b3Iub25EaWRDcmVhdGVNb2RlbChvbk1vZGVsQWRkKSk7XHJcbiAgICB0aGlzLl9kaXNwb3NhYmxlcy5wdXNoKG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLmVkaXRvci5vbldpbGxEaXNwb3NlTW9kZWwob25Nb2RlbFJlbW92ZWQpKTtcclxuICAgIHRoaXMuX2Rpc3Bvc2FibGVzLnB1c2goXHJcbiAgICAgIG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLmVkaXRvci5vbkRpZENoYW5nZU1vZGVsTGFuZ3VhZ2UoKGV2ZW50KSA9PiB7XHJcbiAgICAgICAgb25Nb2RlbFJlbW92ZWQoZXZlbnQubW9kZWwpO1xyXG4gICAgICAgIG9uTW9kZWxBZGQoZXZlbnQubW9kZWwpO1xyXG4gICAgICB9KVxyXG4gICAgKTtcclxuICAgIHRoaXMuX2Rpc3Bvc2FibGVzLnB1c2goXHJcbiAgICAgIGNvbmZpZ0NoYW5nZUV2ZW50KChfKSA9PiB7XHJcbiAgICAgICAgbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMuZWRpdG9yLmdldE1vZGVscygpLmZvckVhY2goKG1vZGVsKSA9PiB7XHJcbiAgICAgICAgICBpZiAobW9kZWwuZ2V0TGFuZ3VhZ2VJZCgpID09PSB0aGlzLl9sYW5ndWFnZUlkKSB7XHJcbiAgICAgICAgICAgIG9uTW9kZWxSZW1vdmVkKG1vZGVsKTtcclxuICAgICAgICAgICAgb25Nb2RlbEFkZChtb2RlbCk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICAgIH0pXHJcbiAgICApO1xyXG4gICAgdGhpcy5fZGlzcG9zYWJsZXMucHVzaCh7XHJcbiAgICAgIGRpc3Bvc2U6ICgpID0+IHtcclxuICAgICAgICBtb25hY29fZWRpdG9yX2NvcmVfZXhwb3J0cy5lZGl0b3IuZ2V0TW9kZWxzKCkuZm9yRWFjaChvbk1vZGVsUmVtb3ZlZCk7XHJcbiAgICAgICAgZm9yIChsZXQga2V5IGluIHRoaXMuX2xpc3RlbmVyKSB7XHJcbiAgICAgICAgICB0aGlzLl9saXN0ZW5lcltrZXldLmRpc3Bvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gICAgbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMuZWRpdG9yLmdldE1vZGVscygpLmZvckVhY2gob25Nb2RlbEFkZCk7XHJcbiAgfVxyXG4gIGRpc3Bvc2UoKSB7XHJcbiAgICB0aGlzLl9kaXNwb3NhYmxlcy5mb3JFYWNoKChkKSA9PiBkICYmIGQuZGlzcG9zZSgpKTtcclxuICAgIHRoaXMuX2Rpc3Bvc2FibGVzLmxlbmd0aCA9IDA7XHJcbiAgfVxyXG4gIF9kb1ZhbGlkYXRlKHJlc291cmNlLCBsYW5ndWFnZUlkKSB7XHJcbiAgICB0aGlzLl93b3JrZXIocmVzb3VyY2UpLnRoZW4oKHdvcmtlcikgPT4ge1xyXG4gICAgICByZXR1cm4gd29ya2VyLmRvVmFsaWRhdGlvbihyZXNvdXJjZS50b1N0cmluZygpKTtcclxuICAgIH0pLnRoZW4oKGRpYWdub3N0aWNzKSA9PiB7XHJcbiAgICAgIGNvbnN0IG1hcmtlcnMgPSBkaWFnbm9zdGljcy5tYXAoKGQpID0+IHRvRGlhZ25vc3RpY3MocmVzb3VyY2UsIGQpKTtcclxuICAgICAgbGV0IG1vZGVsID0gbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMuZWRpdG9yLmdldE1vZGVsKHJlc291cmNlKTtcclxuICAgICAgaWYgKG1vZGVsICYmIG1vZGVsLmdldExhbmd1YWdlSWQoKSA9PT0gbGFuZ3VhZ2VJZCkge1xyXG4gICAgICAgIG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLmVkaXRvci5zZXRNb2RlbE1hcmtlcnMobW9kZWwsIGxhbmd1YWdlSWQsIG1hcmtlcnMpO1xyXG4gICAgICB9XHJcbiAgICB9KS50aGVuKHZvaWQgMCwgKGVycikgPT4ge1xyXG4gICAgICBjb25zb2xlLmVycm9yKGVycik7XHJcbiAgICB9KTtcclxuICB9XHJcbn07XHJcbmZ1bmN0aW9uIHRvU2V2ZXJpdHkobHNTZXZlcml0eSkge1xyXG4gIHN3aXRjaCAobHNTZXZlcml0eSkge1xyXG4gICAgY2FzZSBEaWFnbm9zdGljU2V2ZXJpdHkuRXJyb3I6XHJcbiAgICAgIHJldHVybiBtb25hY29fZWRpdG9yX2NvcmVfZXhwb3J0cy5NYXJrZXJTZXZlcml0eS5FcnJvcjtcclxuICAgIGNhc2UgRGlhZ25vc3RpY1NldmVyaXR5Lldhcm5pbmc6XHJcbiAgICAgIHJldHVybiBtb25hY29fZWRpdG9yX2NvcmVfZXhwb3J0cy5NYXJrZXJTZXZlcml0eS5XYXJuaW5nO1xyXG4gICAgY2FzZSBEaWFnbm9zdGljU2V2ZXJpdHkuSW5mb3JtYXRpb246XHJcbiAgICAgIHJldHVybiBtb25hY29fZWRpdG9yX2NvcmVfZXhwb3J0cy5NYXJrZXJTZXZlcml0eS5JbmZvO1xyXG4gICAgY2FzZSBEaWFnbm9zdGljU2V2ZXJpdHkuSGludDpcclxuICAgICAgcmV0dXJuIG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLk1hcmtlclNldmVyaXR5LkhpbnQ7XHJcbiAgICBkZWZhdWx0OlxyXG4gICAgICByZXR1cm4gbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMuTWFya2VyU2V2ZXJpdHkuSW5mbztcclxuICB9XHJcbn1cclxuZnVuY3Rpb24gdG9EaWFnbm9zdGljcyhyZXNvdXJjZSwgZGlhZykge1xyXG4gIGxldCBjb2RlID0gdHlwZW9mIGRpYWcuY29kZSA9PT0gXCJudW1iZXJcIiA/IFN0cmluZyhkaWFnLmNvZGUpIDogZGlhZy5jb2RlO1xyXG4gIHJldHVybiB7XHJcbiAgICBzZXZlcml0eTogdG9TZXZlcml0eShkaWFnLnNldmVyaXR5KSxcclxuICAgIHN0YXJ0TGluZU51bWJlcjogZGlhZy5yYW5nZS5zdGFydC5saW5lICsgMSxcclxuICAgIHN0YXJ0Q29sdW1uOiBkaWFnLnJhbmdlLnN0YXJ0LmNoYXJhY3RlciArIDEsXHJcbiAgICBlbmRMaW5lTnVtYmVyOiBkaWFnLnJhbmdlLmVuZC5saW5lICsgMSxcclxuICAgIGVuZENvbHVtbjogZGlhZy5yYW5nZS5lbmQuY2hhcmFjdGVyICsgMSxcclxuICAgIG1lc3NhZ2U6IGRpYWcubWVzc2FnZSxcclxuICAgIGNvZGUsXHJcbiAgICBzb3VyY2U6IGRpYWcuc291cmNlXHJcbiAgfTtcclxufVxyXG52YXIgQ29tcGxldGlvbkFkYXB0ZXIgPSBjbGFzcyB7XHJcbiAgY29uc3RydWN0b3IoX3dvcmtlciwgX3RyaWdnZXJDaGFyYWN0ZXJzKSB7XHJcbiAgICB0aGlzLl93b3JrZXIgPSBfd29ya2VyO1xyXG4gICAgdGhpcy5fdHJpZ2dlckNoYXJhY3RlcnMgPSBfdHJpZ2dlckNoYXJhY3RlcnM7XHJcbiAgfVxyXG4gIGdldCB0cmlnZ2VyQ2hhcmFjdGVycygpIHtcclxuICAgIHJldHVybiB0aGlzLl90cmlnZ2VyQ2hhcmFjdGVycztcclxuICB9XHJcbiAgcHJvdmlkZUNvbXBsZXRpb25JdGVtcyhtb2RlbCwgcG9zaXRpb24sIGNvbnRleHQsIHRva2VuKSB7XHJcbiAgICBjb25zdCByZXNvdXJjZSA9IG1vZGVsLnVyaTtcclxuICAgIHJldHVybiB0aGlzLl93b3JrZXIocmVzb3VyY2UpLnRoZW4oKHdvcmtlcikgPT4ge1xyXG4gICAgICByZXR1cm4gd29ya2VyLmRvQ29tcGxldGUocmVzb3VyY2UudG9TdHJpbmcoKSwgZnJvbVBvc2l0aW9uKHBvc2l0aW9uKSk7XHJcbiAgICB9KS50aGVuKChpbmZvKSA9PiB7XHJcbiAgICAgIGlmICghaW5mbykge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBjb25zdCB3b3JkSW5mbyA9IG1vZGVsLmdldFdvcmRVbnRpbFBvc2l0aW9uKHBvc2l0aW9uKTtcclxuICAgICAgY29uc3Qgd29yZFJhbmdlID0gbmV3IG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLlJhbmdlKFxyXG4gICAgICAgIHBvc2l0aW9uLmxpbmVOdW1iZXIsXHJcbiAgICAgICAgd29yZEluZm8uc3RhcnRDb2x1bW4sXHJcbiAgICAgICAgcG9zaXRpb24ubGluZU51bWJlcixcclxuICAgICAgICB3b3JkSW5mby5lbmRDb2x1bW5cclxuICAgICAgKTtcclxuICAgICAgY29uc3QgaXRlbXMgPSBpbmZvLml0ZW1zLm1hcCgoZW50cnkpID0+IHtcclxuICAgICAgICBjb25zdCBpdGVtID0ge1xyXG4gICAgICAgICAgbGFiZWw6IGVudHJ5LmxhYmVsLFxyXG4gICAgICAgICAgaW5zZXJ0VGV4dDogZW50cnkuaW5zZXJ0VGV4dCB8fCBlbnRyeS5sYWJlbCxcclxuICAgICAgICAgIHNvcnRUZXh0OiBlbnRyeS5zb3J0VGV4dCxcclxuICAgICAgICAgIGZpbHRlclRleHQ6IGVudHJ5LmZpbHRlclRleHQsXHJcbiAgICAgICAgICBkb2N1bWVudGF0aW9uOiBlbnRyeS5kb2N1bWVudGF0aW9uLFxyXG4gICAgICAgICAgZGV0YWlsOiBlbnRyeS5kZXRhaWwsXHJcbiAgICAgICAgICBjb21tYW5kOiB0b0NvbW1hbmQoZW50cnkuY29tbWFuZCksXHJcbiAgICAgICAgICByYW5nZTogd29yZFJhbmdlLFxyXG4gICAgICAgICAga2luZDogdG9Db21wbGV0aW9uSXRlbUtpbmQoZW50cnkua2luZClcclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmIChlbnRyeS50ZXh0RWRpdCkge1xyXG4gICAgICAgICAgaWYgKGlzSW5zZXJ0UmVwbGFjZUVkaXQoZW50cnkudGV4dEVkaXQpKSB7XHJcbiAgICAgICAgICAgIGl0ZW0ucmFuZ2UgPSB7XHJcbiAgICAgICAgICAgICAgaW5zZXJ0OiB0b1JhbmdlKGVudHJ5LnRleHRFZGl0Lmluc2VydCksXHJcbiAgICAgICAgICAgICAgcmVwbGFjZTogdG9SYW5nZShlbnRyeS50ZXh0RWRpdC5yZXBsYWNlKVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaXRlbS5yYW5nZSA9IHRvUmFuZ2UoZW50cnkudGV4dEVkaXQucmFuZ2UpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgaXRlbS5pbnNlcnRUZXh0ID0gZW50cnkudGV4dEVkaXQubmV3VGV4dDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGVudHJ5LmFkZGl0aW9uYWxUZXh0RWRpdHMpIHtcclxuICAgICAgICAgIGl0ZW0uYWRkaXRpb25hbFRleHRFZGl0cyA9IGVudHJ5LmFkZGl0aW9uYWxUZXh0RWRpdHMubWFwKHRvVGV4dEVkaXQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoZW50cnkuaW5zZXJ0VGV4dEZvcm1hdCA9PT0gSW5zZXJ0VGV4dEZvcm1hdC5TbmlwcGV0KSB7XHJcbiAgICAgICAgICBpdGVtLmluc2VydFRleHRSdWxlcyA9IG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUluc2VydFRleHRSdWxlLkluc2VydEFzU25pcHBldDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGl0ZW07XHJcbiAgICAgIH0pO1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGlzSW5jb21wbGV0ZTogaW5mby5pc0luY29tcGxldGUsXHJcbiAgICAgICAgc3VnZ2VzdGlvbnM6IGl0ZW1zXHJcbiAgICAgIH07XHJcbiAgICB9KTtcclxuICB9XHJcbn07XHJcbmZ1bmN0aW9uIGZyb21Qb3NpdGlvbihwb3NpdGlvbikge1xyXG4gIGlmICghcG9zaXRpb24pIHtcclxuICAgIHJldHVybiB2b2lkIDA7XHJcbiAgfVxyXG4gIHJldHVybiB7IGNoYXJhY3RlcjogcG9zaXRpb24uY29sdW1uIC0gMSwgbGluZTogcG9zaXRpb24ubGluZU51bWJlciAtIDEgfTtcclxufVxyXG5mdW5jdGlvbiBmcm9tUmFuZ2UocmFuZ2UpIHtcclxuICBpZiAoIXJhbmdlKSB7XHJcbiAgICByZXR1cm4gdm9pZCAwO1xyXG4gIH1cclxuICByZXR1cm4ge1xyXG4gICAgc3RhcnQ6IHtcclxuICAgICAgbGluZTogcmFuZ2Uuc3RhcnRMaW5lTnVtYmVyIC0gMSxcclxuICAgICAgY2hhcmFjdGVyOiByYW5nZS5zdGFydENvbHVtbiAtIDFcclxuICAgIH0sXHJcbiAgICBlbmQ6IHsgbGluZTogcmFuZ2UuZW5kTGluZU51bWJlciAtIDEsIGNoYXJhY3RlcjogcmFuZ2UuZW5kQ29sdW1uIC0gMSB9XHJcbiAgfTtcclxufVxyXG5mdW5jdGlvbiB0b1JhbmdlKHJhbmdlKSB7XHJcbiAgaWYgKCFyYW5nZSkge1xyXG4gICAgcmV0dXJuIHZvaWQgMDtcclxuICB9XHJcbiAgcmV0dXJuIG5ldyBtb25hY29fZWRpdG9yX2NvcmVfZXhwb3J0cy5SYW5nZShcclxuICAgIHJhbmdlLnN0YXJ0LmxpbmUgKyAxLFxyXG4gICAgcmFuZ2Uuc3RhcnQuY2hhcmFjdGVyICsgMSxcclxuICAgIHJhbmdlLmVuZC5saW5lICsgMSxcclxuICAgIHJhbmdlLmVuZC5jaGFyYWN0ZXIgKyAxXHJcbiAgKTtcclxufVxyXG5mdW5jdGlvbiBpc0luc2VydFJlcGxhY2VFZGl0KGVkaXQpIHtcclxuICByZXR1cm4gdHlwZW9mIGVkaXQuaW5zZXJ0ICE9PSBcInVuZGVmaW5lZFwiICYmIHR5cGVvZiBlZGl0LnJlcGxhY2UgIT09IFwidW5kZWZpbmVkXCI7XHJcbn1cclxuZnVuY3Rpb24gdG9Db21wbGV0aW9uSXRlbUtpbmQoa2luZCkge1xyXG4gIGNvbnN0IG1JdGVtS2luZCA9IG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLmxhbmd1YWdlcy5Db21wbGV0aW9uSXRlbUtpbmQ7XHJcbiAgc3dpdGNoIChraW5kKSB7XHJcbiAgICBjYXNlIENvbXBsZXRpb25JdGVtS2luZC5UZXh0OlxyXG4gICAgICByZXR1cm4gbUl0ZW1LaW5kLlRleHQ7XHJcbiAgICBjYXNlIENvbXBsZXRpb25JdGVtS2luZC5NZXRob2Q6XHJcbiAgICAgIHJldHVybiBtSXRlbUtpbmQuTWV0aG9kO1xyXG4gICAgY2FzZSBDb21wbGV0aW9uSXRlbUtpbmQuRnVuY3Rpb246XHJcbiAgICAgIHJldHVybiBtSXRlbUtpbmQuRnVuY3Rpb247XHJcbiAgICBjYXNlIENvbXBsZXRpb25JdGVtS2luZC5Db25zdHJ1Y3RvcjpcclxuICAgICAgcmV0dXJuIG1JdGVtS2luZC5Db25zdHJ1Y3RvcjtcclxuICAgIGNhc2UgQ29tcGxldGlvbkl0ZW1LaW5kLkZpZWxkOlxyXG4gICAgICByZXR1cm4gbUl0ZW1LaW5kLkZpZWxkO1xyXG4gICAgY2FzZSBDb21wbGV0aW9uSXRlbUtpbmQuVmFyaWFibGU6XHJcbiAgICAgIHJldHVybiBtSXRlbUtpbmQuVmFyaWFibGU7XHJcbiAgICBjYXNlIENvbXBsZXRpb25JdGVtS2luZC5DbGFzczpcclxuICAgICAgcmV0dXJuIG1JdGVtS2luZC5DbGFzcztcclxuICAgIGNhc2UgQ29tcGxldGlvbkl0ZW1LaW5kLkludGVyZmFjZTpcclxuICAgICAgcmV0dXJuIG1JdGVtS2luZC5JbnRlcmZhY2U7XHJcbiAgICBjYXNlIENvbXBsZXRpb25JdGVtS2luZC5Nb2R1bGU6XHJcbiAgICAgIHJldHVybiBtSXRlbUtpbmQuTW9kdWxlO1xyXG4gICAgY2FzZSBDb21wbGV0aW9uSXRlbUtpbmQuUHJvcGVydHk6XHJcbiAgICAgIHJldHVybiBtSXRlbUtpbmQuUHJvcGVydHk7XHJcbiAgICBjYXNlIENvbXBsZXRpb25JdGVtS2luZC5Vbml0OlxyXG4gICAgICByZXR1cm4gbUl0ZW1LaW5kLlVuaXQ7XHJcbiAgICBjYXNlIENvbXBsZXRpb25JdGVtS2luZC5WYWx1ZTpcclxuICAgICAgcmV0dXJuIG1JdGVtS2luZC5WYWx1ZTtcclxuICAgIGNhc2UgQ29tcGxldGlvbkl0ZW1LaW5kLkVudW06XHJcbiAgICAgIHJldHVybiBtSXRlbUtpbmQuRW51bTtcclxuICAgIGNhc2UgQ29tcGxldGlvbkl0ZW1LaW5kLktleXdvcmQ6XHJcbiAgICAgIHJldHVybiBtSXRlbUtpbmQuS2V5d29yZDtcclxuICAgIGNhc2UgQ29tcGxldGlvbkl0ZW1LaW5kLlNuaXBwZXQ6XHJcbiAgICAgIHJldHVybiBtSXRlbUtpbmQuU25pcHBldDtcclxuICAgIGNhc2UgQ29tcGxldGlvbkl0ZW1LaW5kLkNvbG9yOlxyXG4gICAgICByZXR1cm4gbUl0ZW1LaW5kLkNvbG9yO1xyXG4gICAgY2FzZSBDb21wbGV0aW9uSXRlbUtpbmQuRmlsZTpcclxuICAgICAgcmV0dXJuIG1JdGVtS2luZC5GaWxlO1xyXG4gICAgY2FzZSBDb21wbGV0aW9uSXRlbUtpbmQuUmVmZXJlbmNlOlxyXG4gICAgICByZXR1cm4gbUl0ZW1LaW5kLlJlZmVyZW5jZTtcclxuICB9XHJcbiAgcmV0dXJuIG1JdGVtS2luZC5Qcm9wZXJ0eTtcclxufVxyXG5mdW5jdGlvbiB0b1RleHRFZGl0KHRleHRFZGl0KSB7XHJcbiAgaWYgKCF0ZXh0RWRpdCkge1xyXG4gICAgcmV0dXJuIHZvaWQgMDtcclxuICB9XHJcbiAgcmV0dXJuIHtcclxuICAgIHJhbmdlOiB0b1JhbmdlKHRleHRFZGl0LnJhbmdlKSxcclxuICAgIHRleHQ6IHRleHRFZGl0Lm5ld1RleHRcclxuICB9O1xyXG59XHJcbmZ1bmN0aW9uIHRvQ29tbWFuZChjKSB7XHJcbiAgcmV0dXJuIGMgJiYgYy5jb21tYW5kID09PSBcImVkaXRvci5hY3Rpb24udHJpZ2dlclN1Z2dlc3RcIiA/IHsgaWQ6IGMuY29tbWFuZCwgdGl0bGU6IGMudGl0bGUsIGFyZ3VtZW50czogYy5hcmd1bWVudHMgfSA6IHZvaWQgMDtcclxufVxyXG52YXIgSG92ZXJBZGFwdGVyID0gY2xhc3Mge1xyXG4gIGNvbnN0cnVjdG9yKF93b3JrZXIpIHtcclxuICAgIHRoaXMuX3dvcmtlciA9IF93b3JrZXI7XHJcbiAgfVxyXG4gIHByb3ZpZGVIb3Zlcihtb2RlbCwgcG9zaXRpb24sIHRva2VuKSB7XHJcbiAgICBsZXQgcmVzb3VyY2UgPSBtb2RlbC51cmk7XHJcbiAgICByZXR1cm4gdGhpcy5fd29ya2VyKHJlc291cmNlKS50aGVuKCh3b3JrZXIpID0+IHtcclxuICAgICAgcmV0dXJuIHdvcmtlci5kb0hvdmVyKHJlc291cmNlLnRvU3RyaW5nKCksIGZyb21Qb3NpdGlvbihwb3NpdGlvbikpO1xyXG4gICAgfSkudGhlbigoaW5mbykgPT4ge1xyXG4gICAgICBpZiAoIWluZm8pIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHtcclxuICAgICAgICByYW5nZTogdG9SYW5nZShpbmZvLnJhbmdlKSxcclxuICAgICAgICBjb250ZW50czogdG9NYXJrZWRTdHJpbmdBcnJheShpbmZvLmNvbnRlbnRzKVxyXG4gICAgICB9O1xyXG4gICAgfSk7XHJcbiAgfVxyXG59O1xyXG5mdW5jdGlvbiBpc01hcmt1cENvbnRlbnQodGhpbmcpIHtcclxuICByZXR1cm4gdGhpbmcgJiYgdHlwZW9mIHRoaW5nID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiB0aGluZy5raW5kID09PSBcInN0cmluZ1wiO1xyXG59XHJcbmZ1bmN0aW9uIHRvTWFya2Rvd25TdHJpbmcoZW50cnkpIHtcclxuICBpZiAodHlwZW9mIGVudHJ5ID09PSBcInN0cmluZ1wiKSB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICB2YWx1ZTogZW50cnlcclxuICAgIH07XHJcbiAgfVxyXG4gIGlmIChpc01hcmt1cENvbnRlbnQoZW50cnkpKSB7XHJcbiAgICBpZiAoZW50cnkua2luZCA9PT0gXCJwbGFpbnRleHRcIikge1xyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIHZhbHVlOiBlbnRyeS52YWx1ZS5yZXBsYWNlKC9bXFxcXGAqX3t9W1xcXSgpIytcXC0uIV0vZywgXCJcXFxcJCZcIilcclxuICAgICAgfTtcclxuICAgIH1cclxuICAgIHJldHVybiB7XHJcbiAgICAgIHZhbHVlOiBlbnRyeS52YWx1ZVxyXG4gICAgfTtcclxuICB9XHJcbiAgcmV0dXJuIHsgdmFsdWU6IFwiYGBgXCIgKyBlbnRyeS5sYW5ndWFnZSArIFwiXFxuXCIgKyBlbnRyeS52YWx1ZSArIFwiXFxuYGBgXFxuXCIgfTtcclxufVxyXG5mdW5jdGlvbiB0b01hcmtlZFN0cmluZ0FycmF5KGNvbnRlbnRzKSB7XHJcbiAgaWYgKCFjb250ZW50cykge1xyXG4gICAgcmV0dXJuIHZvaWQgMDtcclxuICB9XHJcbiAgaWYgKEFycmF5LmlzQXJyYXkoY29udGVudHMpKSB7XHJcbiAgICByZXR1cm4gY29udGVudHMubWFwKHRvTWFya2Rvd25TdHJpbmcpO1xyXG4gIH1cclxuICByZXR1cm4gW3RvTWFya2Rvd25TdHJpbmcoY29udGVudHMpXTtcclxufVxyXG52YXIgRG9jdW1lbnRIaWdobGlnaHRBZGFwdGVyID0gY2xhc3Mge1xyXG4gIGNvbnN0cnVjdG9yKF93b3JrZXIpIHtcclxuICAgIHRoaXMuX3dvcmtlciA9IF93b3JrZXI7XHJcbiAgfVxyXG4gIHByb3ZpZGVEb2N1bWVudEhpZ2hsaWdodHMobW9kZWwsIHBvc2l0aW9uLCB0b2tlbikge1xyXG4gICAgY29uc3QgcmVzb3VyY2UgPSBtb2RlbC51cmk7XHJcbiAgICByZXR1cm4gdGhpcy5fd29ya2VyKHJlc291cmNlKS50aGVuKCh3b3JrZXIpID0+IHdvcmtlci5maW5kRG9jdW1lbnRIaWdobGlnaHRzKHJlc291cmNlLnRvU3RyaW5nKCksIGZyb21Qb3NpdGlvbihwb3NpdGlvbikpKS50aGVuKChlbnRyaWVzKSA9PiB7XHJcbiAgICAgIGlmICghZW50cmllcykge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gZW50cmllcy5tYXAoKGVudHJ5KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIHJhbmdlOiB0b1JhbmdlKGVudHJ5LnJhbmdlKSxcclxuICAgICAgICAgIGtpbmQ6IHRvRG9jdW1lbnRIaWdobGlnaHRLaW5kKGVudHJ5LmtpbmQpXHJcbiAgICAgICAgfTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcbn07XHJcbmZ1bmN0aW9uIHRvRG9jdW1lbnRIaWdobGlnaHRLaW5kKGtpbmQpIHtcclxuICBzd2l0Y2ggKGtpbmQpIHtcclxuICAgIGNhc2UgRG9jdW1lbnRIaWdobGlnaHRLaW5kLlJlYWQ6XHJcbiAgICAgIHJldHVybiBtb25hY29fZWRpdG9yX2NvcmVfZXhwb3J0cy5sYW5ndWFnZXMuRG9jdW1lbnRIaWdobGlnaHRLaW5kLlJlYWQ7XHJcbiAgICBjYXNlIERvY3VtZW50SGlnaGxpZ2h0S2luZC5Xcml0ZTpcclxuICAgICAgcmV0dXJuIG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLmxhbmd1YWdlcy5Eb2N1bWVudEhpZ2hsaWdodEtpbmQuV3JpdGU7XHJcbiAgICBjYXNlIERvY3VtZW50SGlnaGxpZ2h0S2luZC5UZXh0OlxyXG4gICAgICByZXR1cm4gbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMubGFuZ3VhZ2VzLkRvY3VtZW50SGlnaGxpZ2h0S2luZC5UZXh0O1xyXG4gIH1cclxuICByZXR1cm4gbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMubGFuZ3VhZ2VzLkRvY3VtZW50SGlnaGxpZ2h0S2luZC5UZXh0O1xyXG59XHJcbnZhciBEZWZpbml0aW9uQWRhcHRlciA9IGNsYXNzIHtcclxuICBjb25zdHJ1Y3Rvcihfd29ya2VyKSB7XHJcbiAgICB0aGlzLl93b3JrZXIgPSBfd29ya2VyO1xyXG4gIH1cclxuICBwcm92aWRlRGVmaW5pdGlvbihtb2RlbCwgcG9zaXRpb24sIHRva2VuKSB7XHJcbiAgICBjb25zdCByZXNvdXJjZSA9IG1vZGVsLnVyaTtcclxuICAgIHJldHVybiB0aGlzLl93b3JrZXIocmVzb3VyY2UpLnRoZW4oKHdvcmtlcikgPT4ge1xyXG4gICAgICByZXR1cm4gd29ya2VyLmZpbmREZWZpbml0aW9uKHJlc291cmNlLnRvU3RyaW5nKCksIGZyb21Qb3NpdGlvbihwb3NpdGlvbikpO1xyXG4gICAgfSkudGhlbigoZGVmaW5pdGlvbikgPT4ge1xyXG4gICAgICBpZiAoIWRlZmluaXRpb24pIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIFt0b0xvY2F0aW9uKGRlZmluaXRpb24pXTtcclxuICAgIH0pO1xyXG4gIH1cclxufTtcclxuZnVuY3Rpb24gdG9Mb2NhdGlvbihsb2NhdGlvbikge1xyXG4gIHJldHVybiB7XHJcbiAgICB1cmk6IG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLlVyaS5wYXJzZShsb2NhdGlvbi51cmkpLFxyXG4gICAgcmFuZ2U6IHRvUmFuZ2UobG9jYXRpb24ucmFuZ2UpXHJcbiAgfTtcclxufVxyXG52YXIgUmVmZXJlbmNlQWRhcHRlciA9IGNsYXNzIHtcclxuICBjb25zdHJ1Y3Rvcihfd29ya2VyKSB7XHJcbiAgICB0aGlzLl93b3JrZXIgPSBfd29ya2VyO1xyXG4gIH1cclxuICBwcm92aWRlUmVmZXJlbmNlcyhtb2RlbCwgcG9zaXRpb24sIGNvbnRleHQsIHRva2VuKSB7XHJcbiAgICBjb25zdCByZXNvdXJjZSA9IG1vZGVsLnVyaTtcclxuICAgIHJldHVybiB0aGlzLl93b3JrZXIocmVzb3VyY2UpLnRoZW4oKHdvcmtlcikgPT4ge1xyXG4gICAgICByZXR1cm4gd29ya2VyLmZpbmRSZWZlcmVuY2VzKHJlc291cmNlLnRvU3RyaW5nKCksIGZyb21Qb3NpdGlvbihwb3NpdGlvbikpO1xyXG4gICAgfSkudGhlbigoZW50cmllcykgPT4ge1xyXG4gICAgICBpZiAoIWVudHJpZXMpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGVudHJpZXMubWFwKHRvTG9jYXRpb24pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59O1xyXG52YXIgUmVuYW1lQWRhcHRlciA9IGNsYXNzIHtcclxuICBjb25zdHJ1Y3Rvcihfd29ya2VyKSB7XHJcbiAgICB0aGlzLl93b3JrZXIgPSBfd29ya2VyO1xyXG4gIH1cclxuICBwcm92aWRlUmVuYW1lRWRpdHMobW9kZWwsIHBvc2l0aW9uLCBuZXdOYW1lLCB0b2tlbikge1xyXG4gICAgY29uc3QgcmVzb3VyY2UgPSBtb2RlbC51cmk7XHJcbiAgICByZXR1cm4gdGhpcy5fd29ya2VyKHJlc291cmNlKS50aGVuKCh3b3JrZXIpID0+IHtcclxuICAgICAgcmV0dXJuIHdvcmtlci5kb1JlbmFtZShyZXNvdXJjZS50b1N0cmluZygpLCBmcm9tUG9zaXRpb24ocG9zaXRpb24pLCBuZXdOYW1lKTtcclxuICAgIH0pLnRoZW4oKGVkaXQpID0+IHtcclxuICAgICAgcmV0dXJuIHRvV29ya3NwYWNlRWRpdChlZGl0KTtcclxuICAgIH0pO1xyXG4gIH1cclxufTtcclxuZnVuY3Rpb24gdG9Xb3Jrc3BhY2VFZGl0KGVkaXQpIHtcclxuICBpZiAoIWVkaXQgfHwgIWVkaXQuY2hhbmdlcykge1xyXG4gICAgcmV0dXJuIHZvaWQgMDtcclxuICB9XHJcbiAgbGV0IHJlc291cmNlRWRpdHMgPSBbXTtcclxuICBmb3IgKGxldCB1cmkgaW4gZWRpdC5jaGFuZ2VzKSB7XHJcbiAgICBjb25zdCBfdXJpID0gbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMuVXJpLnBhcnNlKHVyaSk7XHJcbiAgICBmb3IgKGxldCBlIG9mIGVkaXQuY2hhbmdlc1t1cmldKSB7XHJcbiAgICAgIHJlc291cmNlRWRpdHMucHVzaCh7XHJcbiAgICAgICAgcmVzb3VyY2U6IF91cmksXHJcbiAgICAgICAgdmVyc2lvbklkOiB2b2lkIDAsXHJcbiAgICAgICAgdGV4dEVkaXQ6IHtcclxuICAgICAgICAgIHJhbmdlOiB0b1JhbmdlKGUucmFuZ2UpLFxyXG4gICAgICAgICAgdGV4dDogZS5uZXdUZXh0XHJcbiAgICAgICAgfVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcbiAgcmV0dXJuIHtcclxuICAgIGVkaXRzOiByZXNvdXJjZUVkaXRzXHJcbiAgfTtcclxufVxyXG52YXIgRG9jdW1lbnRTeW1ib2xBZGFwdGVyID0gY2xhc3Mge1xyXG4gIGNvbnN0cnVjdG9yKF93b3JrZXIpIHtcclxuICAgIHRoaXMuX3dvcmtlciA9IF93b3JrZXI7XHJcbiAgfVxyXG4gIHByb3ZpZGVEb2N1bWVudFN5bWJvbHMobW9kZWwsIHRva2VuKSB7XHJcbiAgICBjb25zdCByZXNvdXJjZSA9IG1vZGVsLnVyaTtcclxuICAgIHJldHVybiB0aGlzLl93b3JrZXIocmVzb3VyY2UpLnRoZW4oKHdvcmtlcikgPT4gd29ya2VyLmZpbmREb2N1bWVudFN5bWJvbHMocmVzb3VyY2UudG9TdHJpbmcoKSkpLnRoZW4oKGl0ZW1zKSA9PiB7XHJcbiAgICAgIGlmICghaXRlbXMpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIGl0ZW1zLm1hcCgoaXRlbSkgPT4ge1xyXG4gICAgICAgIGlmIChpc0RvY3VtZW50U3ltYm9sKGl0ZW0pKSB7XHJcbiAgICAgICAgICByZXR1cm4gdG9Eb2N1bWVudFN5bWJvbChpdGVtKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgIG5hbWU6IGl0ZW0ubmFtZSxcclxuICAgICAgICAgIGRldGFpbDogXCJcIixcclxuICAgICAgICAgIGNvbnRhaW5lck5hbWU6IGl0ZW0uY29udGFpbmVyTmFtZSxcclxuICAgICAgICAgIGtpbmQ6IHRvU3ltYm9sS2luZChpdGVtLmtpbmQpLFxyXG4gICAgICAgICAgcmFuZ2U6IHRvUmFuZ2UoaXRlbS5sb2NhdGlvbi5yYW5nZSksXHJcbiAgICAgICAgICBzZWxlY3Rpb25SYW5nZTogdG9SYW5nZShpdGVtLmxvY2F0aW9uLnJhbmdlKSxcclxuICAgICAgICAgIHRhZ3M6IFtdXHJcbiAgICAgICAgfTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcbn07XHJcbmZ1bmN0aW9uIGlzRG9jdW1lbnRTeW1ib2woc3ltYm9sKSB7XHJcbiAgcmV0dXJuIFwiY2hpbGRyZW5cIiBpbiBzeW1ib2w7XHJcbn1cclxuZnVuY3Rpb24gdG9Eb2N1bWVudFN5bWJvbChzeW1ib2wpIHtcclxuICByZXR1cm4ge1xyXG4gICAgbmFtZTogc3ltYm9sLm5hbWUsXHJcbiAgICBkZXRhaWw6IHN5bWJvbC5kZXRhaWwgPz8gXCJcIixcclxuICAgIGtpbmQ6IHRvU3ltYm9sS2luZChzeW1ib2wua2luZCksXHJcbiAgICByYW5nZTogdG9SYW5nZShzeW1ib2wucmFuZ2UpLFxyXG4gICAgc2VsZWN0aW9uUmFuZ2U6IHRvUmFuZ2Uoc3ltYm9sLnNlbGVjdGlvblJhbmdlKSxcclxuICAgIHRhZ3M6IHN5bWJvbC50YWdzID8/IFtdLFxyXG4gICAgY2hpbGRyZW46IChzeW1ib2wuY2hpbGRyZW4gPz8gW10pLm1hcCgoaXRlbSkgPT4gdG9Eb2N1bWVudFN5bWJvbChpdGVtKSlcclxuICB9O1xyXG59XHJcbmZ1bmN0aW9uIHRvU3ltYm9sS2luZChraW5kKSB7XHJcbiAgbGV0IG1LaW5kID0gbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMubGFuZ3VhZ2VzLlN5bWJvbEtpbmQ7XHJcbiAgc3dpdGNoIChraW5kKSB7XHJcbiAgICBjYXNlIFN5bWJvbEtpbmQuRmlsZTpcclxuICAgICAgcmV0dXJuIG1LaW5kLkZpbGU7XHJcbiAgICBjYXNlIFN5bWJvbEtpbmQuTW9kdWxlOlxyXG4gICAgICByZXR1cm4gbUtpbmQuTW9kdWxlO1xyXG4gICAgY2FzZSBTeW1ib2xLaW5kLk5hbWVzcGFjZTpcclxuICAgICAgcmV0dXJuIG1LaW5kLk5hbWVzcGFjZTtcclxuICAgIGNhc2UgU3ltYm9sS2luZC5QYWNrYWdlOlxyXG4gICAgICByZXR1cm4gbUtpbmQuUGFja2FnZTtcclxuICAgIGNhc2UgU3ltYm9sS2luZC5DbGFzczpcclxuICAgICAgcmV0dXJuIG1LaW5kLkNsYXNzO1xyXG4gICAgY2FzZSBTeW1ib2xLaW5kLk1ldGhvZDpcclxuICAgICAgcmV0dXJuIG1LaW5kLk1ldGhvZDtcclxuICAgIGNhc2UgU3ltYm9sS2luZC5Qcm9wZXJ0eTpcclxuICAgICAgcmV0dXJuIG1LaW5kLlByb3BlcnR5O1xyXG4gICAgY2FzZSBTeW1ib2xLaW5kLkZpZWxkOlxyXG4gICAgICByZXR1cm4gbUtpbmQuRmllbGQ7XHJcbiAgICBjYXNlIFN5bWJvbEtpbmQuQ29uc3RydWN0b3I6XHJcbiAgICAgIHJldHVybiBtS2luZC5Db25zdHJ1Y3RvcjtcclxuICAgIGNhc2UgU3ltYm9sS2luZC5FbnVtOlxyXG4gICAgICByZXR1cm4gbUtpbmQuRW51bTtcclxuICAgIGNhc2UgU3ltYm9sS2luZC5JbnRlcmZhY2U6XHJcbiAgICAgIHJldHVybiBtS2luZC5JbnRlcmZhY2U7XHJcbiAgICBjYXNlIFN5bWJvbEtpbmQuRnVuY3Rpb246XHJcbiAgICAgIHJldHVybiBtS2luZC5GdW5jdGlvbjtcclxuICAgIGNhc2UgU3ltYm9sS2luZC5WYXJpYWJsZTpcclxuICAgICAgcmV0dXJuIG1LaW5kLlZhcmlhYmxlO1xyXG4gICAgY2FzZSBTeW1ib2xLaW5kLkNvbnN0YW50OlxyXG4gICAgICByZXR1cm4gbUtpbmQuQ29uc3RhbnQ7XHJcbiAgICBjYXNlIFN5bWJvbEtpbmQuU3RyaW5nOlxyXG4gICAgICByZXR1cm4gbUtpbmQuU3RyaW5nO1xyXG4gICAgY2FzZSBTeW1ib2xLaW5kLk51bWJlcjpcclxuICAgICAgcmV0dXJuIG1LaW5kLk51bWJlcjtcclxuICAgIGNhc2UgU3ltYm9sS2luZC5Cb29sZWFuOlxyXG4gICAgICByZXR1cm4gbUtpbmQuQm9vbGVhbjtcclxuICAgIGNhc2UgU3ltYm9sS2luZC5BcnJheTpcclxuICAgICAgcmV0dXJuIG1LaW5kLkFycmF5O1xyXG4gIH1cclxuICByZXR1cm4gbUtpbmQuRnVuY3Rpb247XHJcbn1cclxudmFyIERvY3VtZW50TGlua0FkYXB0ZXIgPSBjbGFzcyB7XHJcbiAgY29uc3RydWN0b3IoX3dvcmtlcikge1xyXG4gICAgdGhpcy5fd29ya2VyID0gX3dvcmtlcjtcclxuICB9XHJcbiAgcHJvdmlkZUxpbmtzKG1vZGVsLCB0b2tlbikge1xyXG4gICAgY29uc3QgcmVzb3VyY2UgPSBtb2RlbC51cmk7XHJcbiAgICByZXR1cm4gdGhpcy5fd29ya2VyKHJlc291cmNlKS50aGVuKCh3b3JrZXIpID0+IHdvcmtlci5maW5kRG9jdW1lbnRMaW5rcyhyZXNvdXJjZS50b1N0cmluZygpKSkudGhlbigoaXRlbXMpID0+IHtcclxuICAgICAgaWYgKCFpdGVtcykge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4ge1xyXG4gICAgICAgIGxpbmtzOiBpdGVtcy5tYXAoKGl0ZW0pID0+ICh7XHJcbiAgICAgICAgICByYW5nZTogdG9SYW5nZShpdGVtLnJhbmdlKSxcclxuICAgICAgICAgIHVybDogaXRlbS50YXJnZXRcclxuICAgICAgICB9KSlcclxuICAgICAgfTtcclxuICAgIH0pO1xyXG4gIH1cclxufTtcclxudmFyIERvY3VtZW50Rm9ybWF0dGluZ0VkaXRQcm92aWRlciA9IGNsYXNzIHtcclxuICBjb25zdHJ1Y3Rvcihfd29ya2VyKSB7XHJcbiAgICB0aGlzLl93b3JrZXIgPSBfd29ya2VyO1xyXG4gIH1cclxuICBwcm92aWRlRG9jdW1lbnRGb3JtYXR0aW5nRWRpdHMobW9kZWwsIG9wdGlvbnMsIHRva2VuKSB7XHJcbiAgICBjb25zdCByZXNvdXJjZSA9IG1vZGVsLnVyaTtcclxuICAgIHJldHVybiB0aGlzLl93b3JrZXIocmVzb3VyY2UpLnRoZW4oKHdvcmtlcikgPT4ge1xyXG4gICAgICByZXR1cm4gd29ya2VyLmZvcm1hdChyZXNvdXJjZS50b1N0cmluZygpLCBudWxsLCBmcm9tRm9ybWF0dGluZ09wdGlvbnMob3B0aW9ucykpLnRoZW4oKGVkaXRzKSA9PiB7XHJcbiAgICAgICAgaWYgKCFlZGl0cyB8fCBlZGl0cy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGVkaXRzLm1hcCh0b1RleHRFZGl0KTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcbn07XHJcbnZhciBEb2N1bWVudFJhbmdlRm9ybWF0dGluZ0VkaXRQcm92aWRlciA9IGNsYXNzIHtcclxuICBjb25zdHJ1Y3Rvcihfd29ya2VyKSB7XHJcbiAgICB0aGlzLl93b3JrZXIgPSBfd29ya2VyO1xyXG4gICAgdGhpcy5jYW5Gb3JtYXRNdWx0aXBsZVJhbmdlcyA9IGZhbHNlO1xyXG4gIH1cclxuICBwcm92aWRlRG9jdW1lbnRSYW5nZUZvcm1hdHRpbmdFZGl0cyhtb2RlbCwgcmFuZ2UsIG9wdGlvbnMsIHRva2VuKSB7XHJcbiAgICBjb25zdCByZXNvdXJjZSA9IG1vZGVsLnVyaTtcclxuICAgIHJldHVybiB0aGlzLl93b3JrZXIocmVzb3VyY2UpLnRoZW4oKHdvcmtlcikgPT4ge1xyXG4gICAgICByZXR1cm4gd29ya2VyLmZvcm1hdChyZXNvdXJjZS50b1N0cmluZygpLCBmcm9tUmFuZ2UocmFuZ2UpLCBmcm9tRm9ybWF0dGluZ09wdGlvbnMob3B0aW9ucykpLnRoZW4oKGVkaXRzKSA9PiB7XHJcbiAgICAgICAgaWYgKCFlZGl0cyB8fCBlZGl0cy5sZW5ndGggPT09IDApIHtcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGVkaXRzLm1hcCh0b1RleHRFZGl0KTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcbn07XHJcbmZ1bmN0aW9uIGZyb21Gb3JtYXR0aW5nT3B0aW9ucyhvcHRpb25zKSB7XHJcbiAgcmV0dXJuIHtcclxuICAgIHRhYlNpemU6IG9wdGlvbnMudGFiU2l6ZSxcclxuICAgIGluc2VydFNwYWNlczogb3B0aW9ucy5pbnNlcnRTcGFjZXNcclxuICB9O1xyXG59XHJcbnZhciBEb2N1bWVudENvbG9yQWRhcHRlciA9IGNsYXNzIHtcclxuICBjb25zdHJ1Y3Rvcihfd29ya2VyKSB7XHJcbiAgICB0aGlzLl93b3JrZXIgPSBfd29ya2VyO1xyXG4gIH1cclxuICBwcm92aWRlRG9jdW1lbnRDb2xvcnMobW9kZWwsIHRva2VuKSB7XHJcbiAgICBjb25zdCByZXNvdXJjZSA9IG1vZGVsLnVyaTtcclxuICAgIHJldHVybiB0aGlzLl93b3JrZXIocmVzb3VyY2UpLnRoZW4oKHdvcmtlcikgPT4gd29ya2VyLmZpbmREb2N1bWVudENvbG9ycyhyZXNvdXJjZS50b1N0cmluZygpKSkudGhlbigoaW5mb3MpID0+IHtcclxuICAgICAgaWYgKCFpbmZvcykge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gaW5mb3MubWFwKChpdGVtKSA9PiAoe1xyXG4gICAgICAgIGNvbG9yOiBpdGVtLmNvbG9yLFxyXG4gICAgICAgIHJhbmdlOiB0b1JhbmdlKGl0ZW0ucmFuZ2UpXHJcbiAgICAgIH0pKTtcclxuICAgIH0pO1xyXG4gIH1cclxuICBwcm92aWRlQ29sb3JQcmVzZW50YXRpb25zKG1vZGVsLCBpbmZvLCB0b2tlbikge1xyXG4gICAgY29uc3QgcmVzb3VyY2UgPSBtb2RlbC51cmk7XHJcbiAgICByZXR1cm4gdGhpcy5fd29ya2VyKHJlc291cmNlKS50aGVuKFxyXG4gICAgICAod29ya2VyKSA9PiB3b3JrZXIuZ2V0Q29sb3JQcmVzZW50YXRpb25zKHJlc291cmNlLnRvU3RyaW5nKCksIGluZm8uY29sb3IsIGZyb21SYW5nZShpbmZvLnJhbmdlKSlcclxuICAgICkudGhlbigocHJlc2VudGF0aW9ucykgPT4ge1xyXG4gICAgICBpZiAoIXByZXNlbnRhdGlvbnMpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHByZXNlbnRhdGlvbnMubWFwKChwcmVzZW50YXRpb24pID0+IHtcclxuICAgICAgICBsZXQgaXRlbSA9IHtcclxuICAgICAgICAgIGxhYmVsOiBwcmVzZW50YXRpb24ubGFiZWxcclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmIChwcmVzZW50YXRpb24udGV4dEVkaXQpIHtcclxuICAgICAgICAgIGl0ZW0udGV4dEVkaXQgPSB0b1RleHRFZGl0KHByZXNlbnRhdGlvbi50ZXh0RWRpdCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChwcmVzZW50YXRpb24uYWRkaXRpb25hbFRleHRFZGl0cykge1xyXG4gICAgICAgICAgaXRlbS5hZGRpdGlvbmFsVGV4dEVkaXRzID0gcHJlc2VudGF0aW9uLmFkZGl0aW9uYWxUZXh0RWRpdHMubWFwKHRvVGV4dEVkaXQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gaXRlbTtcclxuICAgICAgfSk7XHJcbiAgICB9KTtcclxuICB9XHJcbn07XHJcbnZhciBGb2xkaW5nUmFuZ2VBZGFwdGVyID0gY2xhc3Mge1xyXG4gIGNvbnN0cnVjdG9yKF93b3JrZXIpIHtcclxuICAgIHRoaXMuX3dvcmtlciA9IF93b3JrZXI7XHJcbiAgfVxyXG4gIHByb3ZpZGVGb2xkaW5nUmFuZ2VzKG1vZGVsLCBjb250ZXh0LCB0b2tlbikge1xyXG4gICAgY29uc3QgcmVzb3VyY2UgPSBtb2RlbC51cmk7XHJcbiAgICByZXR1cm4gdGhpcy5fd29ya2VyKHJlc291cmNlKS50aGVuKCh3b3JrZXIpID0+IHdvcmtlci5nZXRGb2xkaW5nUmFuZ2VzKHJlc291cmNlLnRvU3RyaW5nKCksIGNvbnRleHQpKS50aGVuKChyYW5nZXMpID0+IHtcclxuICAgICAgaWYgKCFyYW5nZXMpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHJhbmdlcy5tYXAoKHJhbmdlKSA9PiB7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0ID0ge1xyXG4gICAgICAgICAgc3RhcnQ6IHJhbmdlLnN0YXJ0TGluZSArIDEsXHJcbiAgICAgICAgICBlbmQ6IHJhbmdlLmVuZExpbmUgKyAxXHJcbiAgICAgICAgfTtcclxuICAgICAgICBpZiAodHlwZW9mIHJhbmdlLmtpbmQgIT09IFwidW5kZWZpbmVkXCIpIHtcclxuICAgICAgICAgIHJlc3VsdC5raW5kID0gdG9Gb2xkaW5nUmFuZ2VLaW5kKHJhbmdlLmtpbmQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxufTtcclxuZnVuY3Rpb24gdG9Gb2xkaW5nUmFuZ2VLaW5kKGtpbmQpIHtcclxuICBzd2l0Y2ggKGtpbmQpIHtcclxuICAgIGNhc2UgRm9sZGluZ1JhbmdlS2luZC5Db21tZW50OlxyXG4gICAgICByZXR1cm4gbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMubGFuZ3VhZ2VzLkZvbGRpbmdSYW5nZUtpbmQuQ29tbWVudDtcclxuICAgIGNhc2UgRm9sZGluZ1JhbmdlS2luZC5JbXBvcnRzOlxyXG4gICAgICByZXR1cm4gbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMubGFuZ3VhZ2VzLkZvbGRpbmdSYW5nZUtpbmQuSW1wb3J0cztcclxuICAgIGNhc2UgRm9sZGluZ1JhbmdlS2luZC5SZWdpb246XHJcbiAgICAgIHJldHVybiBtb25hY29fZWRpdG9yX2NvcmVfZXhwb3J0cy5sYW5ndWFnZXMuRm9sZGluZ1JhbmdlS2luZC5SZWdpb247XHJcbiAgfVxyXG4gIHJldHVybiB2b2lkIDA7XHJcbn1cclxudmFyIFNlbGVjdGlvblJhbmdlQWRhcHRlciA9IGNsYXNzIHtcclxuICBjb25zdHJ1Y3Rvcihfd29ya2VyKSB7XHJcbiAgICB0aGlzLl93b3JrZXIgPSBfd29ya2VyO1xyXG4gIH1cclxuICBwcm92aWRlU2VsZWN0aW9uUmFuZ2VzKG1vZGVsLCBwb3NpdGlvbnMsIHRva2VuKSB7XHJcbiAgICBjb25zdCByZXNvdXJjZSA9IG1vZGVsLnVyaTtcclxuICAgIHJldHVybiB0aGlzLl93b3JrZXIocmVzb3VyY2UpLnRoZW4oXHJcbiAgICAgICh3b3JrZXIpID0+IHdvcmtlci5nZXRTZWxlY3Rpb25SYW5nZXMoXHJcbiAgICAgICAgcmVzb3VyY2UudG9TdHJpbmcoKSxcclxuICAgICAgICBwb3NpdGlvbnMubWFwKGZyb21Qb3NpdGlvbilcclxuICAgICAgKVxyXG4gICAgKS50aGVuKChzZWxlY3Rpb25SYW5nZXMpID0+IHtcclxuICAgICAgaWYgKCFzZWxlY3Rpb25SYW5nZXMpIHtcclxuICAgICAgICByZXR1cm47XHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIHNlbGVjdGlvblJhbmdlcy5tYXAoKHNlbGVjdGlvblJhbmdlKSA9PiB7XHJcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gW107XHJcbiAgICAgICAgd2hpbGUgKHNlbGVjdGlvblJhbmdlKSB7XHJcbiAgICAgICAgICByZXN1bHQucHVzaCh7IHJhbmdlOiB0b1JhbmdlKHNlbGVjdGlvblJhbmdlLnJhbmdlKSB9KTtcclxuICAgICAgICAgIHNlbGVjdGlvblJhbmdlID0gc2VsZWN0aW9uUmFuZ2UucGFyZW50O1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH1cclxufTtcclxuXHJcbi8vIHNyYy9sYW5ndWFnZS9odG1sL2h0bWxNb2RlLnRzXHJcbnZhciBIVE1MQ29tcGxldGlvbkFkYXB0ZXIgPSBjbGFzcyBleHRlbmRzIENvbXBsZXRpb25BZGFwdGVyIHtcclxuICBjb25zdHJ1Y3Rvcih3b3JrZXIpIHtcclxuICAgIHN1cGVyKHdvcmtlciwgW1wiLlwiLCBcIjpcIiwgXCI8XCIsICdcIicsIFwiPVwiLCBcIi9cIl0pO1xyXG4gIH1cclxufTtcclxuZnVuY3Rpb24gc2V0dXBNb2RlMShkZWZhdWx0cykge1xyXG4gIGNvbnN0IGNsaWVudCA9IG5ldyBXb3JrZXJNYW5hZ2VyKGRlZmF1bHRzKTtcclxuICBjb25zdCB3b3JrZXIgPSAoLi4udXJpcykgPT4ge1xyXG4gICAgcmV0dXJuIGNsaWVudC5nZXRMYW5ndWFnZVNlcnZpY2VXb3JrZXIoLi4udXJpcyk7XHJcbiAgfTtcclxuICBsZXQgbGFuZ3VhZ2VJZCA9IGRlZmF1bHRzLmxhbmd1YWdlSWQ7XHJcbiAgbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMubGFuZ3VhZ2VzLnJlZ2lzdGVyQ29tcGxldGlvbkl0ZW1Qcm92aWRlcihsYW5ndWFnZUlkLCBuZXcgSFRNTENvbXBsZXRpb25BZGFwdGVyKHdvcmtlcikpO1xyXG4gIG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLmxhbmd1YWdlcy5yZWdpc3RlckhvdmVyUHJvdmlkZXIobGFuZ3VhZ2VJZCwgbmV3IEhvdmVyQWRhcHRlcih3b3JrZXIpKTtcclxuICBtb25hY29fZWRpdG9yX2NvcmVfZXhwb3J0cy5sYW5ndWFnZXMucmVnaXN0ZXJEb2N1bWVudEhpZ2hsaWdodFByb3ZpZGVyKFxyXG4gICAgbGFuZ3VhZ2VJZCxcclxuICAgIG5ldyBEb2N1bWVudEhpZ2hsaWdodEFkYXB0ZXIod29ya2VyKVxyXG4gICk7XHJcbiAgbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMubGFuZ3VhZ2VzLnJlZ2lzdGVyTGlua1Byb3ZpZGVyKGxhbmd1YWdlSWQsIG5ldyBEb2N1bWVudExpbmtBZGFwdGVyKHdvcmtlcikpO1xyXG4gIG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLmxhbmd1YWdlcy5yZWdpc3RlckZvbGRpbmdSYW5nZVByb3ZpZGVyKFxyXG4gICAgbGFuZ3VhZ2VJZCxcclxuICAgIG5ldyBGb2xkaW5nUmFuZ2VBZGFwdGVyKHdvcmtlcilcclxuICApO1xyXG4gIG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLmxhbmd1YWdlcy5yZWdpc3RlckRvY3VtZW50U3ltYm9sUHJvdmlkZXIoXHJcbiAgICBsYW5ndWFnZUlkLFxyXG4gICAgbmV3IERvY3VtZW50U3ltYm9sQWRhcHRlcih3b3JrZXIpXHJcbiAgKTtcclxuICBtb25hY29fZWRpdG9yX2NvcmVfZXhwb3J0cy5sYW5ndWFnZXMucmVnaXN0ZXJTZWxlY3Rpb25SYW5nZVByb3ZpZGVyKFxyXG4gICAgbGFuZ3VhZ2VJZCxcclxuICAgIG5ldyBTZWxlY3Rpb25SYW5nZUFkYXB0ZXIod29ya2VyKVxyXG4gICk7XHJcbiAgbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMubGFuZ3VhZ2VzLnJlZ2lzdGVyUmVuYW1lUHJvdmlkZXIobGFuZ3VhZ2VJZCwgbmV3IFJlbmFtZUFkYXB0ZXIod29ya2VyKSk7XHJcbiAgaWYgKGxhbmd1YWdlSWQgPT09IFwiaHRtbFwiKSB7XHJcbiAgICBtb25hY29fZWRpdG9yX2NvcmVfZXhwb3J0cy5sYW5ndWFnZXMucmVnaXN0ZXJEb2N1bWVudEZvcm1hdHRpbmdFZGl0UHJvdmlkZXIoXHJcbiAgICAgIGxhbmd1YWdlSWQsXHJcbiAgICAgIG5ldyBEb2N1bWVudEZvcm1hdHRpbmdFZGl0UHJvdmlkZXIod29ya2VyKVxyXG4gICAgKTtcclxuICAgIG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLmxhbmd1YWdlcy5yZWdpc3RlckRvY3VtZW50UmFuZ2VGb3JtYXR0aW5nRWRpdFByb3ZpZGVyKFxyXG4gICAgICBsYW5ndWFnZUlkLFxyXG4gICAgICBuZXcgRG9jdW1lbnRSYW5nZUZvcm1hdHRpbmdFZGl0UHJvdmlkZXIod29ya2VyKVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuZnVuY3Rpb24gc2V0dXBNb2RlKGRlZmF1bHRzKSB7XHJcbiAgY29uc3QgZGlzcG9zYWJsZXMgPSBbXTtcclxuICBjb25zdCBwcm92aWRlcnMgPSBbXTtcclxuICBjb25zdCBjbGllbnQgPSBuZXcgV29ya2VyTWFuYWdlcihkZWZhdWx0cyk7XHJcbiAgZGlzcG9zYWJsZXMucHVzaChjbGllbnQpO1xyXG4gIGNvbnN0IHdvcmtlciA9ICguLi51cmlzKSA9PiB7XHJcbiAgICByZXR1cm4gY2xpZW50LmdldExhbmd1YWdlU2VydmljZVdvcmtlciguLi51cmlzKTtcclxuICB9O1xyXG4gIGZ1bmN0aW9uIHJlZ2lzdGVyUHJvdmlkZXJzKCkge1xyXG4gICAgY29uc3QgeyBsYW5ndWFnZUlkLCBtb2RlQ29uZmlndXJhdGlvbiB9ID0gZGVmYXVsdHM7XHJcbiAgICBkaXNwb3NlQWxsKHByb3ZpZGVycyk7XHJcbiAgICBpZiAobW9kZUNvbmZpZ3VyYXRpb24uY29tcGxldGlvbkl0ZW1zKSB7XHJcbiAgICAgIHByb3ZpZGVycy5wdXNoKFxyXG4gICAgICAgIG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLmxhbmd1YWdlcy5yZWdpc3RlckNvbXBsZXRpb25JdGVtUHJvdmlkZXIobGFuZ3VhZ2VJZCwgbmV3IEhUTUxDb21wbGV0aW9uQWRhcHRlcih3b3JrZXIpKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgaWYgKG1vZGVDb25maWd1cmF0aW9uLmhvdmVycykge1xyXG4gICAgICBwcm92aWRlcnMucHVzaChcclxuICAgICAgICBtb25hY29fZWRpdG9yX2NvcmVfZXhwb3J0cy5sYW5ndWFnZXMucmVnaXN0ZXJIb3ZlclByb3ZpZGVyKGxhbmd1YWdlSWQsIG5ldyBIb3ZlckFkYXB0ZXIod29ya2VyKSlcclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIGlmIChtb2RlQ29uZmlndXJhdGlvbi5kb2N1bWVudEhpZ2hsaWdodHMpIHtcclxuICAgICAgcHJvdmlkZXJzLnB1c2goXHJcbiAgICAgICAgbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMubGFuZ3VhZ2VzLnJlZ2lzdGVyRG9jdW1lbnRIaWdobGlnaHRQcm92aWRlcihcclxuICAgICAgICAgIGxhbmd1YWdlSWQsXHJcbiAgICAgICAgICBuZXcgRG9jdW1lbnRIaWdobGlnaHRBZGFwdGVyKHdvcmtlcilcclxuICAgICAgICApXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBpZiAobW9kZUNvbmZpZ3VyYXRpb24ubGlua3MpIHtcclxuICAgICAgcHJvdmlkZXJzLnB1c2goXHJcbiAgICAgICAgbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMubGFuZ3VhZ2VzLnJlZ2lzdGVyTGlua1Byb3ZpZGVyKGxhbmd1YWdlSWQsIG5ldyBEb2N1bWVudExpbmtBZGFwdGVyKHdvcmtlcikpXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBpZiAobW9kZUNvbmZpZ3VyYXRpb24uZG9jdW1lbnRTeW1ib2xzKSB7XHJcbiAgICAgIHByb3ZpZGVycy5wdXNoKFxyXG4gICAgICAgIG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLmxhbmd1YWdlcy5yZWdpc3RlckRvY3VtZW50U3ltYm9sUHJvdmlkZXIoXHJcbiAgICAgICAgICBsYW5ndWFnZUlkLFxyXG4gICAgICAgICAgbmV3IERvY3VtZW50U3ltYm9sQWRhcHRlcih3b3JrZXIpXHJcbiAgICAgICAgKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgaWYgKG1vZGVDb25maWd1cmF0aW9uLnJlbmFtZSkge1xyXG4gICAgICBwcm92aWRlcnMucHVzaChcclxuICAgICAgICBtb25hY29fZWRpdG9yX2NvcmVfZXhwb3J0cy5sYW5ndWFnZXMucmVnaXN0ZXJSZW5hbWVQcm92aWRlcihsYW5ndWFnZUlkLCBuZXcgUmVuYW1lQWRhcHRlcih3b3JrZXIpKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gICAgaWYgKG1vZGVDb25maWd1cmF0aW9uLmZvbGRpbmdSYW5nZXMpIHtcclxuICAgICAgcHJvdmlkZXJzLnB1c2goXHJcbiAgICAgICAgbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMubGFuZ3VhZ2VzLnJlZ2lzdGVyRm9sZGluZ1JhbmdlUHJvdmlkZXIoXHJcbiAgICAgICAgICBsYW5ndWFnZUlkLFxyXG4gICAgICAgICAgbmV3IEZvbGRpbmdSYW5nZUFkYXB0ZXIod29ya2VyKVxyXG4gICAgICAgIClcclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIGlmIChtb2RlQ29uZmlndXJhdGlvbi5zZWxlY3Rpb25SYW5nZXMpIHtcclxuICAgICAgcHJvdmlkZXJzLnB1c2goXHJcbiAgICAgICAgbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMubGFuZ3VhZ2VzLnJlZ2lzdGVyU2VsZWN0aW9uUmFuZ2VQcm92aWRlcihcclxuICAgICAgICAgIGxhbmd1YWdlSWQsXHJcbiAgICAgICAgICBuZXcgU2VsZWN0aW9uUmFuZ2VBZGFwdGVyKHdvcmtlcilcclxuICAgICAgICApXHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgICBpZiAobW9kZUNvbmZpZ3VyYXRpb24uZG9jdW1lbnRGb3JtYXR0aW5nRWRpdHMpIHtcclxuICAgICAgcHJvdmlkZXJzLnB1c2goXHJcbiAgICAgICAgbW9uYWNvX2VkaXRvcl9jb3JlX2V4cG9ydHMubGFuZ3VhZ2VzLnJlZ2lzdGVyRG9jdW1lbnRGb3JtYXR0aW5nRWRpdFByb3ZpZGVyKFxyXG4gICAgICAgICAgbGFuZ3VhZ2VJZCxcclxuICAgICAgICAgIG5ldyBEb2N1bWVudEZvcm1hdHRpbmdFZGl0UHJvdmlkZXIod29ya2VyKVxyXG4gICAgICAgIClcclxuICAgICAgKTtcclxuICAgIH1cclxuICAgIGlmIChtb2RlQ29uZmlndXJhdGlvbi5kb2N1bWVudFJhbmdlRm9ybWF0dGluZ0VkaXRzKSB7XHJcbiAgICAgIHByb3ZpZGVycy5wdXNoKFxyXG4gICAgICAgIG1vbmFjb19lZGl0b3JfY29yZV9leHBvcnRzLmxhbmd1YWdlcy5yZWdpc3RlckRvY3VtZW50UmFuZ2VGb3JtYXR0aW5nRWRpdFByb3ZpZGVyKFxyXG4gICAgICAgICAgbGFuZ3VhZ2VJZCxcclxuICAgICAgICAgIG5ldyBEb2N1bWVudFJhbmdlRm9ybWF0dGluZ0VkaXRQcm92aWRlcih3b3JrZXIpXHJcbiAgICAgICAgKVxyXG4gICAgICApO1xyXG4gICAgfVxyXG4gIH1cclxuICByZWdpc3RlclByb3ZpZGVycygpO1xyXG4gIGRpc3Bvc2FibGVzLnB1c2goYXNEaXNwb3NhYmxlKHByb3ZpZGVycykpO1xyXG4gIHJldHVybiBhc0Rpc3Bvc2FibGUoZGlzcG9zYWJsZXMpO1xyXG59XHJcbmZ1bmN0aW9uIGFzRGlzcG9zYWJsZShkaXNwb3NhYmxlcykge1xyXG4gIHJldHVybiB7IGRpc3Bvc2U6ICgpID0+IGRpc3Bvc2VBbGwoZGlzcG9zYWJsZXMpIH07XHJcbn1cclxuZnVuY3Rpb24gZGlzcG9zZUFsbChkaXNwb3NhYmxlcykge1xyXG4gIHdoaWxlIChkaXNwb3NhYmxlcy5sZW5ndGgpIHtcclxuICAgIGRpc3Bvc2FibGVzLnBvcCgpLmRpc3Bvc2UoKTtcclxuICB9XHJcbn1cclxuZXhwb3J0IHtcclxuICBDb21wbGV0aW9uQWRhcHRlcixcclxuICBEZWZpbml0aW9uQWRhcHRlcixcclxuICBEaWFnbm9zdGljc0FkYXB0ZXIsXHJcbiAgRG9jdW1lbnRDb2xvckFkYXB0ZXIsXHJcbiAgRG9jdW1lbnRGb3JtYXR0aW5nRWRpdFByb3ZpZGVyLFxyXG4gIERvY3VtZW50SGlnaGxpZ2h0QWRhcHRlcixcclxuICBEb2N1bWVudExpbmtBZGFwdGVyLFxyXG4gIERvY3VtZW50UmFuZ2VGb3JtYXR0aW5nRWRpdFByb3ZpZGVyLFxyXG4gIERvY3VtZW50U3ltYm9sQWRhcHRlcixcclxuICBGb2xkaW5nUmFuZ2VBZGFwdGVyLFxyXG4gIEhvdmVyQWRhcHRlcixcclxuICBSZWZlcmVuY2VBZGFwdGVyLFxyXG4gIFJlbmFtZUFkYXB0ZXIsXHJcbiAgU2VsZWN0aW9uUmFuZ2VBZGFwdGVyLFxyXG4gIFdvcmtlck1hbmFnZXIsXHJcbiAgZnJvbVBvc2l0aW9uLFxyXG4gIGZyb21SYW5nZSxcclxuICBzZXR1cE1vZGUsXHJcbiAgc2V0dXBNb2RlMSxcclxuICB0b1JhbmdlLFxyXG4gIHRvVGV4dEVkaXRcclxufTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/html/htmlMode.js\n");

/***/ })

}]);