"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_apex_apex_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.js":
/*!************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n\r\n// src/basic-languages/apex/apex.ts\r\nvar conf = {\r\n  // the default separators except `@$`\r\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n  comments: {\r\n    lineComment: \"//\",\r\n    blockComment: [\"/*\", \"*/\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" },\r\n    { open: \"<\", close: \">\" }\r\n  ],\r\n  folding: {\r\n    markers: {\r\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n    }\r\n  }\r\n};\r\nvar keywords = [\r\n  \"abstract\",\r\n  \"activate\",\r\n  \"and\",\r\n  \"any\",\r\n  \"array\",\r\n  \"as\",\r\n  \"asc\",\r\n  \"assert\",\r\n  \"autonomous\",\r\n  \"begin\",\r\n  \"bigdecimal\",\r\n  \"blob\",\r\n  \"boolean\",\r\n  \"break\",\r\n  \"bulk\",\r\n  \"by\",\r\n  \"case\",\r\n  \"cast\",\r\n  \"catch\",\r\n  \"char\",\r\n  \"class\",\r\n  \"collect\",\r\n  \"commit\",\r\n  \"const\",\r\n  \"continue\",\r\n  \"convertcurrency\",\r\n  \"decimal\",\r\n  \"default\",\r\n  \"delete\",\r\n  \"desc\",\r\n  \"do\",\r\n  \"double\",\r\n  \"else\",\r\n  \"end\",\r\n  \"enum\",\r\n  \"exception\",\r\n  \"exit\",\r\n  \"export\",\r\n  \"extends\",\r\n  \"false\",\r\n  \"final\",\r\n  \"finally\",\r\n  \"float\",\r\n  \"for\",\r\n  \"from\",\r\n  \"future\",\r\n  \"get\",\r\n  \"global\",\r\n  \"goto\",\r\n  \"group\",\r\n  \"having\",\r\n  \"hint\",\r\n  \"if\",\r\n  \"implements\",\r\n  \"import\",\r\n  \"in\",\r\n  \"inner\",\r\n  \"insert\",\r\n  \"instanceof\",\r\n  \"int\",\r\n  \"interface\",\r\n  \"into\",\r\n  \"join\",\r\n  \"last_90_days\",\r\n  \"last_month\",\r\n  \"last_n_days\",\r\n  \"last_week\",\r\n  \"like\",\r\n  \"limit\",\r\n  \"list\",\r\n  \"long\",\r\n  \"loop\",\r\n  \"map\",\r\n  \"merge\",\r\n  \"native\",\r\n  \"new\",\r\n  \"next_90_days\",\r\n  \"next_month\",\r\n  \"next_n_days\",\r\n  \"next_week\",\r\n  \"not\",\r\n  \"null\",\r\n  \"nulls\",\r\n  \"number\",\r\n  \"object\",\r\n  \"of\",\r\n  \"on\",\r\n  \"or\",\r\n  \"outer\",\r\n  \"override\",\r\n  \"package\",\r\n  \"parallel\",\r\n  \"pragma\",\r\n  \"private\",\r\n  \"protected\",\r\n  \"public\",\r\n  \"retrieve\",\r\n  \"return\",\r\n  \"returning\",\r\n  \"rollback\",\r\n  \"savepoint\",\r\n  \"search\",\r\n  \"select\",\r\n  \"set\",\r\n  \"short\",\r\n  \"sort\",\r\n  \"stat\",\r\n  \"static\",\r\n  \"strictfp\",\r\n  \"super\",\r\n  \"switch\",\r\n  \"synchronized\",\r\n  \"system\",\r\n  \"testmethod\",\r\n  \"then\",\r\n  \"this\",\r\n  \"this_month\",\r\n  \"this_week\",\r\n  \"throw\",\r\n  \"throws\",\r\n  \"today\",\r\n  \"tolabel\",\r\n  \"tomorrow\",\r\n  \"transaction\",\r\n  \"transient\",\r\n  \"trigger\",\r\n  \"true\",\r\n  \"try\",\r\n  \"type\",\r\n  \"undelete\",\r\n  \"update\",\r\n  \"upsert\",\r\n  \"using\",\r\n  \"virtual\",\r\n  \"void\",\r\n  \"volatile\",\r\n  \"webservice\",\r\n  \"when\",\r\n  \"where\",\r\n  \"while\",\r\n  \"yesterday\"\r\n];\r\nvar uppercaseFirstLetter = (lowercase) => lowercase.charAt(0).toUpperCase() + lowercase.substr(1);\r\nvar keywordsWithCaseVariations = [];\r\nkeywords.forEach((lowercase) => {\r\n  keywordsWithCaseVariations.push(lowercase);\r\n  keywordsWithCaseVariations.push(lowercase.toUpperCase());\r\n  keywordsWithCaseVariations.push(uppercaseFirstLetter(lowercase));\r\n});\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \".apex\",\r\n  keywords: keywordsWithCaseVariations,\r\n  operators: [\r\n    \"=\",\r\n    \">\",\r\n    \"<\",\r\n    \"!\",\r\n    \"~\",\r\n    \"?\",\r\n    \":\",\r\n    \"==\",\r\n    \"<=\",\r\n    \">=\",\r\n    \"!=\",\r\n    \"&&\",\r\n    \"||\",\r\n    \"++\",\r\n    \"--\",\r\n    \"+\",\r\n    \"-\",\r\n    \"*\",\r\n    \"/\",\r\n    \"&\",\r\n    \"|\",\r\n    \"^\",\r\n    \"%\",\r\n    \"<<\",\r\n    \">>\",\r\n    \">>>\",\r\n    \"+=\",\r\n    \"-=\",\r\n    \"*=\",\r\n    \"/=\",\r\n    \"&=\",\r\n    \"|=\",\r\n    \"^=\",\r\n    \"%=\",\r\n    \"<<=\",\r\n    \">>=\",\r\n    \">>>=\"\r\n  ],\r\n  // we include these common regular expressions\r\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n  digits: /\\d+(_+\\d+)*/,\r\n  octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n  binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n  // The main tokenizer for our languages\r\n  tokenizer: {\r\n    root: [\r\n      // identifiers and keywords\r\n      [\r\n        /[a-z_$][\\w$]*/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": { token: \"keyword.$0\" },\r\n            \"@default\": \"identifier\"\r\n          }\r\n        }\r\n      ],\r\n      // assume that identifiers starting with an uppercase letter are types\r\n      [\r\n        /[A-Z][\\w\\$]*/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": { token: \"keyword.$0\" },\r\n            \"@default\": \"type.identifier\"\r\n          }\r\n        }\r\n      ],\r\n      // whitespace\r\n      { include: \"@whitespace\" },\r\n      // delimiters and operators\r\n      [/[{}()\\[\\]]/, \"@brackets\"],\r\n      [/[<>](?!@symbols)/, \"@brackets\"],\r\n      [\r\n        /@symbols/,\r\n        {\r\n          cases: {\r\n            \"@operators\": \"delimiter\",\r\n            \"@default\": \"\"\r\n          }\r\n        }\r\n      ],\r\n      // @ annotations.\r\n      [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, \"annotation\"],\r\n      // numbers\r\n      [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\"],\r\n      [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\"],\r\n      [/(@digits)[fFdD]/, \"number.float\"],\r\n      [/(@digits)[lL]?/, \"number\"],\r\n      // delimiter: after number because of .\\d floats\r\n      [/[;,.]/, \"delimiter\"],\r\n      // strings\r\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      // non-teminated string\r\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      // non-teminated string\r\n      [/\"/, \"string\", '@string.\"'],\r\n      [/'/, \"string\", \"@string.'\"],\r\n      // characters\r\n      [/'[^\\\\']'/, \"string\"],\r\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\r\n      [/'/, \"string.invalid\"]\r\n    ],\r\n    whitespace: [\r\n      [/[ \\t\\r\\n]+/, \"\"],\r\n      [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@apexdoc\"],\r\n      [/\\/\\*/, \"comment\", \"@comment\"],\r\n      [/\\/\\/.*$/, \"comment\"]\r\n    ],\r\n    comment: [\r\n      [/[^\\/*]+/, \"comment\"],\r\n      // [/\\/\\*/, 'comment', '@push' ],    // nested comment not allowed :-(\r\n      // [/\\/\\*/,    'comment.invalid' ],    // this breaks block comments in the shape of /* //*/\r\n      [/\\*\\//, \"comment\", \"@pop\"],\r\n      [/[\\/*]/, \"comment\"]\r\n    ],\r\n    //Identical copy of comment above, except for the addition of .doc\r\n    apexdoc: [\r\n      [/[^\\/*]+/, \"comment.doc\"],\r\n      [/\\*\\//, \"comment.doc\", \"@pop\"],\r\n      [/[\\/*]/, \"comment.doc\"]\r\n    ],\r\n    string: [\r\n      [/[^\\\\\"']+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [\r\n        /[\"']/,\r\n        {\r\n          cases: {\r\n            \"$#==$S2\": { token: \"string\", next: \"@pop\" },\r\n            \"@default\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    ]\r\n  }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2FwZXgvYXBleC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnRUFBZ0UsSUFBSSxNQUFNO0FBQzFFO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLE9BQU8sS0FBSztBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxRQUFRLFlBQVksR0FBRztBQUM3QixNQUFNLHVCQUF1QjtBQUM3QixNQUFNLHVCQUF1QjtBQUM3QixNQUFNLHVCQUF1QjtBQUM3QixNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU0sUUFBUSxZQUFZLEdBQUc7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRDQUE0QyxJQUFJLGNBQWMsRUFBRSxjQUFjLEVBQUU7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHFCQUFxQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIscUJBQXFCO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdCQUF3QjtBQUNoQztBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVO0FBQ1Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLCtCQUErQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9hcGV4L2FwZXguanM/NjgwZSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogVmVyc2lvbjogMC41MC4wKGMzMjFkMGZiZWNiNTBhYjhhNTM2NWZhMTk2NTQ3NmIwYWU2M2ZjODcpXHJcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L21vbmFjby1lZGl0b3IvYmxvYi9tYWluL0xJQ0VOU0UudHh0XHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuXHJcbi8vIHNyYy9iYXNpYy1sYW5ndWFnZXMvYXBleC9hcGV4LnRzXHJcbnZhciBjb25mID0ge1xyXG4gIC8vIHRoZSBkZWZhdWx0IHNlcGFyYXRvcnMgZXhjZXB0IGBAJGBcclxuICB3b3JkUGF0dGVybjogLygtP1xcZCpcXC5cXGRcXHcqKXwoW15cXGBcXH5cXCFcXCNcXCVcXF5cXCZcXCpcXChcXClcXC1cXD1cXCtcXFtcXHtcXF1cXH1cXFxcXFx8XFw7XFw6XFwnXFxcIlxcLFxcLlxcPFxcPlxcL1xcP1xcc10rKS9nLFxyXG4gIGNvbW1lbnRzOiB7XHJcbiAgICBsaW5lQ29tbWVudDogXCIvL1wiLFxyXG4gICAgYmxvY2tDb21tZW50OiBbXCIvKlwiLCBcIiovXCJdXHJcbiAgfSxcclxuICBicmFja2V0czogW1xyXG4gICAgW1wie1wiLCBcIn1cIl0sXHJcbiAgICBbXCJbXCIsIFwiXVwiXSxcclxuICAgIFtcIihcIiwgXCIpXCJdXHJcbiAgXSxcclxuICBhdXRvQ2xvc2luZ1BhaXJzOiBbXHJcbiAgICB7IG9wZW46IFwie1wiLCBjbG9zZTogXCJ9XCIgfSxcclxuICAgIHsgb3BlbjogXCJbXCIsIGNsb3NlOiBcIl1cIiB9LFxyXG4gICAgeyBvcGVuOiBcIihcIiwgY2xvc2U6IFwiKVwiIH0sXHJcbiAgICB7IG9wZW46ICdcIicsIGNsb3NlOiAnXCInIH0sXHJcbiAgICB7IG9wZW46IFwiJ1wiLCBjbG9zZTogXCInXCIgfVxyXG4gIF0sXHJcbiAgc3Vycm91bmRpbmdQYWlyczogW1xyXG4gICAgeyBvcGVuOiBcIntcIiwgY2xvc2U6IFwifVwiIH0sXHJcbiAgICB7IG9wZW46IFwiW1wiLCBjbG9zZTogXCJdXCIgfSxcclxuICAgIHsgb3BlbjogXCIoXCIsIGNsb3NlOiBcIilcIiB9LFxyXG4gICAgeyBvcGVuOiAnXCInLCBjbG9zZTogJ1wiJyB9LFxyXG4gICAgeyBvcGVuOiBcIidcIiwgY2xvc2U6IFwiJ1wiIH0sXHJcbiAgICB7IG9wZW46IFwiPFwiLCBjbG9zZTogXCI+XCIgfVxyXG4gIF0sXHJcbiAgZm9sZGluZzoge1xyXG4gICAgbWFya2Vyczoge1xyXG4gICAgICBzdGFydDogbmV3IFJlZ0V4cChcIl5cXFxccyovL1xcXFxzKig/Oig/OiM/cmVnaW9uXFxcXGIpfCg/OjxlZGl0b3ItZm9sZFxcXFxiKSlcIiksXHJcbiAgICAgIGVuZDogbmV3IFJlZ0V4cChcIl5cXFxccyovL1xcXFxzKig/Oig/OiM/ZW5kcmVnaW9uXFxcXGIpfCg/OjwvZWRpdG9yLWZvbGQ+KSlcIilcclxuICAgIH1cclxuICB9XHJcbn07XHJcbnZhciBrZXl3b3JkcyA9IFtcclxuICBcImFic3RyYWN0XCIsXHJcbiAgXCJhY3RpdmF0ZVwiLFxyXG4gIFwiYW5kXCIsXHJcbiAgXCJhbnlcIixcclxuICBcImFycmF5XCIsXHJcbiAgXCJhc1wiLFxyXG4gIFwiYXNjXCIsXHJcbiAgXCJhc3NlcnRcIixcclxuICBcImF1dG9ub21vdXNcIixcclxuICBcImJlZ2luXCIsXHJcbiAgXCJiaWdkZWNpbWFsXCIsXHJcbiAgXCJibG9iXCIsXHJcbiAgXCJib29sZWFuXCIsXHJcbiAgXCJicmVha1wiLFxyXG4gIFwiYnVsa1wiLFxyXG4gIFwiYnlcIixcclxuICBcImNhc2VcIixcclxuICBcImNhc3RcIixcclxuICBcImNhdGNoXCIsXHJcbiAgXCJjaGFyXCIsXHJcbiAgXCJjbGFzc1wiLFxyXG4gIFwiY29sbGVjdFwiLFxyXG4gIFwiY29tbWl0XCIsXHJcbiAgXCJjb25zdFwiLFxyXG4gIFwiY29udGludWVcIixcclxuICBcImNvbnZlcnRjdXJyZW5jeVwiLFxyXG4gIFwiZGVjaW1hbFwiLFxyXG4gIFwiZGVmYXVsdFwiLFxyXG4gIFwiZGVsZXRlXCIsXHJcbiAgXCJkZXNjXCIsXHJcbiAgXCJkb1wiLFxyXG4gIFwiZG91YmxlXCIsXHJcbiAgXCJlbHNlXCIsXHJcbiAgXCJlbmRcIixcclxuICBcImVudW1cIixcclxuICBcImV4Y2VwdGlvblwiLFxyXG4gIFwiZXhpdFwiLFxyXG4gIFwiZXhwb3J0XCIsXHJcbiAgXCJleHRlbmRzXCIsXHJcbiAgXCJmYWxzZVwiLFxyXG4gIFwiZmluYWxcIixcclxuICBcImZpbmFsbHlcIixcclxuICBcImZsb2F0XCIsXHJcbiAgXCJmb3JcIixcclxuICBcImZyb21cIixcclxuICBcImZ1dHVyZVwiLFxyXG4gIFwiZ2V0XCIsXHJcbiAgXCJnbG9iYWxcIixcclxuICBcImdvdG9cIixcclxuICBcImdyb3VwXCIsXHJcbiAgXCJoYXZpbmdcIixcclxuICBcImhpbnRcIixcclxuICBcImlmXCIsXHJcbiAgXCJpbXBsZW1lbnRzXCIsXHJcbiAgXCJpbXBvcnRcIixcclxuICBcImluXCIsXHJcbiAgXCJpbm5lclwiLFxyXG4gIFwiaW5zZXJ0XCIsXHJcbiAgXCJpbnN0YW5jZW9mXCIsXHJcbiAgXCJpbnRcIixcclxuICBcImludGVyZmFjZVwiLFxyXG4gIFwiaW50b1wiLFxyXG4gIFwiam9pblwiLFxyXG4gIFwibGFzdF85MF9kYXlzXCIsXHJcbiAgXCJsYXN0X21vbnRoXCIsXHJcbiAgXCJsYXN0X25fZGF5c1wiLFxyXG4gIFwibGFzdF93ZWVrXCIsXHJcbiAgXCJsaWtlXCIsXHJcbiAgXCJsaW1pdFwiLFxyXG4gIFwibGlzdFwiLFxyXG4gIFwibG9uZ1wiLFxyXG4gIFwibG9vcFwiLFxyXG4gIFwibWFwXCIsXHJcbiAgXCJtZXJnZVwiLFxyXG4gIFwibmF0aXZlXCIsXHJcbiAgXCJuZXdcIixcclxuICBcIm5leHRfOTBfZGF5c1wiLFxyXG4gIFwibmV4dF9tb250aFwiLFxyXG4gIFwibmV4dF9uX2RheXNcIixcclxuICBcIm5leHRfd2Vla1wiLFxyXG4gIFwibm90XCIsXHJcbiAgXCJudWxsXCIsXHJcbiAgXCJudWxsc1wiLFxyXG4gIFwibnVtYmVyXCIsXHJcbiAgXCJvYmplY3RcIixcclxuICBcIm9mXCIsXHJcbiAgXCJvblwiLFxyXG4gIFwib3JcIixcclxuICBcIm91dGVyXCIsXHJcbiAgXCJvdmVycmlkZVwiLFxyXG4gIFwicGFja2FnZVwiLFxyXG4gIFwicGFyYWxsZWxcIixcclxuICBcInByYWdtYVwiLFxyXG4gIFwicHJpdmF0ZVwiLFxyXG4gIFwicHJvdGVjdGVkXCIsXHJcbiAgXCJwdWJsaWNcIixcclxuICBcInJldHJpZXZlXCIsXHJcbiAgXCJyZXR1cm5cIixcclxuICBcInJldHVybmluZ1wiLFxyXG4gIFwicm9sbGJhY2tcIixcclxuICBcInNhdmVwb2ludFwiLFxyXG4gIFwic2VhcmNoXCIsXHJcbiAgXCJzZWxlY3RcIixcclxuICBcInNldFwiLFxyXG4gIFwic2hvcnRcIixcclxuICBcInNvcnRcIixcclxuICBcInN0YXRcIixcclxuICBcInN0YXRpY1wiLFxyXG4gIFwic3RyaWN0ZnBcIixcclxuICBcInN1cGVyXCIsXHJcbiAgXCJzd2l0Y2hcIixcclxuICBcInN5bmNocm9uaXplZFwiLFxyXG4gIFwic3lzdGVtXCIsXHJcbiAgXCJ0ZXN0bWV0aG9kXCIsXHJcbiAgXCJ0aGVuXCIsXHJcbiAgXCJ0aGlzXCIsXHJcbiAgXCJ0aGlzX21vbnRoXCIsXHJcbiAgXCJ0aGlzX3dlZWtcIixcclxuICBcInRocm93XCIsXHJcbiAgXCJ0aHJvd3NcIixcclxuICBcInRvZGF5XCIsXHJcbiAgXCJ0b2xhYmVsXCIsXHJcbiAgXCJ0b21vcnJvd1wiLFxyXG4gIFwidHJhbnNhY3Rpb25cIixcclxuICBcInRyYW5zaWVudFwiLFxyXG4gIFwidHJpZ2dlclwiLFxyXG4gIFwidHJ1ZVwiLFxyXG4gIFwidHJ5XCIsXHJcbiAgXCJ0eXBlXCIsXHJcbiAgXCJ1bmRlbGV0ZVwiLFxyXG4gIFwidXBkYXRlXCIsXHJcbiAgXCJ1cHNlcnRcIixcclxuICBcInVzaW5nXCIsXHJcbiAgXCJ2aXJ0dWFsXCIsXHJcbiAgXCJ2b2lkXCIsXHJcbiAgXCJ2b2xhdGlsZVwiLFxyXG4gIFwid2Vic2VydmljZVwiLFxyXG4gIFwid2hlblwiLFxyXG4gIFwid2hlcmVcIixcclxuICBcIndoaWxlXCIsXHJcbiAgXCJ5ZXN0ZXJkYXlcIlxyXG5dO1xyXG52YXIgdXBwZXJjYXNlRmlyc3RMZXR0ZXIgPSAobG93ZXJjYXNlKSA9PiBsb3dlcmNhc2UuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkgKyBsb3dlcmNhc2Uuc3Vic3RyKDEpO1xyXG52YXIga2V5d29yZHNXaXRoQ2FzZVZhcmlhdGlvbnMgPSBbXTtcclxua2V5d29yZHMuZm9yRWFjaCgobG93ZXJjYXNlKSA9PiB7XHJcbiAga2V5d29yZHNXaXRoQ2FzZVZhcmlhdGlvbnMucHVzaChsb3dlcmNhc2UpO1xyXG4gIGtleXdvcmRzV2l0aENhc2VWYXJpYXRpb25zLnB1c2gobG93ZXJjYXNlLnRvVXBwZXJDYXNlKCkpO1xyXG4gIGtleXdvcmRzV2l0aENhc2VWYXJpYXRpb25zLnB1c2godXBwZXJjYXNlRmlyc3RMZXR0ZXIobG93ZXJjYXNlKSk7XHJcbn0pO1xyXG52YXIgbGFuZ3VhZ2UgPSB7XHJcbiAgZGVmYXVsdFRva2VuOiBcIlwiLFxyXG4gIHRva2VuUG9zdGZpeDogXCIuYXBleFwiLFxyXG4gIGtleXdvcmRzOiBrZXl3b3Jkc1dpdGhDYXNlVmFyaWF0aW9ucyxcclxuICBvcGVyYXRvcnM6IFtcclxuICAgIFwiPVwiLFxyXG4gICAgXCI+XCIsXHJcbiAgICBcIjxcIixcclxuICAgIFwiIVwiLFxyXG4gICAgXCJ+XCIsXHJcbiAgICBcIj9cIixcclxuICAgIFwiOlwiLFxyXG4gICAgXCI9PVwiLFxyXG4gICAgXCI8PVwiLFxyXG4gICAgXCI+PVwiLFxyXG4gICAgXCIhPVwiLFxyXG4gICAgXCImJlwiLFxyXG4gICAgXCJ8fFwiLFxyXG4gICAgXCIrK1wiLFxyXG4gICAgXCItLVwiLFxyXG4gICAgXCIrXCIsXHJcbiAgICBcIi1cIixcclxuICAgIFwiKlwiLFxyXG4gICAgXCIvXCIsXHJcbiAgICBcIiZcIixcclxuICAgIFwifFwiLFxyXG4gICAgXCJeXCIsXHJcbiAgICBcIiVcIixcclxuICAgIFwiPDxcIixcclxuICAgIFwiPj5cIixcclxuICAgIFwiPj4+XCIsXHJcbiAgICBcIis9XCIsXHJcbiAgICBcIi09XCIsXHJcbiAgICBcIio9XCIsXHJcbiAgICBcIi89XCIsXHJcbiAgICBcIiY9XCIsXHJcbiAgICBcInw9XCIsXHJcbiAgICBcIl49XCIsXHJcbiAgICBcIiU9XCIsXHJcbiAgICBcIjw8PVwiLFxyXG4gICAgXCI+Pj1cIixcclxuICAgIFwiPj4+PVwiXHJcbiAgXSxcclxuICAvLyB3ZSBpbmNsdWRlIHRoZXNlIGNvbW1vbiByZWd1bGFyIGV4cHJlc3Npb25zXHJcbiAgc3ltYm9sczogL1s9Pjwhfj86JnwrXFwtKlxcL1xcXiVdKy8sXHJcbiAgZXNjYXBlczogL1xcXFwoPzpbYWJmbnJ0dlxcXFxcIiddfHhbMC05QS1GYS1mXXsxLDR9fHVbMC05QS1GYS1mXXs0fXxVWzAtOUEtRmEtZl17OH0pLyxcclxuICBkaWdpdHM6IC9cXGQrKF8rXFxkKykqLyxcclxuICBvY3RhbGRpZ2l0czogL1swLTddKyhfK1swLTddKykqLyxcclxuICBiaW5hcnlkaWdpdHM6IC9bMC0xXSsoXytbMC0xXSspKi8sXHJcbiAgaGV4ZGlnaXRzOiAvW1swLTlhLWZBLUZdKyhfK1swLTlhLWZBLUZdKykqLyxcclxuICAvLyBUaGUgbWFpbiB0b2tlbml6ZXIgZm9yIG91ciBsYW5ndWFnZXNcclxuICB0b2tlbml6ZXI6IHtcclxuICAgIHJvb3Q6IFtcclxuICAgICAgLy8gaWRlbnRpZmllcnMgYW5kIGtleXdvcmRzXHJcbiAgICAgIFtcclxuICAgICAgICAvW2Etel8kXVtcXHckXSovLFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIGNhc2VzOiB7XHJcbiAgICAgICAgICAgIFwiQGtleXdvcmRzXCI6IHsgdG9rZW46IFwia2V5d29yZC4kMFwiIH0sXHJcbiAgICAgICAgICAgIFwiQGRlZmF1bHRcIjogXCJpZGVudGlmaWVyXCJcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIF0sXHJcbiAgICAgIC8vIGFzc3VtZSB0aGF0IGlkZW50aWZpZXJzIHN0YXJ0aW5nIHdpdGggYW4gdXBwZXJjYXNlIGxldHRlciBhcmUgdHlwZXNcclxuICAgICAgW1xyXG4gICAgICAgIC9bQS1aXVtcXHdcXCRdKi8sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgY2FzZXM6IHtcclxuICAgICAgICAgICAgXCJAa2V5d29yZHNcIjogeyB0b2tlbjogXCJrZXl3b3JkLiQwXCIgfSxcclxuICAgICAgICAgICAgXCJAZGVmYXVsdFwiOiBcInR5cGUuaWRlbnRpZmllclwiXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICBdLFxyXG4gICAgICAvLyB3aGl0ZXNwYWNlXHJcbiAgICAgIHsgaW5jbHVkZTogXCJAd2hpdGVzcGFjZVwiIH0sXHJcbiAgICAgIC8vIGRlbGltaXRlcnMgYW5kIG9wZXJhdG9yc1xyXG4gICAgICBbL1t7fSgpXFxbXFxdXS8sIFwiQGJyYWNrZXRzXCJdLFxyXG4gICAgICBbL1s8Pl0oPyFAc3ltYm9scykvLCBcIkBicmFja2V0c1wiXSxcclxuICAgICAgW1xyXG4gICAgICAgIC9Ac3ltYm9scy8sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgY2FzZXM6IHtcclxuICAgICAgICAgICAgXCJAb3BlcmF0b3JzXCI6IFwiZGVsaW1pdGVyXCIsXHJcbiAgICAgICAgICAgIFwiQGRlZmF1bHRcIjogXCJcIlxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgXSxcclxuICAgICAgLy8gQCBhbm5vdGF0aW9ucy5cclxuICAgICAgWy9AXFxzKlthLXpBLVpfXFwkXVtcXHdcXCRdKi8sIFwiYW5ub3RhdGlvblwiXSxcclxuICAgICAgLy8gbnVtYmVyc1xyXG4gICAgICBbLyhAZGlnaXRzKVtlRV0oW1xcLStdPyhAZGlnaXRzKSk/W2ZGZERdPy8sIFwibnVtYmVyLmZsb2F0XCJdLFxyXG4gICAgICBbLyhAZGlnaXRzKVxcLihAZGlnaXRzKShbZUVdW1xcLStdPyhAZGlnaXRzKSk/W2ZGZERdPy8sIFwibnVtYmVyLmZsb2F0XCJdLFxyXG4gICAgICBbLyhAZGlnaXRzKVtmRmREXS8sIFwibnVtYmVyLmZsb2F0XCJdLFxyXG4gICAgICBbLyhAZGlnaXRzKVtsTF0/LywgXCJudW1iZXJcIl0sXHJcbiAgICAgIC8vIGRlbGltaXRlcjogYWZ0ZXIgbnVtYmVyIGJlY2F1c2Ugb2YgLlxcZCBmbG9hdHNcclxuICAgICAgWy9bOywuXS8sIFwiZGVsaW1pdGVyXCJdLFxyXG4gICAgICAvLyBzdHJpbmdzXHJcbiAgICAgIFsvXCIoW15cIlxcXFxdfFxcXFwuKSokLywgXCJzdHJpbmcuaW52YWxpZFwiXSxcclxuICAgICAgLy8gbm9uLXRlbWluYXRlZCBzdHJpbmdcclxuICAgICAgWy8nKFteJ1xcXFxdfFxcXFwuKSokLywgXCJzdHJpbmcuaW52YWxpZFwiXSxcclxuICAgICAgLy8gbm9uLXRlbWluYXRlZCBzdHJpbmdcclxuICAgICAgWy9cIi8sIFwic3RyaW5nXCIsICdAc3RyaW5nLlwiJ10sXHJcbiAgICAgIFsvJy8sIFwic3RyaW5nXCIsIFwiQHN0cmluZy4nXCJdLFxyXG4gICAgICAvLyBjaGFyYWN0ZXJzXHJcbiAgICAgIFsvJ1teXFxcXCddJy8sIFwic3RyaW5nXCJdLFxyXG4gICAgICBbLygnKShAZXNjYXBlcykoJykvLCBbXCJzdHJpbmdcIiwgXCJzdHJpbmcuZXNjYXBlXCIsIFwic3RyaW5nXCJdXSxcclxuICAgICAgWy8nLywgXCJzdHJpbmcuaW52YWxpZFwiXVxyXG4gICAgXSxcclxuICAgIHdoaXRlc3BhY2U6IFtcclxuICAgICAgWy9bIFxcdFxcclxcbl0rLywgXCJcIl0sXHJcbiAgICAgIFsvXFwvXFwqXFwqKD8hXFwvKS8sIFwiY29tbWVudC5kb2NcIiwgXCJAYXBleGRvY1wiXSxcclxuICAgICAgWy9cXC9cXCovLCBcImNvbW1lbnRcIiwgXCJAY29tbWVudFwiXSxcclxuICAgICAgWy9cXC9cXC8uKiQvLCBcImNvbW1lbnRcIl1cclxuICAgIF0sXHJcbiAgICBjb21tZW50OiBbXHJcbiAgICAgIFsvW15cXC8qXSsvLCBcImNvbW1lbnRcIl0sXHJcbiAgICAgIC8vIFsvXFwvXFwqLywgJ2NvbW1lbnQnLCAnQHB1c2gnIF0sICAgIC8vIG5lc3RlZCBjb21tZW50IG5vdCBhbGxvd2VkIDotKFxyXG4gICAgICAvLyBbL1xcL1xcKi8sICAgICdjb21tZW50LmludmFsaWQnIF0sICAgIC8vIHRoaXMgYnJlYWtzIGJsb2NrIGNvbW1lbnRzIGluIHRoZSBzaGFwZSBvZiAvKiAvLyovXHJcbiAgICAgIFsvXFwqXFwvLywgXCJjb21tZW50XCIsIFwiQHBvcFwiXSxcclxuICAgICAgWy9bXFwvKl0vLCBcImNvbW1lbnRcIl1cclxuICAgIF0sXHJcbiAgICAvL0lkZW50aWNhbCBjb3B5IG9mIGNvbW1lbnQgYWJvdmUsIGV4Y2VwdCBmb3IgdGhlIGFkZGl0aW9uIG9mIC5kb2NcclxuICAgIGFwZXhkb2M6IFtcclxuICAgICAgWy9bXlxcLypdKy8sIFwiY29tbWVudC5kb2NcIl0sXHJcbiAgICAgIFsvXFwqXFwvLywgXCJjb21tZW50LmRvY1wiLCBcIkBwb3BcIl0sXHJcbiAgICAgIFsvW1xcLypdLywgXCJjb21tZW50LmRvY1wiXVxyXG4gICAgXSxcclxuICAgIHN0cmluZzogW1xyXG4gICAgICBbL1teXFxcXFwiJ10rLywgXCJzdHJpbmdcIl0sXHJcbiAgICAgIFsvQGVzY2FwZXMvLCBcInN0cmluZy5lc2NhcGVcIl0sXHJcbiAgICAgIFsvXFxcXC4vLCBcInN0cmluZy5lc2NhcGUuaW52YWxpZFwiXSxcclxuICAgICAgW1xyXG4gICAgICAgIC9bXCInXS8sXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgY2FzZXM6IHtcclxuICAgICAgICAgICAgXCIkIz09JFMyXCI6IHsgdG9rZW46IFwic3RyaW5nXCIsIG5leHQ6IFwiQHBvcFwiIH0sXHJcbiAgICAgICAgICAgIFwiQGRlZmF1bHRcIjogXCJzdHJpbmdcIlxyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgXVxyXG4gICAgXVxyXG4gIH1cclxufTtcclxuZXhwb3J0IHtcclxuICBjb25mLFxyXG4gIGxhbmd1YWdlXHJcbn07XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/apex/apex.js\n");

/***/ })

}]);