"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_kotlin_kotlin_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.js":
/*!****************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n\r\n// src/basic-languages/kotlin/kotlin.ts\r\nvar conf = {\r\n  // the default separators except `@$`\r\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n  comments: {\r\n    lineComment: \"//\",\r\n    blockComment: [\"/*\", \"*/\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" },\r\n    { open: \"<\", close: \">\" }\r\n  ],\r\n  folding: {\r\n    markers: {\r\n      start: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?region\\\\b)|(?:<editor-fold\\\\b))\"),\r\n      end: new RegExp(\"^\\\\s*//\\\\s*(?:(?:#?endregion\\\\b)|(?:</editor-fold>))\")\r\n    }\r\n  }\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \".kt\",\r\n  keywords: [\r\n    \"as\",\r\n    \"as?\",\r\n    \"break\",\r\n    \"class\",\r\n    \"continue\",\r\n    \"do\",\r\n    \"else\",\r\n    \"false\",\r\n    \"for\",\r\n    \"fun\",\r\n    \"if\",\r\n    \"in\",\r\n    \"!in\",\r\n    \"interface\",\r\n    \"is\",\r\n    \"!is\",\r\n    \"null\",\r\n    \"object\",\r\n    \"package\",\r\n    \"return\",\r\n    \"super\",\r\n    \"this\",\r\n    \"throw\",\r\n    \"true\",\r\n    \"try\",\r\n    \"typealias\",\r\n    \"val\",\r\n    \"var\",\r\n    \"when\",\r\n    \"while\",\r\n    \"by\",\r\n    \"catch\",\r\n    \"constructor\",\r\n    \"delegate\",\r\n    \"dynamic\",\r\n    \"field\",\r\n    \"file\",\r\n    \"finally\",\r\n    \"get\",\r\n    \"import\",\r\n    \"init\",\r\n    \"param\",\r\n    \"property\",\r\n    \"receiver\",\r\n    \"set\",\r\n    \"setparam\",\r\n    \"where\",\r\n    \"actual\",\r\n    \"abstract\",\r\n    \"annotation\",\r\n    \"companion\",\r\n    \"const\",\r\n    \"crossinline\",\r\n    \"data\",\r\n    \"enum\",\r\n    \"expect\",\r\n    \"external\",\r\n    \"final\",\r\n    \"infix\",\r\n    \"inline\",\r\n    \"inner\",\r\n    \"internal\",\r\n    \"lateinit\",\r\n    \"noinline\",\r\n    \"open\",\r\n    \"operator\",\r\n    \"out\",\r\n    \"override\",\r\n    \"private\",\r\n    \"protected\",\r\n    \"public\",\r\n    \"reified\",\r\n    \"sealed\",\r\n    \"suspend\",\r\n    \"tailrec\",\r\n    \"vararg\",\r\n    \"field\",\r\n    \"it\"\r\n  ],\r\n  operators: [\r\n    \"+\",\r\n    \"-\",\r\n    \"*\",\r\n    \"/\",\r\n    \"%\",\r\n    \"=\",\r\n    \"+=\",\r\n    \"-=\",\r\n    \"*=\",\r\n    \"/=\",\r\n    \"%=\",\r\n    \"++\",\r\n    \"--\",\r\n    \"&&\",\r\n    \"||\",\r\n    \"!\",\r\n    \"==\",\r\n    \"!=\",\r\n    \"===\",\r\n    \"!==\",\r\n    \">\",\r\n    \"<\",\r\n    \"<=\",\r\n    \">=\",\r\n    \"[\",\r\n    \"]\",\r\n    \"!!\",\r\n    \"?.\",\r\n    \"?:\",\r\n    \"::\",\r\n    \"..\",\r\n    \":\",\r\n    \"?\",\r\n    \"->\",\r\n    \"@\",\r\n    \";\",\r\n    \"$\",\r\n    \"_\"\r\n  ],\r\n  // we include these common regular expressions\r\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n  digits: /\\d+(_+\\d+)*/,\r\n  octaldigits: /[0-7]+(_+[0-7]+)*/,\r\n  binarydigits: /[0-1]+(_+[0-1]+)*/,\r\n  hexdigits: /[[0-9a-fA-F]+(_+[0-9a-fA-F]+)*/,\r\n  // The main tokenizer for our languages\r\n  tokenizer: {\r\n    root: [\r\n      // class name highlighting\r\n      [/[A-Z][\\w\\$]*/, \"type.identifier\"],\r\n      // identifiers and keywords\r\n      [\r\n        /[a-zA-Z_$][\\w$]*/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": { token: \"keyword.$0\" },\r\n            \"@default\": \"identifier\"\r\n          }\r\n        }\r\n      ],\r\n      // whitespace\r\n      { include: \"@whitespace\" },\r\n      // delimiters and operators\r\n      [/[{}()\\[\\]]/, \"@brackets\"],\r\n      [/[<>](?!@symbols)/, \"@brackets\"],\r\n      [\r\n        /@symbols/,\r\n        {\r\n          cases: {\r\n            \"@operators\": \"delimiter\",\r\n            \"@default\": \"\"\r\n          }\r\n        }\r\n      ],\r\n      // @ annotations.\r\n      [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, \"annotation\"],\r\n      // numbers\r\n      [/(@digits)[eE]([\\-+]?(@digits))?[fFdD]?/, \"number.float\"],\r\n      [/(@digits)\\.(@digits)([eE][\\-+]?(@digits))?[fFdD]?/, \"number.float\"],\r\n      [/0[xX](@hexdigits)[Ll]?/, \"number.hex\"],\r\n      [/0(@octaldigits)[Ll]?/, \"number.octal\"],\r\n      [/0[bB](@binarydigits)[Ll]?/, \"number.binary\"],\r\n      [/(@digits)[fFdD]/, \"number.float\"],\r\n      [/(@digits)[lL]?/, \"number\"],\r\n      // delimiter: after number because of .\\d floats\r\n      [/[;,.]/, \"delimiter\"],\r\n      // strings\r\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      // non-teminated string\r\n      [/\"\"\"/, \"string\", \"@multistring\"],\r\n      [/\"/, \"string\", \"@string\"],\r\n      // characters\r\n      [/'[^\\\\']'/, \"string\"],\r\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\r\n      [/'/, \"string.invalid\"]\r\n    ],\r\n    whitespace: [\r\n      [/[ \\t\\r\\n]+/, \"\"],\r\n      [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@javadoc\"],\r\n      [/\\/\\*/, \"comment\", \"@comment\"],\r\n      [/\\/\\/.*$/, \"comment\"]\r\n    ],\r\n    comment: [\r\n      [/[^\\/*]+/, \"comment\"],\r\n      [/\\/\\*/, \"comment\", \"@comment\"],\r\n      [/\\*\\//, \"comment\", \"@pop\"],\r\n      [/[\\/*]/, \"comment\"]\r\n    ],\r\n    //Identical copy of comment above, except for the addition of .doc\r\n    javadoc: [\r\n      [/[^\\/*]+/, \"comment.doc\"],\r\n      [/\\/\\*/, \"comment.doc\", \"@push\"],\r\n      [/\\/\\*/, \"comment.doc.invalid\"],\r\n      [/\\*\\//, \"comment.doc\", \"@pop\"],\r\n      [/[\\/*]/, \"comment.doc\"]\r\n    ],\r\n    string: [\r\n      [/[^\\\\\"]+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [/\"/, \"string\", \"@pop\"]\r\n    ],\r\n    multistring: [\r\n      [/[^\\\\\"]+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [/\"\"\"/, \"string\", \"@pop\"],\r\n      [/./, \"string\"]\r\n    ]\r\n  }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/kotlin/kotlin.js\n");

/***/ })

}]);