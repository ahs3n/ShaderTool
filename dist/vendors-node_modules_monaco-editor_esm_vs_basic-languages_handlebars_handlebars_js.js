"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_monaco-editor_esm_vs_basic-languages_handlebars_handlebars_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.js":
/*!************************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../editor/editor.api.js */ \"./node_modules/monaco-editor/esm/vs/editor/editor.api.js\");\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\r\n\r\n// src/fillers/monaco-editor-core.ts\r\nvar monaco_editor_core_exports = {};\r\n__reExport(monaco_editor_core_exports, _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__);\r\n\r\n\r\n// src/basic-languages/handlebars/handlebars.ts\r\nvar EMPTY_ELEMENTS = [\r\n  \"area\",\r\n  \"base\",\r\n  \"br\",\r\n  \"col\",\r\n  \"embed\",\r\n  \"hr\",\r\n  \"img\",\r\n  \"input\",\r\n  \"keygen\",\r\n  \"link\",\r\n  \"menuitem\",\r\n  \"meta\",\r\n  \"param\",\r\n  \"source\",\r\n  \"track\",\r\n  \"wbr\"\r\n];\r\nvar conf = {\r\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\r\n  comments: {\r\n    blockComment: [\"{{!--\", \"--}}\"]\r\n  },\r\n  brackets: [\r\n    [\"<!--\", \"-->\"],\r\n    [\"<\", \">\"],\r\n    [\"{{\", \"}}\"],\r\n    [\"{\", \"}\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"<\", close: \">\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  onEnterRules: [\r\n    {\r\n      beforeText: new RegExp(\r\n        `<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`,\r\n        \"i\"\r\n      ),\r\n      afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\r\n      action: {\r\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\r\n      }\r\n    },\r\n    {\r\n      beforeText: new RegExp(\r\n        `<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`,\r\n        \"i\"\r\n      ),\r\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\r\n    }\r\n  ]\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \"\",\r\n  // ignoreCase: true,\r\n  // The main tokenizer for our languages\r\n  tokenizer: {\r\n    root: [\r\n      [/\\{\\{!--/, \"comment.block.start.handlebars\", \"@commentBlock\"],\r\n      [/\\{\\{!/, \"comment.start.handlebars\", \"@comment\"],\r\n      [/\\{\\{/, { token: \"@rematch\", switchTo: \"@handlebarsInSimpleState.root\" }],\r\n      [/<!DOCTYPE/, \"metatag.html\", \"@doctype\"],\r\n      [/<!--/, \"comment.html\", \"@commentHtml\"],\r\n      [/(<)(\\w+)(\\/>)/, [\"delimiter.html\", \"tag.html\", \"delimiter.html\"]],\r\n      [/(<)(script)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@script\" }]],\r\n      [/(<)(style)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@style\" }]],\r\n      [/(<)([:\\w]+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\r\n      [/(<\\/)(\\w+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\r\n      [/</, \"delimiter.html\"],\r\n      [/\\{/, \"delimiter.html\"],\r\n      [/[^<{]+/]\r\n      // text\r\n    ],\r\n    doctype: [\r\n      [\r\n        /\\{\\{/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@handlebarsInSimpleState.comment\"\r\n        }\r\n      ],\r\n      [/[^>]+/, \"metatag.content.html\"],\r\n      [/>/, \"metatag.html\", \"@pop\"]\r\n    ],\r\n    comment: [\r\n      [/\\}\\}/, \"comment.end.handlebars\", \"@pop\"],\r\n      [/./, \"comment.content.handlebars\"]\r\n    ],\r\n    commentBlock: [\r\n      [/--\\}\\}/, \"comment.block.end.handlebars\", \"@pop\"],\r\n      [/./, \"comment.content.handlebars\"]\r\n    ],\r\n    commentHtml: [\r\n      [\r\n        /\\{\\{/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@handlebarsInSimpleState.comment\"\r\n        }\r\n      ],\r\n      [/-->/, \"comment.html\", \"@pop\"],\r\n      [/[^-]+/, \"comment.content.html\"],\r\n      [/./, \"comment.content.html\"]\r\n    ],\r\n    otherTag: [\r\n      [\r\n        /\\{\\{/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@handlebarsInSimpleState.otherTag\"\r\n        }\r\n      ],\r\n      [/\\/?>/, \"delimiter.html\", \"@pop\"],\r\n      [/\"([^\"]*)\"/, \"attribute.value\"],\r\n      [/'([^']*)'/, \"attribute.value\"],\r\n      [/[\\w\\-]+/, \"attribute.name\"],\r\n      [/=/, \"delimiter\"],\r\n      [/[ \\t\\r\\n]+/]\r\n      // whitespace\r\n    ],\r\n    // -- BEGIN <script> tags handling\r\n    // After <script\r\n    script: [\r\n      [\r\n        /\\{\\{/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@handlebarsInSimpleState.script\"\r\n        }\r\n      ],\r\n      [/type/, \"attribute.name\", \"@scriptAfterType\"],\r\n      [/\"([^\"]*)\"/, \"attribute.value\"],\r\n      [/'([^']*)'/, \"attribute.value\"],\r\n      [/[\\w\\-]+/, \"attribute.name\"],\r\n      [/=/, \"delimiter\"],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@scriptEmbedded.text/javascript\",\r\n          nextEmbedded: \"text/javascript\"\r\n        }\r\n      ],\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [\r\n        /(<\\/)(script\\s*)(>)/,\r\n        [\"delimiter.html\", \"tag.html\", { token: \"delimiter.html\", next: \"@pop\" }]\r\n      ]\r\n    ],\r\n    // After <script ... type\r\n    scriptAfterType: [\r\n      [\r\n        /\\{\\{/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@handlebarsInSimpleState.scriptAfterType\"\r\n        }\r\n      ],\r\n      [/=/, \"delimiter\", \"@scriptAfterTypeEquals\"],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@scriptEmbedded.text/javascript\",\r\n          nextEmbedded: \"text/javascript\"\r\n        }\r\n      ],\r\n      // cover invalid e.g. <script type>\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\r\n    ],\r\n    // After <script ... type =\r\n    scriptAfterTypeEquals: [\r\n      [\r\n        /\\{\\{/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@handlebarsInSimpleState.scriptAfterTypeEquals\"\r\n        }\r\n      ],\r\n      [\r\n        /\"([^\"]*)\"/,\r\n        {\r\n          token: \"attribute.value\",\r\n          switchTo: \"@scriptWithCustomType.$1\"\r\n        }\r\n      ],\r\n      [\r\n        /'([^']*)'/,\r\n        {\r\n          token: \"attribute.value\",\r\n          switchTo: \"@scriptWithCustomType.$1\"\r\n        }\r\n      ],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@scriptEmbedded.text/javascript\",\r\n          nextEmbedded: \"text/javascript\"\r\n        }\r\n      ],\r\n      // cover invalid e.g. <script type=>\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\r\n    ],\r\n    // After <script ... type = $S2\r\n    scriptWithCustomType: [\r\n      [\r\n        /\\{\\{/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@handlebarsInSimpleState.scriptWithCustomType.$S2\"\r\n        }\r\n      ],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@scriptEmbedded.$S2\",\r\n          nextEmbedded: \"$S2\"\r\n        }\r\n      ],\r\n      [/\"([^\"]*)\"/, \"attribute.value\"],\r\n      [/'([^']*)'/, \"attribute.value\"],\r\n      [/[\\w\\-]+/, \"attribute.name\"],\r\n      [/=/, \"delimiter\"],\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\r\n    ],\r\n    scriptEmbedded: [\r\n      [\r\n        /\\{\\{/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@handlebarsInEmbeddedState.scriptEmbedded.$S2\",\r\n          nextEmbedded: \"@pop\"\r\n        }\r\n      ],\r\n      [/<\\/script/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }]\r\n    ],\r\n    // -- END <script> tags handling\r\n    // -- BEGIN <style> tags handling\r\n    // After <style\r\n    style: [\r\n      [\r\n        /\\{\\{/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@handlebarsInSimpleState.style\"\r\n        }\r\n      ],\r\n      [/type/, \"attribute.name\", \"@styleAfterType\"],\r\n      [/\"([^\"]*)\"/, \"attribute.value\"],\r\n      [/'([^']*)'/, \"attribute.value\"],\r\n      [/[\\w\\-]+/, \"attribute.name\"],\r\n      [/=/, \"delimiter\"],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@styleEmbedded.text/css\",\r\n          nextEmbedded: \"text/css\"\r\n        }\r\n      ],\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [\r\n        /(<\\/)(style\\s*)(>)/,\r\n        [\"delimiter.html\", \"tag.html\", { token: \"delimiter.html\", next: \"@pop\" }]\r\n      ]\r\n    ],\r\n    // After <style ... type\r\n    styleAfterType: [\r\n      [\r\n        /\\{\\{/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@handlebarsInSimpleState.styleAfterType\"\r\n        }\r\n      ],\r\n      [/=/, \"delimiter\", \"@styleAfterTypeEquals\"],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@styleEmbedded.text/css\",\r\n          nextEmbedded: \"text/css\"\r\n        }\r\n      ],\r\n      // cover invalid e.g. <style type>\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\r\n    ],\r\n    // After <style ... type =\r\n    styleAfterTypeEquals: [\r\n      [\r\n        /\\{\\{/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@handlebarsInSimpleState.styleAfterTypeEquals\"\r\n        }\r\n      ],\r\n      [\r\n        /\"([^\"]*)\"/,\r\n        {\r\n          token: \"attribute.value\",\r\n          switchTo: \"@styleWithCustomType.$1\"\r\n        }\r\n      ],\r\n      [\r\n        /'([^']*)'/,\r\n        {\r\n          token: \"attribute.value\",\r\n          switchTo: \"@styleWithCustomType.$1\"\r\n        }\r\n      ],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@styleEmbedded.text/css\",\r\n          nextEmbedded: \"text/css\"\r\n        }\r\n      ],\r\n      // cover invalid e.g. <style type=>\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\r\n    ],\r\n    // After <style ... type = $S2\r\n    styleWithCustomType: [\r\n      [\r\n        /\\{\\{/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@handlebarsInSimpleState.styleWithCustomType.$S2\"\r\n        }\r\n      ],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@styleEmbedded.$S2\",\r\n          nextEmbedded: \"$S2\"\r\n        }\r\n      ],\r\n      [/\"([^\"]*)\"/, \"attribute.value\"],\r\n      [/'([^']*)'/, \"attribute.value\"],\r\n      [/[\\w\\-]+/, \"attribute.name\"],\r\n      [/=/, \"delimiter\"],\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\r\n    ],\r\n    styleEmbedded: [\r\n      [\r\n        /\\{\\{/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@handlebarsInEmbeddedState.styleEmbedded.$S2\",\r\n          nextEmbedded: \"@pop\"\r\n        }\r\n      ],\r\n      [/<\\/style/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }]\r\n    ],\r\n    // -- END <style> tags handling\r\n    handlebarsInSimpleState: [\r\n      [/\\{\\{\\{?/, \"delimiter.handlebars\"],\r\n      [/\\}\\}\\}?/, { token: \"delimiter.handlebars\", switchTo: \"@$S2.$S3\" }],\r\n      { include: \"handlebarsRoot\" }\r\n    ],\r\n    handlebarsInEmbeddedState: [\r\n      [/\\{\\{\\{?/, \"delimiter.handlebars\"],\r\n      [\r\n        /\\}\\}\\}?/,\r\n        {\r\n          token: \"delimiter.handlebars\",\r\n          switchTo: \"@$S2.$S3\",\r\n          nextEmbedded: \"$S3\"\r\n        }\r\n      ],\r\n      { include: \"handlebarsRoot\" }\r\n    ],\r\n    handlebarsRoot: [\r\n      [/\"[^\"]*\"/, \"string.handlebars\"],\r\n      [/[#/][^\\s}]+/, \"keyword.helper.handlebars\"],\r\n      [/else\\b/, \"keyword.helper.handlebars\"],\r\n      [/[\\s]+/],\r\n      [/[^}]/, \"variable.parameter.handlebars\"]\r\n    ]\r\n  }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/handlebars/handlebars.js\n");

/***/ })

}]);