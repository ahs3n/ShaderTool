"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_css_css_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/css/css.js":
/*!**********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/css/css.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n\r\n// src/basic-languages/css/css.ts\r\nvar conf = {\r\n  wordPattern: /(#?-?\\d*\\.\\d\\w*%?)|((::|[@#.!:])?[\\w-?]+%?)|::|[@#.!:]/g,\r\n  comments: {\r\n    blockComment: [\"/*\", \"*/\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] },\r\n    { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] },\r\n    { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] },\r\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] },\r\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  folding: {\r\n    markers: {\r\n      start: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#region\\\\b\\\\s*(.*?)\\\\s*\\\\*\\\\/\"),\r\n      end: new RegExp(\"^\\\\s*\\\\/\\\\*\\\\s*#endregion\\\\b.*\\\\*\\\\/\")\r\n    }\r\n  }\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \".css\",\r\n  ws: \"[ \t\\n\\r\\f]*\",\r\n  // whitespaces (referenced in several rules)\r\n  identifier: \"-?-?([a-zA-Z]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))([\\\\w\\\\-]|(\\\\\\\\(([0-9a-fA-F]{1,6}\\\\s?)|[^[0-9a-fA-F])))*\",\r\n  brackets: [\r\n    { open: \"{\", close: \"}\", token: \"delimiter.bracket\" },\r\n    { open: \"[\", close: \"]\", token: \"delimiter.bracket\" },\r\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\r\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\r\n  ],\r\n  tokenizer: {\r\n    root: [{ include: \"@selector\" }],\r\n    selector: [\r\n      { include: \"@comments\" },\r\n      { include: \"@import\" },\r\n      { include: \"@strings\" },\r\n      [\r\n        \"[@](keyframes|-webkit-keyframes|-moz-keyframes|-o-keyframes)\",\r\n        { token: \"keyword\", next: \"@keyframedeclaration\" }\r\n      ],\r\n      [\"[@](page|content|font-face|-moz-document)\", { token: \"keyword\" }],\r\n      [\"[@](charset|namespace)\", { token: \"keyword\", next: \"@declarationbody\" }],\r\n      [\r\n        \"(url-prefix)(\\\\()\",\r\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\r\n      ],\r\n      [\r\n        \"(url)(\\\\()\",\r\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\r\n      ],\r\n      { include: \"@selectorname\" },\r\n      [\"[\\\\*]\", \"tag\"],\r\n      // selector symbols\r\n      [\"[>\\\\+,]\", \"delimiter\"],\r\n      // selector operators\r\n      [\"\\\\[\", { token: \"delimiter.bracket\", next: \"@selectorattribute\" }],\r\n      [\"{\", { token: \"delimiter.bracket\", next: \"@selectorbody\" }]\r\n    ],\r\n    selectorbody: [\r\n      { include: \"@comments\" },\r\n      [\"[*_]?@identifier@ws:(?=(\\\\s|\\\\d|[^{;}]*[;}]))\", \"attribute.name\", \"@rulevalue\"],\r\n      // rule definition: to distinguish from a nested selector check for whitespace, number or a semicolon\r\n      [\"}\", { token: \"delimiter.bracket\", next: \"@pop\" }]\r\n    ],\r\n    selectorname: [\r\n      [\"(\\\\.|#(?=[^{])|%|(@identifier)|:)+\", \"tag\"]\r\n      // selector (.foo, div, ...)\r\n    ],\r\n    selectorattribute: [{ include: \"@term\" }, [\"]\", { token: \"delimiter.bracket\", next: \"@pop\" }]],\r\n    term: [\r\n      { include: \"@comments\" },\r\n      [\r\n        \"(url-prefix)(\\\\()\",\r\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\r\n      ],\r\n      [\r\n        \"(url)(\\\\()\",\r\n        [\"attribute.value\", { token: \"delimiter.parenthesis\", next: \"@urldeclaration\" }]\r\n      ],\r\n      { include: \"@functioninvocation\" },\r\n      { include: \"@numbers\" },\r\n      { include: \"@name\" },\r\n      { include: \"@strings\" },\r\n      [\"([<>=\\\\+\\\\-\\\\*\\\\/\\\\^\\\\|\\\\~,])\", \"delimiter\"],\r\n      [\",\", \"delimiter\"]\r\n    ],\r\n    rulevalue: [\r\n      { include: \"@comments\" },\r\n      { include: \"@strings\" },\r\n      { include: \"@term\" },\r\n      [\"!important\", \"keyword\"],\r\n      [\";\", \"delimiter\", \"@pop\"],\r\n      [\"(?=})\", { token: \"\", next: \"@pop\" }]\r\n      // missing semicolon\r\n    ],\r\n    warndebug: [[\"[@](warn|debug)\", { token: \"keyword\", next: \"@declarationbody\" }]],\r\n    import: [[\"[@](import)\", { token: \"keyword\", next: \"@declarationbody\" }]],\r\n    urldeclaration: [\r\n      { include: \"@strings\" },\r\n      [\"[^)\\r\\n]+\", \"string\"],\r\n      [\"\\\\)\", { token: \"delimiter.parenthesis\", next: \"@pop\" }]\r\n    ],\r\n    parenthizedterm: [\r\n      { include: \"@term\" },\r\n      [\"\\\\)\", { token: \"delimiter.parenthesis\", next: \"@pop\" }]\r\n    ],\r\n    declarationbody: [\r\n      { include: \"@term\" },\r\n      [\";\", \"delimiter\", \"@pop\"],\r\n      [\"(?=})\", { token: \"\", next: \"@pop\" }]\r\n      // missing semicolon\r\n    ],\r\n    comments: [\r\n      [\"\\\\/\\\\*\", \"comment\", \"@comment\"],\r\n      [\"\\\\/\\\\/+.*\", \"comment\"]\r\n    ],\r\n    comment: [\r\n      [\"\\\\*\\\\/\", \"comment\", \"@pop\"],\r\n      [/[^*/]+/, \"comment\"],\r\n      [/./, \"comment\"]\r\n    ],\r\n    name: [[\"@identifier\", \"attribute.value\"]],\r\n    numbers: [\r\n      [\"-?(\\\\d*\\\\.)?\\\\d+([eE][\\\\-+]?\\\\d+)?\", { token: \"attribute.value.number\", next: \"@units\" }],\r\n      [\"#[0-9a-fA-F_]+(?!\\\\w)\", \"attribute.value.hex\"]\r\n    ],\r\n    units: [\r\n      [\r\n        \"(em|ex|ch|rem|fr|vmin|vmax|vw|vh|vm|cm|mm|in|px|pt|pc|deg|grad|rad|turn|s|ms|Hz|kHz|%)?\",\r\n        \"attribute.value.unit\",\r\n        \"@pop\"\r\n      ]\r\n    ],\r\n    keyframedeclaration: [\r\n      [\"@identifier\", \"attribute.value\"],\r\n      [\"{\", { token: \"delimiter.bracket\", switchTo: \"@keyframebody\" }]\r\n    ],\r\n    keyframebody: [\r\n      { include: \"@term\" },\r\n      [\"{\", { token: \"delimiter.bracket\", next: \"@selectorbody\" }],\r\n      [\"}\", { token: \"delimiter.bracket\", next: \"@pop\" }]\r\n    ],\r\n    functioninvocation: [\r\n      [\"@identifier\\\\(\", { token: \"attribute.value\", next: \"@functionarguments\" }]\r\n    ],\r\n    functionarguments: [\r\n      [\"\\\\$@identifier@ws:\", \"attribute.name\"],\r\n      [\"[,]\", \"delimiter\"],\r\n      { include: \"@term\" },\r\n      [\"\\\\)\", { token: \"attribute.value\", next: \"@pop\" }]\r\n    ],\r\n    strings: [\r\n      ['~?\"', { token: \"string\", next: \"@stringenddoublequote\" }],\r\n      [\"~?'\", { token: \"string\", next: \"@stringendquote\" }]\r\n    ],\r\n    stringenddoublequote: [\r\n      [\"\\\\\\\\.\", \"string\"],\r\n      ['\"', { token: \"string\", next: \"@pop\" }],\r\n      [/[^\\\\\"]+/, \"string\"],\r\n      [\".\", \"string\"]\r\n    ],\r\n    stringendquote: [\r\n      [\"\\\\\\\\.\", \"string\"],\r\n      [\"'\", { token: \"string\", next: \"@pop\" }],\r\n      [/[^\\\\']+/, \"string\"],\r\n      [\".\", \"string\"]\r\n    ]\r\n  }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/css/css.js\n");

/***/ })

}]);