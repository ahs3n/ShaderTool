"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_liquid_liquid_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/liquid/liquid.js":
/*!****************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/liquid/liquid.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../editor/editor.api.js */ \"./node_modules/monaco-editor/esm/vs/editor/editor.api.js\");\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\r\n\r\n// src/fillers/monaco-editor-core.ts\r\nvar monaco_editor_core_exports = {};\r\n__reExport(monaco_editor_core_exports, _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__);\r\n\r\n\r\n// src/basic-languages/liquid/liquid.ts\r\nvar EMPTY_ELEMENTS = [\r\n  \"area\",\r\n  \"base\",\r\n  \"br\",\r\n  \"col\",\r\n  \"embed\",\r\n  \"hr\",\r\n  \"img\",\r\n  \"input\",\r\n  \"keygen\",\r\n  \"link\",\r\n  \"menuitem\",\r\n  \"meta\",\r\n  \"param\",\r\n  \"source\",\r\n  \"track\",\r\n  \"wbr\"\r\n];\r\nvar conf = {\r\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\$\\^\\&\\*\\(\\)\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\s]+)/g,\r\n  brackets: [\r\n    [\"<!--\", \"-->\"],\r\n    [\"<\", \">\"],\r\n    [\"{{\", \"}}\"],\r\n    [\"{%\", \"%}\"],\r\n    [\"{\", \"}\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"%\", close: \"%\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"<\", close: \">\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  onEnterRules: [\r\n    {\r\n      beforeText: new RegExp(\r\n        `<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`,\r\n        \"i\"\r\n      ),\r\n      afterText: /^<\\/(\\w[\\w\\d]*)\\s*>$/i,\r\n      action: {\r\n        indentAction: monaco_editor_core_exports.languages.IndentAction.IndentOutdent\r\n      }\r\n    },\r\n    {\r\n      beforeText: new RegExp(\r\n        `<(?!(?:${EMPTY_ELEMENTS.join(\"|\")}))(\\\\w[\\\\w\\\\d]*)([^/>]*(?!/)>)[^<]*$`,\r\n        \"i\"\r\n      ),\r\n      action: { indentAction: monaco_editor_core_exports.languages.IndentAction.Indent }\r\n    }\r\n  ]\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \"\",\r\n  builtinTags: [\r\n    \"if\",\r\n    \"else\",\r\n    \"elseif\",\r\n    \"endif\",\r\n    \"render\",\r\n    \"assign\",\r\n    \"capture\",\r\n    \"endcapture\",\r\n    \"case\",\r\n    \"endcase\",\r\n    \"comment\",\r\n    \"endcomment\",\r\n    \"cycle\",\r\n    \"decrement\",\r\n    \"for\",\r\n    \"endfor\",\r\n    \"include\",\r\n    \"increment\",\r\n    \"layout\",\r\n    \"raw\",\r\n    \"endraw\",\r\n    \"render\",\r\n    \"tablerow\",\r\n    \"endtablerow\",\r\n    \"unless\",\r\n    \"endunless\"\r\n  ],\r\n  builtinFilters: [\r\n    \"abs\",\r\n    \"append\",\r\n    \"at_least\",\r\n    \"at_most\",\r\n    \"capitalize\",\r\n    \"ceil\",\r\n    \"compact\",\r\n    \"date\",\r\n    \"default\",\r\n    \"divided_by\",\r\n    \"downcase\",\r\n    \"escape\",\r\n    \"escape_once\",\r\n    \"first\",\r\n    \"floor\",\r\n    \"join\",\r\n    \"json\",\r\n    \"last\",\r\n    \"lstrip\",\r\n    \"map\",\r\n    \"minus\",\r\n    \"modulo\",\r\n    \"newline_to_br\",\r\n    \"plus\",\r\n    \"prepend\",\r\n    \"remove\",\r\n    \"remove_first\",\r\n    \"replace\",\r\n    \"replace_first\",\r\n    \"reverse\",\r\n    \"round\",\r\n    \"rstrip\",\r\n    \"size\",\r\n    \"slice\",\r\n    \"sort\",\r\n    \"sort_natural\",\r\n    \"split\",\r\n    \"strip\",\r\n    \"strip_html\",\r\n    \"strip_newlines\",\r\n    \"times\",\r\n    \"truncate\",\r\n    \"truncatewords\",\r\n    \"uniq\",\r\n    \"upcase\",\r\n    \"url_decode\",\r\n    \"url_encode\",\r\n    \"where\"\r\n  ],\r\n  constants: [\"true\", \"false\"],\r\n  operators: [\"==\", \"!=\", \">\", \"<\", \">=\", \"<=\"],\r\n  symbol: /[=><!]+/,\r\n  identifier: /[a-zA-Z_][\\w]*/,\r\n  tokenizer: {\r\n    root: [\r\n      [/\\{\\%\\s*comment\\s*\\%\\}/, \"comment.start.liquid\", \"@comment\"],\r\n      [/\\{\\{/, { token: \"@rematch\", switchTo: \"@liquidState.root\" }],\r\n      [/\\{\\%/, { token: \"@rematch\", switchTo: \"@liquidState.root\" }],\r\n      [/(<)([\\w\\-]+)(\\/>)/, [\"delimiter.html\", \"tag.html\", \"delimiter.html\"]],\r\n      [/(<)([:\\w]+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\r\n      [/(<\\/)([\\w\\-]+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\r\n      [/</, \"delimiter.html\"],\r\n      [/\\{/, \"delimiter.html\"],\r\n      [/[^<{]+/]\r\n      // text\r\n    ],\r\n    comment: [\r\n      [/\\{\\%\\s*endcomment\\s*\\%\\}/, \"comment.end.liquid\", \"@pop\"],\r\n      [/./, \"comment.content.liquid\"]\r\n    ],\r\n    otherTag: [\r\n      [\r\n        /\\{\\{/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@liquidState.otherTag\"\r\n        }\r\n      ],\r\n      [\r\n        /\\{\\%/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@liquidState.otherTag\"\r\n        }\r\n      ],\r\n      [/\\/?>/, \"delimiter.html\", \"@pop\"],\r\n      [/\"([^\"]*)\"/, \"attribute.value\"],\r\n      [/'([^']*)'/, \"attribute.value\"],\r\n      [/[\\w\\-]+/, \"attribute.name\"],\r\n      [/=/, \"delimiter\"],\r\n      [/[ \\t\\r\\n]+/]\r\n      // whitespace\r\n    ],\r\n    liquidState: [\r\n      [/\\{\\{/, \"delimiter.output.liquid\"],\r\n      [/\\}\\}/, { token: \"delimiter.output.liquid\", switchTo: \"@$S2.$S3\" }],\r\n      [/\\{\\%/, \"delimiter.tag.liquid\"],\r\n      [/raw\\s*\\%\\}/, \"delimiter.tag.liquid\", \"@liquidRaw\"],\r\n      [/\\%\\}/, { token: \"delimiter.tag.liquid\", switchTo: \"@$S2.$S3\" }],\r\n      { include: \"liquidRoot\" }\r\n    ],\r\n    liquidRaw: [\r\n      [/^(?!\\{\\%\\s*endraw\\s*\\%\\}).+/],\r\n      [/\\{\\%/, \"delimiter.tag.liquid\"],\r\n      [/@identifier/],\r\n      [/\\%\\}/, { token: \"delimiter.tag.liquid\", next: \"@root\" }]\r\n    ],\r\n    liquidRoot: [\r\n      [/\\d+(\\.\\d+)?/, \"number.liquid\"],\r\n      [/\"[^\"]*\"/, \"string.liquid\"],\r\n      [/'[^']*'/, \"string.liquid\"],\r\n      [/\\s+/],\r\n      [\r\n        /@symbol/,\r\n        {\r\n          cases: {\r\n            \"@operators\": \"operator.liquid\",\r\n            \"@default\": \"\"\r\n          }\r\n        }\r\n      ],\r\n      [/\\./],\r\n      [\r\n        /@identifier/,\r\n        {\r\n          cases: {\r\n            \"@constants\": \"keyword.liquid\",\r\n            \"@builtinFilters\": \"predefined.liquid\",\r\n            \"@builtinTags\": \"predefined.liquid\",\r\n            \"@default\": \"variable.liquid\"\r\n          }\r\n        }\r\n      ],\r\n      [/[^}|%]/, \"variable.liquid\"]\r\n    ]\r\n  }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/liquid/liquid.js\n");

/***/ })

}]);