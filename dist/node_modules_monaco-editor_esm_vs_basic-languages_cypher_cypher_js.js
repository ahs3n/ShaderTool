"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_cypher_cypher_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/cypher/cypher.js":
/*!****************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/cypher/cypher.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n\r\n// src/basic-languages/cypher/cypher.ts\r\nvar conf = {\r\n  comments: {\r\n    lineComment: \"//\",\r\n    blockComment: [\"/*\", \"*/\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" },\r\n    { open: \"`\", close: \"`\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" },\r\n    { open: \"`\", close: \"`\" }\r\n  ]\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: `.cypher`,\r\n  ignoreCase: true,\r\n  brackets: [\r\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\r\n    { open: \"[\", close: \"]\", token: \"delimiter.bracket\" },\r\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\r\n  ],\r\n  keywords: [\r\n    \"ALL\",\r\n    \"AND\",\r\n    \"AS\",\r\n    \"ASC\",\r\n    \"ASCENDING\",\r\n    \"BY\",\r\n    \"CALL\",\r\n    \"CASE\",\r\n    \"CONTAINS\",\r\n    \"CREATE\",\r\n    \"DELETE\",\r\n    \"DESC\",\r\n    \"DESCENDING\",\r\n    \"DETACH\",\r\n    \"DISTINCT\",\r\n    \"ELSE\",\r\n    \"END\",\r\n    \"ENDS\",\r\n    \"EXISTS\",\r\n    \"IN\",\r\n    \"IS\",\r\n    \"LIMIT\",\r\n    \"MANDATORY\",\r\n    \"MATCH\",\r\n    \"MERGE\",\r\n    \"NOT\",\r\n    \"ON\",\r\n    \"ON\",\r\n    \"OPTIONAL\",\r\n    \"OR\",\r\n    \"ORDER\",\r\n    \"REMOVE\",\r\n    \"RETURN\",\r\n    \"SET\",\r\n    \"SKIP\",\r\n    \"STARTS\",\r\n    \"THEN\",\r\n    \"UNION\",\r\n    \"UNWIND\",\r\n    \"WHEN\",\r\n    \"WHERE\",\r\n    \"WITH\",\r\n    \"XOR\",\r\n    \"YIELD\"\r\n  ],\r\n  builtinLiterals: [\"true\", \"TRUE\", \"false\", \"FALSE\", \"null\", \"NULL\"],\r\n  builtinFunctions: [\r\n    \"abs\",\r\n    \"acos\",\r\n    \"asin\",\r\n    \"atan\",\r\n    \"atan2\",\r\n    \"avg\",\r\n    \"ceil\",\r\n    \"coalesce\",\r\n    \"collect\",\r\n    \"cos\",\r\n    \"cot\",\r\n    \"count\",\r\n    \"degrees\",\r\n    \"e\",\r\n    \"endNode\",\r\n    \"exists\",\r\n    \"exp\",\r\n    \"floor\",\r\n    \"head\",\r\n    \"id\",\r\n    \"keys\",\r\n    \"labels\",\r\n    \"last\",\r\n    \"left\",\r\n    \"length\",\r\n    \"log\",\r\n    \"log10\",\r\n    \"lTrim\",\r\n    \"max\",\r\n    \"min\",\r\n    \"nodes\",\r\n    \"percentileCont\",\r\n    \"percentileDisc\",\r\n    \"pi\",\r\n    \"properties\",\r\n    \"radians\",\r\n    \"rand\",\r\n    \"range\",\r\n    \"relationships\",\r\n    \"replace\",\r\n    \"reverse\",\r\n    \"right\",\r\n    \"round\",\r\n    \"rTrim\",\r\n    \"sign\",\r\n    \"sin\",\r\n    \"size\",\r\n    \"split\",\r\n    \"sqrt\",\r\n    \"startNode\",\r\n    \"stDev\",\r\n    \"stDevP\",\r\n    \"substring\",\r\n    \"sum\",\r\n    \"tail\",\r\n    \"tan\",\r\n    \"timestamp\",\r\n    \"toBoolean\",\r\n    \"toFloat\",\r\n    \"toInteger\",\r\n    \"toLower\",\r\n    \"toString\",\r\n    \"toUpper\",\r\n    \"trim\",\r\n    \"type\"\r\n  ],\r\n  operators: [\r\n    // Math operators\r\n    \"+\",\r\n    \"-\",\r\n    \"*\",\r\n    \"/\",\r\n    \"%\",\r\n    \"^\",\r\n    // Comparison operators\r\n    \"=\",\r\n    \"<>\",\r\n    \"<\",\r\n    \">\",\r\n    \"<=\",\r\n    \">=\",\r\n    // Pattern operators\r\n    \"->\",\r\n    \"<-\",\r\n    \"-->\",\r\n    \"<--\"\r\n  ],\r\n  escapes: /\\\\(?:[tbnrf\\\\\"'`]|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n  digits: /\\d+/,\r\n  octaldigits: /[0-7]+/,\r\n  hexdigits: /[0-9a-fA-F]+/,\r\n  tokenizer: {\r\n    root: [[/[{}[\\]()]/, \"@brackets\"], { include: \"common\" }],\r\n    common: [\r\n      { include: \"@whitespace\" },\r\n      { include: \"@numbers\" },\r\n      { include: \"@strings\" },\r\n      // Cypher labels on nodes/relationships, e.g. (n:NodeLabel)-[e:RelationshipLabel]\r\n      [/:[a-zA-Z_][\\w]*/, \"type.identifier\"],\r\n      [\r\n        /[a-zA-Z_][\\w]*(?=\\()/,\r\n        {\r\n          cases: {\r\n            \"@builtinFunctions\": \"predefined.function\"\r\n          }\r\n        }\r\n      ],\r\n      [\r\n        /[a-zA-Z_$][\\w$]*/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": \"keyword\",\r\n            \"@builtinLiterals\": \"predefined.literal\",\r\n            \"@default\": \"identifier\"\r\n          }\r\n        }\r\n      ],\r\n      [/`/, \"identifier.escape\", \"@identifierBacktick\"],\r\n      // delimiter and operator after number because of `.\\d` floats and `:` in labels\r\n      [/[;,.:|]/, \"delimiter\"],\r\n      [\r\n        /[<>=%+\\-*/^]+/,\r\n        {\r\n          cases: {\r\n            \"@operators\": \"delimiter\",\r\n            \"@default\": \"\"\r\n          }\r\n        }\r\n      ]\r\n    ],\r\n    numbers: [\r\n      [/-?(@digits)[eE](-?(@digits))?/, \"number.float\"],\r\n      [/-?(@digits)?\\.(@digits)([eE]-?(@digits))?/, \"number.float\"],\r\n      [/-?0x(@hexdigits)/, \"number.hex\"],\r\n      [/-?0(@octaldigits)/, \"number.octal\"],\r\n      [/-?(@digits)/, \"number\"]\r\n    ],\r\n    strings: [\r\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      // non-teminated string\r\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      // non-teminated string\r\n      [/\"/, \"string\", \"@stringDouble\"],\r\n      [/'/, \"string\", \"@stringSingle\"]\r\n    ],\r\n    whitespace: [\r\n      [/[ \\t\\r\\n]+/, \"white\"],\r\n      [/\\/\\*/, \"comment\", \"@comment\"],\r\n      [/\\/\\/.*$/, \"comment\"]\r\n    ],\r\n    comment: [\r\n      [/\\/\\/.*/, \"comment\"],\r\n      [/[^/*]+/, \"comment\"],\r\n      [/\\*\\//, \"comment\", \"@pop\"],\r\n      [/[/*]/, \"comment\"]\r\n    ],\r\n    stringDouble: [\r\n      [/[^\\\\\"]+/, \"string\"],\r\n      [/@escapes/, \"string\"],\r\n      [/\\\\./, \"string.invalid\"],\r\n      [/\"/, \"string\", \"@pop\"]\r\n    ],\r\n    stringSingle: [\r\n      [/[^\\\\']+/, \"string\"],\r\n      [/@escapes/, \"string\"],\r\n      [/\\\\./, \"string.invalid\"],\r\n      [/'/, \"string\", \"@pop\"]\r\n    ],\r\n    identifierBacktick: [\r\n      [/[^\\\\`]+/, \"identifier.escape\"],\r\n      [/@escapes/, \"identifier.escape\"],\r\n      [/\\\\./, \"identifier.escape.invalid\"],\r\n      [/`/, \"identifier.escape\", \"@pop\"]\r\n    ]\r\n  }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/cypher/cypher.js\n");

/***/ })

}]);