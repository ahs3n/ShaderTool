"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_monaco-editor_esm_vs_language_json_jsonMode_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/language/json/jsonMode.js":
/*!*********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/language/json/jsonMode.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompletionAdapter: () => (/* binding */ CompletionAdapter),\n/* harmony export */   DefinitionAdapter: () => (/* binding */ DefinitionAdapter),\n/* harmony export */   DiagnosticsAdapter: () => (/* binding */ DiagnosticsAdapter),\n/* harmony export */   DocumentColorAdapter: () => (/* binding */ DocumentColorAdapter),\n/* harmony export */   DocumentFormattingEditProvider: () => (/* binding */ DocumentFormattingEditProvider),\n/* harmony export */   DocumentHighlightAdapter: () => (/* binding */ DocumentHighlightAdapter),\n/* harmony export */   DocumentLinkAdapter: () => (/* binding */ DocumentLinkAdapter),\n/* harmony export */   DocumentRangeFormattingEditProvider: () => (/* binding */ DocumentRangeFormattingEditProvider),\n/* harmony export */   DocumentSymbolAdapter: () => (/* binding */ DocumentSymbolAdapter),\n/* harmony export */   FoldingRangeAdapter: () => (/* binding */ FoldingRangeAdapter),\n/* harmony export */   HoverAdapter: () => (/* binding */ HoverAdapter),\n/* harmony export */   ReferenceAdapter: () => (/* binding */ ReferenceAdapter),\n/* harmony export */   RenameAdapter: () => (/* binding */ RenameAdapter),\n/* harmony export */   SelectionRangeAdapter: () => (/* binding */ SelectionRangeAdapter),\n/* harmony export */   WorkerManager: () => (/* binding */ WorkerManager),\n/* harmony export */   fromPosition: () => (/* binding */ fromPosition),\n/* harmony export */   fromRange: () => (/* binding */ fromRange),\n/* harmony export */   getWorker: () => (/* binding */ getWorker),\n/* harmony export */   setupMode: () => (/* binding */ setupMode),\n/* harmony export */   toRange: () => (/* binding */ toRange),\n/* harmony export */   toTextEdit: () => (/* binding */ toTextEdit)\n/* harmony export */ });\n/* harmony import */ var _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../editor/editor.api.js */ \"./node_modules/monaco-editor/esm/vs/editor/editor.api.js\");\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\nvar __defProp = Object.defineProperty;\r\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\r\nvar __getOwnPropNames = Object.getOwnPropertyNames;\r\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\r\nvar __copyProps = (to, from, except, desc) => {\r\n  if (from && typeof from === \"object\" || typeof from === \"function\") {\r\n    for (let key of __getOwnPropNames(from))\r\n      if (!__hasOwnProp.call(to, key) && key !== except)\r\n        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });\r\n  }\r\n  return to;\r\n};\r\nvar __reExport = (target, mod, secondTarget) => (__copyProps(target, mod, \"default\"), secondTarget && __copyProps(secondTarget, mod, \"default\"));\r\n\r\n// src/fillers/monaco-editor-core.ts\r\nvar monaco_editor_core_exports = {};\r\n__reExport(monaco_editor_core_exports, _editor_editor_api_js__WEBPACK_IMPORTED_MODULE_0__);\r\n\r\n\r\n// src/language/json/workerManager.ts\r\nvar STOP_WHEN_IDLE_FOR = 2 * 60 * 1e3;\r\nvar WorkerManager = class {\r\n  constructor(defaults) {\r\n    this._defaults = defaults;\r\n    this._worker = null;\r\n    this._client = null;\r\n    this._idleCheckInterval = window.setInterval(() => this._checkIfIdle(), 30 * 1e3);\r\n    this._lastUsedTime = 0;\r\n    this._configChangeListener = this._defaults.onDidChange(() => this._stopWorker());\r\n  }\r\n  _stopWorker() {\r\n    if (this._worker) {\r\n      this._worker.dispose();\r\n      this._worker = null;\r\n    }\r\n    this._client = null;\r\n  }\r\n  dispose() {\r\n    clearInterval(this._idleCheckInterval);\r\n    this._configChangeListener.dispose();\r\n    this._stopWorker();\r\n  }\r\n  _checkIfIdle() {\r\n    if (!this._worker) {\r\n      return;\r\n    }\r\n    let timePassedSinceLastUsed = Date.now() - this._lastUsedTime;\r\n    if (timePassedSinceLastUsed > STOP_WHEN_IDLE_FOR) {\r\n      this._stopWorker();\r\n    }\r\n  }\r\n  _getClient() {\r\n    this._lastUsedTime = Date.now();\r\n    if (!this._client) {\r\n      this._worker = monaco_editor_core_exports.editor.createWebWorker({\r\n        // module that exports the create() method and returns a `JSONWorker` instance\r\n        moduleId: \"vs/language/json/jsonWorker\",\r\n        label: this._defaults.languageId,\r\n        // passed in to the create() method\r\n        createData: {\r\n          languageSettings: this._defaults.diagnosticsOptions,\r\n          languageId: this._defaults.languageId,\r\n          enableSchemaRequest: this._defaults.diagnosticsOptions.enableSchemaRequest\r\n        }\r\n      });\r\n      this._client = this._worker.getProxy();\r\n    }\r\n    return this._client;\r\n  }\r\n  getLanguageServiceWorker(...resources) {\r\n    let _client;\r\n    return this._getClient().then((client) => {\r\n      _client = client;\r\n    }).then((_) => {\r\n      if (this._worker) {\r\n        return this._worker.withSyncedResources(resources);\r\n      }\r\n    }).then((_) => _client);\r\n  }\r\n};\r\n\r\n// node_modules/vscode-languageserver-types/lib/esm/main.js\r\nvar DocumentUri;\r\n(function(DocumentUri2) {\r\n  function is(value) {\r\n    return typeof value === \"string\";\r\n  }\r\n  DocumentUri2.is = is;\r\n})(DocumentUri || (DocumentUri = {}));\r\nvar URI;\r\n(function(URI2) {\r\n  function is(value) {\r\n    return typeof value === \"string\";\r\n  }\r\n  URI2.is = is;\r\n})(URI || (URI = {}));\r\nvar integer;\r\n(function(integer2) {\r\n  integer2.MIN_VALUE = -2147483648;\r\n  integer2.MAX_VALUE = 2147483647;\r\n  function is(value) {\r\n    return typeof value === \"number\" && integer2.MIN_VALUE <= value && value <= integer2.MAX_VALUE;\r\n  }\r\n  integer2.is = is;\r\n})(integer || (integer = {}));\r\nvar uinteger;\r\n(function(uinteger2) {\r\n  uinteger2.MIN_VALUE = 0;\r\n  uinteger2.MAX_VALUE = 2147483647;\r\n  function is(value) {\r\n    return typeof value === \"number\" && uinteger2.MIN_VALUE <= value && value <= uinteger2.MAX_VALUE;\r\n  }\r\n  uinteger2.is = is;\r\n})(uinteger || (uinteger = {}));\r\nvar Position;\r\n(function(Position3) {\r\n  function create(line, character) {\r\n    if (line === Number.MAX_VALUE) {\r\n      line = uinteger.MAX_VALUE;\r\n    }\r\n    if (character === Number.MAX_VALUE) {\r\n      character = uinteger.MAX_VALUE;\r\n    }\r\n    return { line, character };\r\n  }\r\n  Position3.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.objectLiteral(candidate) && Is.uinteger(candidate.line) && Is.uinteger(candidate.character);\r\n  }\r\n  Position3.is = is;\r\n})(Position || (Position = {}));\r\nvar Range;\r\n(function(Range3) {\r\n  function create(one, two, three, four) {\r\n    if (Is.uinteger(one) && Is.uinteger(two) && Is.uinteger(three) && Is.uinteger(four)) {\r\n      return { start: Position.create(one, two), end: Position.create(three, four) };\r\n    } else if (Position.is(one) && Position.is(two)) {\r\n      return { start: one, end: two };\r\n    } else {\r\n      throw new Error(`Range#create called with invalid arguments[${one}, ${two}, ${three}, ${four}]`);\r\n    }\r\n  }\r\n  Range3.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.objectLiteral(candidate) && Position.is(candidate.start) && Position.is(candidate.end);\r\n  }\r\n  Range3.is = is;\r\n})(Range || (Range = {}));\r\nvar Location;\r\n(function(Location2) {\r\n  function create(uri, range) {\r\n    return { uri, range };\r\n  }\r\n  Location2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && (Is.string(candidate.uri) || Is.undefined(candidate.uri));\r\n  }\r\n  Location2.is = is;\r\n})(Location || (Location = {}));\r\nvar LocationLink;\r\n(function(LocationLink2) {\r\n  function create(targetUri, targetRange, targetSelectionRange, originSelectionRange) {\r\n    return { targetUri, targetRange, targetSelectionRange, originSelectionRange };\r\n  }\r\n  LocationLink2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.objectLiteral(candidate) && Range.is(candidate.targetRange) && Is.string(candidate.targetUri) && Range.is(candidate.targetSelectionRange) && (Range.is(candidate.originSelectionRange) || Is.undefined(candidate.originSelectionRange));\r\n  }\r\n  LocationLink2.is = is;\r\n})(LocationLink || (LocationLink = {}));\r\nvar Color;\r\n(function(Color2) {\r\n  function create(red, green, blue, alpha) {\r\n    return {\r\n      red,\r\n      green,\r\n      blue,\r\n      alpha\r\n    };\r\n  }\r\n  Color2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Is.numberRange(candidate.red, 0, 1) && Is.numberRange(candidate.green, 0, 1) && Is.numberRange(candidate.blue, 0, 1) && Is.numberRange(candidate.alpha, 0, 1);\r\n  }\r\n  Color2.is = is;\r\n})(Color || (Color = {}));\r\nvar ColorInformation;\r\n(function(ColorInformation2) {\r\n  function create(range, color) {\r\n    return {\r\n      range,\r\n      color\r\n    };\r\n  }\r\n  ColorInformation2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && Color.is(candidate.color);\r\n  }\r\n  ColorInformation2.is = is;\r\n})(ColorInformation || (ColorInformation = {}));\r\nvar ColorPresentation;\r\n(function(ColorPresentation2) {\r\n  function create(label, textEdit, additionalTextEdits) {\r\n    return {\r\n      label,\r\n      textEdit,\r\n      additionalTextEdits\r\n    };\r\n  }\r\n  ColorPresentation2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Is.string(candidate.label) && (Is.undefined(candidate.textEdit) || TextEdit.is(candidate)) && (Is.undefined(candidate.additionalTextEdits) || Is.typedArray(candidate.additionalTextEdits, TextEdit.is));\r\n  }\r\n  ColorPresentation2.is = is;\r\n})(ColorPresentation || (ColorPresentation = {}));\r\nvar FoldingRangeKind;\r\n(function(FoldingRangeKind2) {\r\n  FoldingRangeKind2.Comment = \"comment\";\r\n  FoldingRangeKind2.Imports = \"imports\";\r\n  FoldingRangeKind2.Region = \"region\";\r\n})(FoldingRangeKind || (FoldingRangeKind = {}));\r\nvar FoldingRange;\r\n(function(FoldingRange2) {\r\n  function create(startLine, endLine, startCharacter, endCharacter, kind, collapsedText) {\r\n    const result = {\r\n      startLine,\r\n      endLine\r\n    };\r\n    if (Is.defined(startCharacter)) {\r\n      result.startCharacter = startCharacter;\r\n    }\r\n    if (Is.defined(endCharacter)) {\r\n      result.endCharacter = endCharacter;\r\n    }\r\n    if (Is.defined(kind)) {\r\n      result.kind = kind;\r\n    }\r\n    if (Is.defined(collapsedText)) {\r\n      result.collapsedText = collapsedText;\r\n    }\r\n    return result;\r\n  }\r\n  FoldingRange2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Is.uinteger(candidate.startLine) && Is.uinteger(candidate.startLine) && (Is.undefined(candidate.startCharacter) || Is.uinteger(candidate.startCharacter)) && (Is.undefined(candidate.endCharacter) || Is.uinteger(candidate.endCharacter)) && (Is.undefined(candidate.kind) || Is.string(candidate.kind));\r\n  }\r\n  FoldingRange2.is = is;\r\n})(FoldingRange || (FoldingRange = {}));\r\nvar DiagnosticRelatedInformation;\r\n(function(DiagnosticRelatedInformation2) {\r\n  function create(location, message) {\r\n    return {\r\n      location,\r\n      message\r\n    };\r\n  }\r\n  DiagnosticRelatedInformation2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Location.is(candidate.location) && Is.string(candidate.message);\r\n  }\r\n  DiagnosticRelatedInformation2.is = is;\r\n})(DiagnosticRelatedInformation || (DiagnosticRelatedInformation = {}));\r\nvar DiagnosticSeverity;\r\n(function(DiagnosticSeverity2) {\r\n  DiagnosticSeverity2.Error = 1;\r\n  DiagnosticSeverity2.Warning = 2;\r\n  DiagnosticSeverity2.Information = 3;\r\n  DiagnosticSeverity2.Hint = 4;\r\n})(DiagnosticSeverity || (DiagnosticSeverity = {}));\r\nvar DiagnosticTag;\r\n(function(DiagnosticTag2) {\r\n  DiagnosticTag2.Unnecessary = 1;\r\n  DiagnosticTag2.Deprecated = 2;\r\n})(DiagnosticTag || (DiagnosticTag = {}));\r\nvar CodeDescription;\r\n(function(CodeDescription2) {\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Is.string(candidate.href);\r\n  }\r\n  CodeDescription2.is = is;\r\n})(CodeDescription || (CodeDescription = {}));\r\nvar Diagnostic;\r\n(function(Diagnostic2) {\r\n  function create(range, message, severity, code, source, relatedInformation) {\r\n    let result = { range, message };\r\n    if (Is.defined(severity)) {\r\n      result.severity = severity;\r\n    }\r\n    if (Is.defined(code)) {\r\n      result.code = code;\r\n    }\r\n    if (Is.defined(source)) {\r\n      result.source = source;\r\n    }\r\n    if (Is.defined(relatedInformation)) {\r\n      result.relatedInformation = relatedInformation;\r\n    }\r\n    return result;\r\n  }\r\n  Diagnostic2.create = create;\r\n  function is(value) {\r\n    var _a;\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Range.is(candidate.range) && Is.string(candidate.message) && (Is.number(candidate.severity) || Is.undefined(candidate.severity)) && (Is.integer(candidate.code) || Is.string(candidate.code) || Is.undefined(candidate.code)) && (Is.undefined(candidate.codeDescription) || Is.string((_a = candidate.codeDescription) === null || _a === void 0 ? void 0 : _a.href)) && (Is.string(candidate.source) || Is.undefined(candidate.source)) && (Is.undefined(candidate.relatedInformation) || Is.typedArray(candidate.relatedInformation, DiagnosticRelatedInformation.is));\r\n  }\r\n  Diagnostic2.is = is;\r\n})(Diagnostic || (Diagnostic = {}));\r\nvar Command;\r\n(function(Command2) {\r\n  function create(title, command, ...args) {\r\n    let result = { title, command };\r\n    if (Is.defined(args) && args.length > 0) {\r\n      result.arguments = args;\r\n    }\r\n    return result;\r\n  }\r\n  Command2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.string(candidate.title) && Is.string(candidate.command);\r\n  }\r\n  Command2.is = is;\r\n})(Command || (Command = {}));\r\nvar TextEdit;\r\n(function(TextEdit2) {\r\n  function replace(range, newText) {\r\n    return { range, newText };\r\n  }\r\n  TextEdit2.replace = replace;\r\n  function insert(position, newText) {\r\n    return { range: { start: position, end: position }, newText };\r\n  }\r\n  TextEdit2.insert = insert;\r\n  function del(range) {\r\n    return { range, newText: \"\" };\r\n  }\r\n  TextEdit2.del = del;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Is.string(candidate.newText) && Range.is(candidate.range);\r\n  }\r\n  TextEdit2.is = is;\r\n})(TextEdit || (TextEdit = {}));\r\nvar ChangeAnnotation;\r\n(function(ChangeAnnotation2) {\r\n  function create(label, needsConfirmation, description) {\r\n    const result = { label };\r\n    if (needsConfirmation !== void 0) {\r\n      result.needsConfirmation = needsConfirmation;\r\n    }\r\n    if (description !== void 0) {\r\n      result.description = description;\r\n    }\r\n    return result;\r\n  }\r\n  ChangeAnnotation2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Is.string(candidate.label) && (Is.boolean(candidate.needsConfirmation) || candidate.needsConfirmation === void 0) && (Is.string(candidate.description) || candidate.description === void 0);\r\n  }\r\n  ChangeAnnotation2.is = is;\r\n})(ChangeAnnotation || (ChangeAnnotation = {}));\r\nvar ChangeAnnotationIdentifier;\r\n(function(ChangeAnnotationIdentifier2) {\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.string(candidate);\r\n  }\r\n  ChangeAnnotationIdentifier2.is = is;\r\n})(ChangeAnnotationIdentifier || (ChangeAnnotationIdentifier = {}));\r\nvar AnnotatedTextEdit;\r\n(function(AnnotatedTextEdit2) {\r\n  function replace(range, newText, annotation) {\r\n    return { range, newText, annotationId: annotation };\r\n  }\r\n  AnnotatedTextEdit2.replace = replace;\r\n  function insert(position, newText, annotation) {\r\n    return { range: { start: position, end: position }, newText, annotationId: annotation };\r\n  }\r\n  AnnotatedTextEdit2.insert = insert;\r\n  function del(range, annotation) {\r\n    return { range, newText: \"\", annotationId: annotation };\r\n  }\r\n  AnnotatedTextEdit2.del = del;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return TextEdit.is(candidate) && (ChangeAnnotation.is(candidate.annotationId) || ChangeAnnotationIdentifier.is(candidate.annotationId));\r\n  }\r\n  AnnotatedTextEdit2.is = is;\r\n})(AnnotatedTextEdit || (AnnotatedTextEdit = {}));\r\nvar TextDocumentEdit;\r\n(function(TextDocumentEdit2) {\r\n  function create(textDocument, edits) {\r\n    return { textDocument, edits };\r\n  }\r\n  TextDocumentEdit2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && OptionalVersionedTextDocumentIdentifier.is(candidate.textDocument) && Array.isArray(candidate.edits);\r\n  }\r\n  TextDocumentEdit2.is = is;\r\n})(TextDocumentEdit || (TextDocumentEdit = {}));\r\nvar CreateFile;\r\n(function(CreateFile2) {\r\n  function create(uri, options, annotation) {\r\n    let result = {\r\n      kind: \"create\",\r\n      uri\r\n    };\r\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n      result.options = options;\r\n    }\r\n    if (annotation !== void 0) {\r\n      result.annotationId = annotation;\r\n    }\r\n    return result;\r\n  }\r\n  CreateFile2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return candidate && candidate.kind === \"create\" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\r\n  }\r\n  CreateFile2.is = is;\r\n})(CreateFile || (CreateFile = {}));\r\nvar RenameFile;\r\n(function(RenameFile2) {\r\n  function create(oldUri, newUri, options, annotation) {\r\n    let result = {\r\n      kind: \"rename\",\r\n      oldUri,\r\n      newUri\r\n    };\r\n    if (options !== void 0 && (options.overwrite !== void 0 || options.ignoreIfExists !== void 0)) {\r\n      result.options = options;\r\n    }\r\n    if (annotation !== void 0) {\r\n      result.annotationId = annotation;\r\n    }\r\n    return result;\r\n  }\r\n  RenameFile2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return candidate && candidate.kind === \"rename\" && Is.string(candidate.oldUri) && Is.string(candidate.newUri) && (candidate.options === void 0 || (candidate.options.overwrite === void 0 || Is.boolean(candidate.options.overwrite)) && (candidate.options.ignoreIfExists === void 0 || Is.boolean(candidate.options.ignoreIfExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\r\n  }\r\n  RenameFile2.is = is;\r\n})(RenameFile || (RenameFile = {}));\r\nvar DeleteFile;\r\n(function(DeleteFile2) {\r\n  function create(uri, options, annotation) {\r\n    let result = {\r\n      kind: \"delete\",\r\n      uri\r\n    };\r\n    if (options !== void 0 && (options.recursive !== void 0 || options.ignoreIfNotExists !== void 0)) {\r\n      result.options = options;\r\n    }\r\n    if (annotation !== void 0) {\r\n      result.annotationId = annotation;\r\n    }\r\n    return result;\r\n  }\r\n  DeleteFile2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return candidate && candidate.kind === \"delete\" && Is.string(candidate.uri) && (candidate.options === void 0 || (candidate.options.recursive === void 0 || Is.boolean(candidate.options.recursive)) && (candidate.options.ignoreIfNotExists === void 0 || Is.boolean(candidate.options.ignoreIfNotExists))) && (candidate.annotationId === void 0 || ChangeAnnotationIdentifier.is(candidate.annotationId));\r\n  }\r\n  DeleteFile2.is = is;\r\n})(DeleteFile || (DeleteFile = {}));\r\nvar WorkspaceEdit;\r\n(function(WorkspaceEdit2) {\r\n  function is(value) {\r\n    let candidate = value;\r\n    return candidate && (candidate.changes !== void 0 || candidate.documentChanges !== void 0) && (candidate.documentChanges === void 0 || candidate.documentChanges.every((change) => {\r\n      if (Is.string(change.kind)) {\r\n        return CreateFile.is(change) || RenameFile.is(change) || DeleteFile.is(change);\r\n      } else {\r\n        return TextDocumentEdit.is(change);\r\n      }\r\n    }));\r\n  }\r\n  WorkspaceEdit2.is = is;\r\n})(WorkspaceEdit || (WorkspaceEdit = {}));\r\nvar TextDocumentIdentifier;\r\n(function(TextDocumentIdentifier2) {\r\n  function create(uri) {\r\n    return { uri };\r\n  }\r\n  TextDocumentIdentifier2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.string(candidate.uri);\r\n  }\r\n  TextDocumentIdentifier2.is = is;\r\n})(TextDocumentIdentifier || (TextDocumentIdentifier = {}));\r\nvar VersionedTextDocumentIdentifier;\r\n(function(VersionedTextDocumentIdentifier2) {\r\n  function create(uri, version) {\r\n    return { uri, version };\r\n  }\r\n  VersionedTextDocumentIdentifier2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.integer(candidate.version);\r\n  }\r\n  VersionedTextDocumentIdentifier2.is = is;\r\n})(VersionedTextDocumentIdentifier || (VersionedTextDocumentIdentifier = {}));\r\nvar OptionalVersionedTextDocumentIdentifier;\r\n(function(OptionalVersionedTextDocumentIdentifier2) {\r\n  function create(uri, version) {\r\n    return { uri, version };\r\n  }\r\n  OptionalVersionedTextDocumentIdentifier2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.string(candidate.uri) && (candidate.version === null || Is.integer(candidate.version));\r\n  }\r\n  OptionalVersionedTextDocumentIdentifier2.is = is;\r\n})(OptionalVersionedTextDocumentIdentifier || (OptionalVersionedTextDocumentIdentifier = {}));\r\nvar TextDocumentItem;\r\n(function(TextDocumentItem2) {\r\n  function create(uri, languageId, version, text) {\r\n    return { uri, languageId, version, text };\r\n  }\r\n  TextDocumentItem2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.string(candidate.uri) && Is.string(candidate.languageId) && Is.integer(candidate.version) && Is.string(candidate.text);\r\n  }\r\n  TextDocumentItem2.is = is;\r\n})(TextDocumentItem || (TextDocumentItem = {}));\r\nvar MarkupKind;\r\n(function(MarkupKind2) {\r\n  MarkupKind2.PlainText = \"plaintext\";\r\n  MarkupKind2.Markdown = \"markdown\";\r\n  function is(value) {\r\n    const candidate = value;\r\n    return candidate === MarkupKind2.PlainText || candidate === MarkupKind2.Markdown;\r\n  }\r\n  MarkupKind2.is = is;\r\n})(MarkupKind || (MarkupKind = {}));\r\nvar MarkupContent;\r\n(function(MarkupContent2) {\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(value) && MarkupKind.is(candidate.kind) && Is.string(candidate.value);\r\n  }\r\n  MarkupContent2.is = is;\r\n})(MarkupContent || (MarkupContent = {}));\r\nvar CompletionItemKind;\r\n(function(CompletionItemKind2) {\r\n  CompletionItemKind2.Text = 1;\r\n  CompletionItemKind2.Method = 2;\r\n  CompletionItemKind2.Function = 3;\r\n  CompletionItemKind2.Constructor = 4;\r\n  CompletionItemKind2.Field = 5;\r\n  CompletionItemKind2.Variable = 6;\r\n  CompletionItemKind2.Class = 7;\r\n  CompletionItemKind2.Interface = 8;\r\n  CompletionItemKind2.Module = 9;\r\n  CompletionItemKind2.Property = 10;\r\n  CompletionItemKind2.Unit = 11;\r\n  CompletionItemKind2.Value = 12;\r\n  CompletionItemKind2.Enum = 13;\r\n  CompletionItemKind2.Keyword = 14;\r\n  CompletionItemKind2.Snippet = 15;\r\n  CompletionItemKind2.Color = 16;\r\n  CompletionItemKind2.File = 17;\r\n  CompletionItemKind2.Reference = 18;\r\n  CompletionItemKind2.Folder = 19;\r\n  CompletionItemKind2.EnumMember = 20;\r\n  CompletionItemKind2.Constant = 21;\r\n  CompletionItemKind2.Struct = 22;\r\n  CompletionItemKind2.Event = 23;\r\n  CompletionItemKind2.Operator = 24;\r\n  CompletionItemKind2.TypeParameter = 25;\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\nvar InsertTextFormat;\r\n(function(InsertTextFormat2) {\r\n  InsertTextFormat2.PlainText = 1;\r\n  InsertTextFormat2.Snippet = 2;\r\n})(InsertTextFormat || (InsertTextFormat = {}));\r\nvar CompletionItemTag;\r\n(function(CompletionItemTag2) {\r\n  CompletionItemTag2.Deprecated = 1;\r\n})(CompletionItemTag || (CompletionItemTag = {}));\r\nvar InsertReplaceEdit;\r\n(function(InsertReplaceEdit2) {\r\n  function create(newText, insert, replace) {\r\n    return { newText, insert, replace };\r\n  }\r\n  InsertReplaceEdit2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return candidate && Is.string(candidate.newText) && Range.is(candidate.insert) && Range.is(candidate.replace);\r\n  }\r\n  InsertReplaceEdit2.is = is;\r\n})(InsertReplaceEdit || (InsertReplaceEdit = {}));\r\nvar InsertTextMode;\r\n(function(InsertTextMode2) {\r\n  InsertTextMode2.asIs = 1;\r\n  InsertTextMode2.adjustIndentation = 2;\r\n})(InsertTextMode || (InsertTextMode = {}));\r\nvar CompletionItemLabelDetails;\r\n(function(CompletionItemLabelDetails2) {\r\n  function is(value) {\r\n    const candidate = value;\r\n    return candidate && (Is.string(candidate.detail) || candidate.detail === void 0) && (Is.string(candidate.description) || candidate.description === void 0);\r\n  }\r\n  CompletionItemLabelDetails2.is = is;\r\n})(CompletionItemLabelDetails || (CompletionItemLabelDetails = {}));\r\nvar CompletionItem;\r\n(function(CompletionItem2) {\r\n  function create(label) {\r\n    return { label };\r\n  }\r\n  CompletionItem2.create = create;\r\n})(CompletionItem || (CompletionItem = {}));\r\nvar CompletionList;\r\n(function(CompletionList2) {\r\n  function create(items, isIncomplete) {\r\n    return { items: items ? items : [], isIncomplete: !!isIncomplete };\r\n  }\r\n  CompletionList2.create = create;\r\n})(CompletionList || (CompletionList = {}));\r\nvar MarkedString;\r\n(function(MarkedString2) {\r\n  function fromPlainText(plainText) {\r\n    return plainText.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\");\r\n  }\r\n  MarkedString2.fromPlainText = fromPlainText;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.string(candidate) || Is.objectLiteral(candidate) && Is.string(candidate.language) && Is.string(candidate.value);\r\n  }\r\n  MarkedString2.is = is;\r\n})(MarkedString || (MarkedString = {}));\r\nvar Hover;\r\n(function(Hover2) {\r\n  function is(value) {\r\n    let candidate = value;\r\n    return !!candidate && Is.objectLiteral(candidate) && (MarkupContent.is(candidate.contents) || MarkedString.is(candidate.contents) || Is.typedArray(candidate.contents, MarkedString.is)) && (value.range === void 0 || Range.is(value.range));\r\n  }\r\n  Hover2.is = is;\r\n})(Hover || (Hover = {}));\r\nvar ParameterInformation;\r\n(function(ParameterInformation2) {\r\n  function create(label, documentation) {\r\n    return documentation ? { label, documentation } : { label };\r\n  }\r\n  ParameterInformation2.create = create;\r\n})(ParameterInformation || (ParameterInformation = {}));\r\nvar SignatureInformation;\r\n(function(SignatureInformation2) {\r\n  function create(label, documentation, ...parameters) {\r\n    let result = { label };\r\n    if (Is.defined(documentation)) {\r\n      result.documentation = documentation;\r\n    }\r\n    if (Is.defined(parameters)) {\r\n      result.parameters = parameters;\r\n    } else {\r\n      result.parameters = [];\r\n    }\r\n    return result;\r\n  }\r\n  SignatureInformation2.create = create;\r\n})(SignatureInformation || (SignatureInformation = {}));\r\nvar DocumentHighlightKind;\r\n(function(DocumentHighlightKind2) {\r\n  DocumentHighlightKind2.Text = 1;\r\n  DocumentHighlightKind2.Read = 2;\r\n  DocumentHighlightKind2.Write = 3;\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\nvar DocumentHighlight;\r\n(function(DocumentHighlight2) {\r\n  function create(range, kind) {\r\n    let result = { range };\r\n    if (Is.number(kind)) {\r\n      result.kind = kind;\r\n    }\r\n    return result;\r\n  }\r\n  DocumentHighlight2.create = create;\r\n})(DocumentHighlight || (DocumentHighlight = {}));\r\nvar SymbolKind;\r\n(function(SymbolKind2) {\r\n  SymbolKind2.File = 1;\r\n  SymbolKind2.Module = 2;\r\n  SymbolKind2.Namespace = 3;\r\n  SymbolKind2.Package = 4;\r\n  SymbolKind2.Class = 5;\r\n  SymbolKind2.Method = 6;\r\n  SymbolKind2.Property = 7;\r\n  SymbolKind2.Field = 8;\r\n  SymbolKind2.Constructor = 9;\r\n  SymbolKind2.Enum = 10;\r\n  SymbolKind2.Interface = 11;\r\n  SymbolKind2.Function = 12;\r\n  SymbolKind2.Variable = 13;\r\n  SymbolKind2.Constant = 14;\r\n  SymbolKind2.String = 15;\r\n  SymbolKind2.Number = 16;\r\n  SymbolKind2.Boolean = 17;\r\n  SymbolKind2.Array = 18;\r\n  SymbolKind2.Object = 19;\r\n  SymbolKind2.Key = 20;\r\n  SymbolKind2.Null = 21;\r\n  SymbolKind2.EnumMember = 22;\r\n  SymbolKind2.Struct = 23;\r\n  SymbolKind2.Event = 24;\r\n  SymbolKind2.Operator = 25;\r\n  SymbolKind2.TypeParameter = 26;\r\n})(SymbolKind || (SymbolKind = {}));\r\nvar SymbolTag;\r\n(function(SymbolTag2) {\r\n  SymbolTag2.Deprecated = 1;\r\n})(SymbolTag || (SymbolTag = {}));\r\nvar SymbolInformation;\r\n(function(SymbolInformation2) {\r\n  function create(name, kind, range, uri, containerName) {\r\n    let result = {\r\n      name,\r\n      kind,\r\n      location: { uri, range }\r\n    };\r\n    if (containerName) {\r\n      result.containerName = containerName;\r\n    }\r\n    return result;\r\n  }\r\n  SymbolInformation2.create = create;\r\n})(SymbolInformation || (SymbolInformation = {}));\r\nvar WorkspaceSymbol;\r\n(function(WorkspaceSymbol2) {\r\n  function create(name, kind, uri, range) {\r\n    return range !== void 0 ? { name, kind, location: { uri, range } } : { name, kind, location: { uri } };\r\n  }\r\n  WorkspaceSymbol2.create = create;\r\n})(WorkspaceSymbol || (WorkspaceSymbol = {}));\r\nvar DocumentSymbol;\r\n(function(DocumentSymbol2) {\r\n  function create(name, detail, kind, range, selectionRange, children) {\r\n    let result = {\r\n      name,\r\n      detail,\r\n      kind,\r\n      range,\r\n      selectionRange\r\n    };\r\n    if (children !== void 0) {\r\n      result.children = children;\r\n    }\r\n    return result;\r\n  }\r\n  DocumentSymbol2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return candidate && Is.string(candidate.name) && Is.number(candidate.kind) && Range.is(candidate.range) && Range.is(candidate.selectionRange) && (candidate.detail === void 0 || Is.string(candidate.detail)) && (candidate.deprecated === void 0 || Is.boolean(candidate.deprecated)) && (candidate.children === void 0 || Array.isArray(candidate.children)) && (candidate.tags === void 0 || Array.isArray(candidate.tags));\r\n  }\r\n  DocumentSymbol2.is = is;\r\n})(DocumentSymbol || (DocumentSymbol = {}));\r\nvar CodeActionKind;\r\n(function(CodeActionKind2) {\r\n  CodeActionKind2.Empty = \"\";\r\n  CodeActionKind2.QuickFix = \"quickfix\";\r\n  CodeActionKind2.Refactor = \"refactor\";\r\n  CodeActionKind2.RefactorExtract = \"refactor.extract\";\r\n  CodeActionKind2.RefactorInline = \"refactor.inline\";\r\n  CodeActionKind2.RefactorRewrite = \"refactor.rewrite\";\r\n  CodeActionKind2.Source = \"source\";\r\n  CodeActionKind2.SourceOrganizeImports = \"source.organizeImports\";\r\n  CodeActionKind2.SourceFixAll = \"source.fixAll\";\r\n})(CodeActionKind || (CodeActionKind = {}));\r\nvar CodeActionTriggerKind;\r\n(function(CodeActionTriggerKind2) {\r\n  CodeActionTriggerKind2.Invoked = 1;\r\n  CodeActionTriggerKind2.Automatic = 2;\r\n})(CodeActionTriggerKind || (CodeActionTriggerKind = {}));\r\nvar CodeActionContext;\r\n(function(CodeActionContext2) {\r\n  function create(diagnostics, only, triggerKind) {\r\n    let result = { diagnostics };\r\n    if (only !== void 0 && only !== null) {\r\n      result.only = only;\r\n    }\r\n    if (triggerKind !== void 0 && triggerKind !== null) {\r\n      result.triggerKind = triggerKind;\r\n    }\r\n    return result;\r\n  }\r\n  CodeActionContext2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.typedArray(candidate.diagnostics, Diagnostic.is) && (candidate.only === void 0 || Is.typedArray(candidate.only, Is.string)) && (candidate.triggerKind === void 0 || candidate.triggerKind === CodeActionTriggerKind.Invoked || candidate.triggerKind === CodeActionTriggerKind.Automatic);\r\n  }\r\n  CodeActionContext2.is = is;\r\n})(CodeActionContext || (CodeActionContext = {}));\r\nvar CodeAction;\r\n(function(CodeAction2) {\r\n  function create(title, kindOrCommandOrEdit, kind) {\r\n    let result = { title };\r\n    let checkKind = true;\r\n    if (typeof kindOrCommandOrEdit === \"string\") {\r\n      checkKind = false;\r\n      result.kind = kindOrCommandOrEdit;\r\n    } else if (Command.is(kindOrCommandOrEdit)) {\r\n      result.command = kindOrCommandOrEdit;\r\n    } else {\r\n      result.edit = kindOrCommandOrEdit;\r\n    }\r\n    if (checkKind && kind !== void 0) {\r\n      result.kind = kind;\r\n    }\r\n    return result;\r\n  }\r\n  CodeAction2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return candidate && Is.string(candidate.title) && (candidate.diagnostics === void 0 || Is.typedArray(candidate.diagnostics, Diagnostic.is)) && (candidate.kind === void 0 || Is.string(candidate.kind)) && (candidate.edit !== void 0 || candidate.command !== void 0) && (candidate.command === void 0 || Command.is(candidate.command)) && (candidate.isPreferred === void 0 || Is.boolean(candidate.isPreferred)) && (candidate.edit === void 0 || WorkspaceEdit.is(candidate.edit));\r\n  }\r\n  CodeAction2.is = is;\r\n})(CodeAction || (CodeAction = {}));\r\nvar CodeLens;\r\n(function(CodeLens2) {\r\n  function create(range, data) {\r\n    let result = { range };\r\n    if (Is.defined(data)) {\r\n      result.data = data;\r\n    }\r\n    return result;\r\n  }\r\n  CodeLens2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.command) || Command.is(candidate.command));\r\n  }\r\n  CodeLens2.is = is;\r\n})(CodeLens || (CodeLens = {}));\r\nvar FormattingOptions;\r\n(function(FormattingOptions2) {\r\n  function create(tabSize, insertSpaces) {\r\n    return { tabSize, insertSpaces };\r\n  }\r\n  FormattingOptions2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.uinteger(candidate.tabSize) && Is.boolean(candidate.insertSpaces);\r\n  }\r\n  FormattingOptions2.is = is;\r\n})(FormattingOptions || (FormattingOptions = {}));\r\nvar DocumentLink;\r\n(function(DocumentLink2) {\r\n  function create(range, target, data) {\r\n    return { range, target, data };\r\n  }\r\n  DocumentLink2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Range.is(candidate.range) && (Is.undefined(candidate.target) || Is.string(candidate.target));\r\n  }\r\n  DocumentLink2.is = is;\r\n})(DocumentLink || (DocumentLink = {}));\r\nvar SelectionRange;\r\n(function(SelectionRange2) {\r\n  function create(range, parent) {\r\n    return { range, parent };\r\n  }\r\n  SelectionRange2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.objectLiteral(candidate) && Range.is(candidate.range) && (candidate.parent === void 0 || SelectionRange2.is(candidate.parent));\r\n  }\r\n  SelectionRange2.is = is;\r\n})(SelectionRange || (SelectionRange = {}));\r\nvar SemanticTokenTypes;\r\n(function(SemanticTokenTypes2) {\r\n  SemanticTokenTypes2[\"namespace\"] = \"namespace\";\r\n  SemanticTokenTypes2[\"type\"] = \"type\";\r\n  SemanticTokenTypes2[\"class\"] = \"class\";\r\n  SemanticTokenTypes2[\"enum\"] = \"enum\";\r\n  SemanticTokenTypes2[\"interface\"] = \"interface\";\r\n  SemanticTokenTypes2[\"struct\"] = \"struct\";\r\n  SemanticTokenTypes2[\"typeParameter\"] = \"typeParameter\";\r\n  SemanticTokenTypes2[\"parameter\"] = \"parameter\";\r\n  SemanticTokenTypes2[\"variable\"] = \"variable\";\r\n  SemanticTokenTypes2[\"property\"] = \"property\";\r\n  SemanticTokenTypes2[\"enumMember\"] = \"enumMember\";\r\n  SemanticTokenTypes2[\"event\"] = \"event\";\r\n  SemanticTokenTypes2[\"function\"] = \"function\";\r\n  SemanticTokenTypes2[\"method\"] = \"method\";\r\n  SemanticTokenTypes2[\"macro\"] = \"macro\";\r\n  SemanticTokenTypes2[\"keyword\"] = \"keyword\";\r\n  SemanticTokenTypes2[\"modifier\"] = \"modifier\";\r\n  SemanticTokenTypes2[\"comment\"] = \"comment\";\r\n  SemanticTokenTypes2[\"string\"] = \"string\";\r\n  SemanticTokenTypes2[\"number\"] = \"number\";\r\n  SemanticTokenTypes2[\"regexp\"] = \"regexp\";\r\n  SemanticTokenTypes2[\"operator\"] = \"operator\";\r\n  SemanticTokenTypes2[\"decorator\"] = \"decorator\";\r\n})(SemanticTokenTypes || (SemanticTokenTypes = {}));\r\nvar SemanticTokenModifiers;\r\n(function(SemanticTokenModifiers2) {\r\n  SemanticTokenModifiers2[\"declaration\"] = \"declaration\";\r\n  SemanticTokenModifiers2[\"definition\"] = \"definition\";\r\n  SemanticTokenModifiers2[\"readonly\"] = \"readonly\";\r\n  SemanticTokenModifiers2[\"static\"] = \"static\";\r\n  SemanticTokenModifiers2[\"deprecated\"] = \"deprecated\";\r\n  SemanticTokenModifiers2[\"abstract\"] = \"abstract\";\r\n  SemanticTokenModifiers2[\"async\"] = \"async\";\r\n  SemanticTokenModifiers2[\"modification\"] = \"modification\";\r\n  SemanticTokenModifiers2[\"documentation\"] = \"documentation\";\r\n  SemanticTokenModifiers2[\"defaultLibrary\"] = \"defaultLibrary\";\r\n})(SemanticTokenModifiers || (SemanticTokenModifiers = {}));\r\nvar SemanticTokens;\r\n(function(SemanticTokens2) {\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && (candidate.resultId === void 0 || typeof candidate.resultId === \"string\") && Array.isArray(candidate.data) && (candidate.data.length === 0 || typeof candidate.data[0] === \"number\");\r\n  }\r\n  SemanticTokens2.is = is;\r\n})(SemanticTokens || (SemanticTokens = {}));\r\nvar InlineValueText;\r\n(function(InlineValueText2) {\r\n  function create(range, text) {\r\n    return { range, text };\r\n  }\r\n  InlineValueText2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && Is.string(candidate.text);\r\n  }\r\n  InlineValueText2.is = is;\r\n})(InlineValueText || (InlineValueText = {}));\r\nvar InlineValueVariableLookup;\r\n(function(InlineValueVariableLookup2) {\r\n  function create(range, variableName, caseSensitiveLookup) {\r\n    return { range, variableName, caseSensitiveLookup };\r\n  }\r\n  InlineValueVariableLookup2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && Is.boolean(candidate.caseSensitiveLookup) && (Is.string(candidate.variableName) || candidate.variableName === void 0);\r\n  }\r\n  InlineValueVariableLookup2.is = is;\r\n})(InlineValueVariableLookup || (InlineValueVariableLookup = {}));\r\nvar InlineValueEvaluatableExpression;\r\n(function(InlineValueEvaluatableExpression2) {\r\n  function create(range, expression) {\r\n    return { range, expression };\r\n  }\r\n  InlineValueEvaluatableExpression2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return candidate !== void 0 && candidate !== null && Range.is(candidate.range) && (Is.string(candidate.expression) || candidate.expression === void 0);\r\n  }\r\n  InlineValueEvaluatableExpression2.is = is;\r\n})(InlineValueEvaluatableExpression || (InlineValueEvaluatableExpression = {}));\r\nvar InlineValueContext;\r\n(function(InlineValueContext2) {\r\n  function create(frameId, stoppedLocation) {\r\n    return { frameId, stoppedLocation };\r\n  }\r\n  InlineValueContext2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.defined(candidate) && Range.is(value.stoppedLocation);\r\n  }\r\n  InlineValueContext2.is = is;\r\n})(InlineValueContext || (InlineValueContext = {}));\r\nvar InlayHintKind;\r\n(function(InlayHintKind2) {\r\n  InlayHintKind2.Type = 1;\r\n  InlayHintKind2.Parameter = 2;\r\n  function is(value) {\r\n    return value === 1 || value === 2;\r\n  }\r\n  InlayHintKind2.is = is;\r\n})(InlayHintKind || (InlayHintKind = {}));\r\nvar InlayHintLabelPart;\r\n(function(InlayHintLabelPart2) {\r\n  function create(value) {\r\n    return { value };\r\n  }\r\n  InlayHintLabelPart2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && (candidate.tooltip === void 0 || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip)) && (candidate.location === void 0 || Location.is(candidate.location)) && (candidate.command === void 0 || Command.is(candidate.command));\r\n  }\r\n  InlayHintLabelPart2.is = is;\r\n})(InlayHintLabelPart || (InlayHintLabelPart = {}));\r\nvar InlayHint;\r\n(function(InlayHint2) {\r\n  function create(position, label, kind) {\r\n    const result = { position, label };\r\n    if (kind !== void 0) {\r\n      result.kind = kind;\r\n    }\r\n    return result;\r\n  }\r\n  InlayHint2.create = create;\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && Position.is(candidate.position) && (Is.string(candidate.label) || Is.typedArray(candidate.label, InlayHintLabelPart.is)) && (candidate.kind === void 0 || InlayHintKind.is(candidate.kind)) && candidate.textEdits === void 0 || Is.typedArray(candidate.textEdits, TextEdit.is) && (candidate.tooltip === void 0 || Is.string(candidate.tooltip) || MarkupContent.is(candidate.tooltip)) && (candidate.paddingLeft === void 0 || Is.boolean(candidate.paddingLeft)) && (candidate.paddingRight === void 0 || Is.boolean(candidate.paddingRight));\r\n  }\r\n  InlayHint2.is = is;\r\n})(InlayHint || (InlayHint = {}));\r\nvar StringValue;\r\n(function(StringValue2) {\r\n  function createSnippet(value) {\r\n    return { kind: \"snippet\", value };\r\n  }\r\n  StringValue2.createSnippet = createSnippet;\r\n})(StringValue || (StringValue = {}));\r\nvar InlineCompletionItem;\r\n(function(InlineCompletionItem2) {\r\n  function create(insertText, filterText, range, command) {\r\n    return { insertText, filterText, range, command };\r\n  }\r\n  InlineCompletionItem2.create = create;\r\n})(InlineCompletionItem || (InlineCompletionItem = {}));\r\nvar InlineCompletionList;\r\n(function(InlineCompletionList2) {\r\n  function create(items) {\r\n    return { items };\r\n  }\r\n  InlineCompletionList2.create = create;\r\n})(InlineCompletionList || (InlineCompletionList = {}));\r\nvar InlineCompletionTriggerKind;\r\n(function(InlineCompletionTriggerKind2) {\r\n  InlineCompletionTriggerKind2.Invoked = 0;\r\n  InlineCompletionTriggerKind2.Automatic = 1;\r\n})(InlineCompletionTriggerKind || (InlineCompletionTriggerKind = {}));\r\nvar SelectedCompletionInfo;\r\n(function(SelectedCompletionInfo2) {\r\n  function create(range, text) {\r\n    return { range, text };\r\n  }\r\n  SelectedCompletionInfo2.create = create;\r\n})(SelectedCompletionInfo || (SelectedCompletionInfo = {}));\r\nvar InlineCompletionContext;\r\n(function(InlineCompletionContext2) {\r\n  function create(triggerKind, selectedCompletionInfo) {\r\n    return { triggerKind, selectedCompletionInfo };\r\n  }\r\n  InlineCompletionContext2.create = create;\r\n})(InlineCompletionContext || (InlineCompletionContext = {}));\r\nvar WorkspaceFolder;\r\n(function(WorkspaceFolder2) {\r\n  function is(value) {\r\n    const candidate = value;\r\n    return Is.objectLiteral(candidate) && URI.is(candidate.uri) && Is.string(candidate.name);\r\n  }\r\n  WorkspaceFolder2.is = is;\r\n})(WorkspaceFolder || (WorkspaceFolder = {}));\r\nvar TextDocument;\r\n(function(TextDocument2) {\r\n  function create(uri, languageId, version, content) {\r\n    return new FullTextDocument(uri, languageId, version, content);\r\n  }\r\n  TextDocument2.create = create;\r\n  function is(value) {\r\n    let candidate = value;\r\n    return Is.defined(candidate) && Is.string(candidate.uri) && (Is.undefined(candidate.languageId) || Is.string(candidate.languageId)) && Is.uinteger(candidate.lineCount) && Is.func(candidate.getText) && Is.func(candidate.positionAt) && Is.func(candidate.offsetAt) ? true : false;\r\n  }\r\n  TextDocument2.is = is;\r\n  function applyEdits(document, edits) {\r\n    let text = document.getText();\r\n    let sortedEdits = mergeSort(edits, (a, b) => {\r\n      let diff = a.range.start.line - b.range.start.line;\r\n      if (diff === 0) {\r\n        return a.range.start.character - b.range.start.character;\r\n      }\r\n      return diff;\r\n    });\r\n    let lastModifiedOffset = text.length;\r\n    for (let i = sortedEdits.length - 1; i >= 0; i--) {\r\n      let e = sortedEdits[i];\r\n      let startOffset = document.offsetAt(e.range.start);\r\n      let endOffset = document.offsetAt(e.range.end);\r\n      if (endOffset <= lastModifiedOffset) {\r\n        text = text.substring(0, startOffset) + e.newText + text.substring(endOffset, text.length);\r\n      } else {\r\n        throw new Error(\"Overlapping edit\");\r\n      }\r\n      lastModifiedOffset = startOffset;\r\n    }\r\n    return text;\r\n  }\r\n  TextDocument2.applyEdits = applyEdits;\r\n  function mergeSort(data, compare) {\r\n    if (data.length <= 1) {\r\n      return data;\r\n    }\r\n    const p = data.length / 2 | 0;\r\n    const left = data.slice(0, p);\r\n    const right = data.slice(p);\r\n    mergeSort(left, compare);\r\n    mergeSort(right, compare);\r\n    let leftIdx = 0;\r\n    let rightIdx = 0;\r\n    let i = 0;\r\n    while (leftIdx < left.length && rightIdx < right.length) {\r\n      let ret = compare(left[leftIdx], right[rightIdx]);\r\n      if (ret <= 0) {\r\n        data[i++] = left[leftIdx++];\r\n      } else {\r\n        data[i++] = right[rightIdx++];\r\n      }\r\n    }\r\n    while (leftIdx < left.length) {\r\n      data[i++] = left[leftIdx++];\r\n    }\r\n    while (rightIdx < right.length) {\r\n      data[i++] = right[rightIdx++];\r\n    }\r\n    return data;\r\n  }\r\n})(TextDocument || (TextDocument = {}));\r\nvar FullTextDocument = class {\r\n  constructor(uri, languageId, version, content) {\r\n    this._uri = uri;\r\n    this._languageId = languageId;\r\n    this._version = version;\r\n    this._content = content;\r\n    this._lineOffsets = void 0;\r\n  }\r\n  get uri() {\r\n    return this._uri;\r\n  }\r\n  get languageId() {\r\n    return this._languageId;\r\n  }\r\n  get version() {\r\n    return this._version;\r\n  }\r\n  getText(range) {\r\n    if (range) {\r\n      let start = this.offsetAt(range.start);\r\n      let end = this.offsetAt(range.end);\r\n      return this._content.substring(start, end);\r\n    }\r\n    return this._content;\r\n  }\r\n  update(event, version) {\r\n    this._content = event.text;\r\n    this._version = version;\r\n    this._lineOffsets = void 0;\r\n  }\r\n  getLineOffsets() {\r\n    if (this._lineOffsets === void 0) {\r\n      let lineOffsets = [];\r\n      let text = this._content;\r\n      let isLineStart = true;\r\n      for (let i = 0; i < text.length; i++) {\r\n        if (isLineStart) {\r\n          lineOffsets.push(i);\r\n          isLineStart = false;\r\n        }\r\n        let ch = text.charAt(i);\r\n        isLineStart = ch === \"\\r\" || ch === \"\\n\";\r\n        if (ch === \"\\r\" && i + 1 < text.length && text.charAt(i + 1) === \"\\n\") {\r\n          i++;\r\n        }\r\n      }\r\n      if (isLineStart && text.length > 0) {\r\n        lineOffsets.push(text.length);\r\n      }\r\n      this._lineOffsets = lineOffsets;\r\n    }\r\n    return this._lineOffsets;\r\n  }\r\n  positionAt(offset) {\r\n    offset = Math.max(Math.min(offset, this._content.length), 0);\r\n    let lineOffsets = this.getLineOffsets();\r\n    let low = 0, high = lineOffsets.length;\r\n    if (high === 0) {\r\n      return Position.create(0, offset);\r\n    }\r\n    while (low < high) {\r\n      let mid = Math.floor((low + high) / 2);\r\n      if (lineOffsets[mid] > offset) {\r\n        high = mid;\r\n      } else {\r\n        low = mid + 1;\r\n      }\r\n    }\r\n    let line = low - 1;\r\n    return Position.create(line, offset - lineOffsets[line]);\r\n  }\r\n  offsetAt(position) {\r\n    let lineOffsets = this.getLineOffsets();\r\n    if (position.line >= lineOffsets.length) {\r\n      return this._content.length;\r\n    } else if (position.line < 0) {\r\n      return 0;\r\n    }\r\n    let lineOffset = lineOffsets[position.line];\r\n    let nextLineOffset = position.line + 1 < lineOffsets.length ? lineOffsets[position.line + 1] : this._content.length;\r\n    return Math.max(Math.min(lineOffset + position.character, nextLineOffset), lineOffset);\r\n  }\r\n  get lineCount() {\r\n    return this.getLineOffsets().length;\r\n  }\r\n};\r\nvar Is;\r\n(function(Is2) {\r\n  const toString = Object.prototype.toString;\r\n  function defined(value) {\r\n    return typeof value !== \"undefined\";\r\n  }\r\n  Is2.defined = defined;\r\n  function undefined2(value) {\r\n    return typeof value === \"undefined\";\r\n  }\r\n  Is2.undefined = undefined2;\r\n  function boolean(value) {\r\n    return value === true || value === false;\r\n  }\r\n  Is2.boolean = boolean;\r\n  function string(value) {\r\n    return toString.call(value) === \"[object String]\";\r\n  }\r\n  Is2.string = string;\r\n  function number(value) {\r\n    return toString.call(value) === \"[object Number]\";\r\n  }\r\n  Is2.number = number;\r\n  function numberRange(value, min, max) {\r\n    return toString.call(value) === \"[object Number]\" && min <= value && value <= max;\r\n  }\r\n  Is2.numberRange = numberRange;\r\n  function integer2(value) {\r\n    return toString.call(value) === \"[object Number]\" && -2147483648 <= value && value <= 2147483647;\r\n  }\r\n  Is2.integer = integer2;\r\n  function uinteger2(value) {\r\n    return toString.call(value) === \"[object Number]\" && 0 <= value && value <= 2147483647;\r\n  }\r\n  Is2.uinteger = uinteger2;\r\n  function func(value) {\r\n    return toString.call(value) === \"[object Function]\";\r\n  }\r\n  Is2.func = func;\r\n  function objectLiteral(value) {\r\n    return value !== null && typeof value === \"object\";\r\n  }\r\n  Is2.objectLiteral = objectLiteral;\r\n  function typedArray(value, check) {\r\n    return Array.isArray(value) && value.every(check);\r\n  }\r\n  Is2.typedArray = typedArray;\r\n})(Is || (Is = {}));\r\n\r\n// src/language/common/lspLanguageFeatures.ts\r\nvar DiagnosticsAdapter = class {\r\n  constructor(_languageId, _worker, configChangeEvent) {\r\n    this._languageId = _languageId;\r\n    this._worker = _worker;\r\n    this._disposables = [];\r\n    this._listener = /* @__PURE__ */ Object.create(null);\r\n    const onModelAdd = (model) => {\r\n      let modeId = model.getLanguageId();\r\n      if (modeId !== this._languageId) {\r\n        return;\r\n      }\r\n      let handle;\r\n      this._listener[model.uri.toString()] = model.onDidChangeContent(() => {\r\n        window.clearTimeout(handle);\r\n        handle = window.setTimeout(() => this._doValidate(model.uri, modeId), 500);\r\n      });\r\n      this._doValidate(model.uri, modeId);\r\n    };\r\n    const onModelRemoved = (model) => {\r\n      monaco_editor_core_exports.editor.setModelMarkers(model, this._languageId, []);\r\n      let uriStr = model.uri.toString();\r\n      let listener = this._listener[uriStr];\r\n      if (listener) {\r\n        listener.dispose();\r\n        delete this._listener[uriStr];\r\n      }\r\n    };\r\n    this._disposables.push(monaco_editor_core_exports.editor.onDidCreateModel(onModelAdd));\r\n    this._disposables.push(monaco_editor_core_exports.editor.onWillDisposeModel(onModelRemoved));\r\n    this._disposables.push(\r\n      monaco_editor_core_exports.editor.onDidChangeModelLanguage((event) => {\r\n        onModelRemoved(event.model);\r\n        onModelAdd(event.model);\r\n      })\r\n    );\r\n    this._disposables.push(\r\n      configChangeEvent((_) => {\r\n        monaco_editor_core_exports.editor.getModels().forEach((model) => {\r\n          if (model.getLanguageId() === this._languageId) {\r\n            onModelRemoved(model);\r\n            onModelAdd(model);\r\n          }\r\n        });\r\n      })\r\n    );\r\n    this._disposables.push({\r\n      dispose: () => {\r\n        monaco_editor_core_exports.editor.getModels().forEach(onModelRemoved);\r\n        for (let key in this._listener) {\r\n          this._listener[key].dispose();\r\n        }\r\n      }\r\n    });\r\n    monaco_editor_core_exports.editor.getModels().forEach(onModelAdd);\r\n  }\r\n  dispose() {\r\n    this._disposables.forEach((d) => d && d.dispose());\r\n    this._disposables.length = 0;\r\n  }\r\n  _doValidate(resource, languageId) {\r\n    this._worker(resource).then((worker2) => {\r\n      return worker2.doValidation(resource.toString());\r\n    }).then((diagnostics) => {\r\n      const markers = diagnostics.map((d) => toDiagnostics(resource, d));\r\n      let model = monaco_editor_core_exports.editor.getModel(resource);\r\n      if (model && model.getLanguageId() === languageId) {\r\n        monaco_editor_core_exports.editor.setModelMarkers(model, languageId, markers);\r\n      }\r\n    }).then(void 0, (err) => {\r\n      console.error(err);\r\n    });\r\n  }\r\n};\r\nfunction toSeverity(lsSeverity) {\r\n  switch (lsSeverity) {\r\n    case DiagnosticSeverity.Error:\r\n      return monaco_editor_core_exports.MarkerSeverity.Error;\r\n    case DiagnosticSeverity.Warning:\r\n      return monaco_editor_core_exports.MarkerSeverity.Warning;\r\n    case DiagnosticSeverity.Information:\r\n      return monaco_editor_core_exports.MarkerSeverity.Info;\r\n    case DiagnosticSeverity.Hint:\r\n      return monaco_editor_core_exports.MarkerSeverity.Hint;\r\n    default:\r\n      return monaco_editor_core_exports.MarkerSeverity.Info;\r\n  }\r\n}\r\nfunction toDiagnostics(resource, diag) {\r\n  let code = typeof diag.code === \"number\" ? String(diag.code) : diag.code;\r\n  return {\r\n    severity: toSeverity(diag.severity),\r\n    startLineNumber: diag.range.start.line + 1,\r\n    startColumn: diag.range.start.character + 1,\r\n    endLineNumber: diag.range.end.line + 1,\r\n    endColumn: diag.range.end.character + 1,\r\n    message: diag.message,\r\n    code,\r\n    source: diag.source\r\n  };\r\n}\r\nvar CompletionAdapter = class {\r\n  constructor(_worker, _triggerCharacters) {\r\n    this._worker = _worker;\r\n    this._triggerCharacters = _triggerCharacters;\r\n  }\r\n  get triggerCharacters() {\r\n    return this._triggerCharacters;\r\n  }\r\n  provideCompletionItems(model, position, context, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker2) => {\r\n      return worker2.doComplete(resource.toString(), fromPosition(position));\r\n    }).then((info) => {\r\n      if (!info) {\r\n        return;\r\n      }\r\n      const wordInfo = model.getWordUntilPosition(position);\r\n      const wordRange = new monaco_editor_core_exports.Range(\r\n        position.lineNumber,\r\n        wordInfo.startColumn,\r\n        position.lineNumber,\r\n        wordInfo.endColumn\r\n      );\r\n      const items = info.items.map((entry) => {\r\n        const item = {\r\n          label: entry.label,\r\n          insertText: entry.insertText || entry.label,\r\n          sortText: entry.sortText,\r\n          filterText: entry.filterText,\r\n          documentation: entry.documentation,\r\n          detail: entry.detail,\r\n          command: toCommand(entry.command),\r\n          range: wordRange,\r\n          kind: toCompletionItemKind(entry.kind)\r\n        };\r\n        if (entry.textEdit) {\r\n          if (isInsertReplaceEdit(entry.textEdit)) {\r\n            item.range = {\r\n              insert: toRange(entry.textEdit.insert),\r\n              replace: toRange(entry.textEdit.replace)\r\n            };\r\n          } else {\r\n            item.range = toRange(entry.textEdit.range);\r\n          }\r\n          item.insertText = entry.textEdit.newText;\r\n        }\r\n        if (entry.additionalTextEdits) {\r\n          item.additionalTextEdits = entry.additionalTextEdits.map(toTextEdit);\r\n        }\r\n        if (entry.insertTextFormat === InsertTextFormat.Snippet) {\r\n          item.insertTextRules = monaco_editor_core_exports.languages.CompletionItemInsertTextRule.InsertAsSnippet;\r\n        }\r\n        return item;\r\n      });\r\n      return {\r\n        isIncomplete: info.isIncomplete,\r\n        suggestions: items\r\n      };\r\n    });\r\n  }\r\n};\r\nfunction fromPosition(position) {\r\n  if (!position) {\r\n    return void 0;\r\n  }\r\n  return { character: position.column - 1, line: position.lineNumber - 1 };\r\n}\r\nfunction fromRange(range) {\r\n  if (!range) {\r\n    return void 0;\r\n  }\r\n  return {\r\n    start: {\r\n      line: range.startLineNumber - 1,\r\n      character: range.startColumn - 1\r\n    },\r\n    end: { line: range.endLineNumber - 1, character: range.endColumn - 1 }\r\n  };\r\n}\r\nfunction toRange(range) {\r\n  if (!range) {\r\n    return void 0;\r\n  }\r\n  return new monaco_editor_core_exports.Range(\r\n    range.start.line + 1,\r\n    range.start.character + 1,\r\n    range.end.line + 1,\r\n    range.end.character + 1\r\n  );\r\n}\r\nfunction isInsertReplaceEdit(edit) {\r\n  return typeof edit.insert !== \"undefined\" && typeof edit.replace !== \"undefined\";\r\n}\r\nfunction toCompletionItemKind(kind) {\r\n  const mItemKind = monaco_editor_core_exports.languages.CompletionItemKind;\r\n  switch (kind) {\r\n    case CompletionItemKind.Text:\r\n      return mItemKind.Text;\r\n    case CompletionItemKind.Method:\r\n      return mItemKind.Method;\r\n    case CompletionItemKind.Function:\r\n      return mItemKind.Function;\r\n    case CompletionItemKind.Constructor:\r\n      return mItemKind.Constructor;\r\n    case CompletionItemKind.Field:\r\n      return mItemKind.Field;\r\n    case CompletionItemKind.Variable:\r\n      return mItemKind.Variable;\r\n    case CompletionItemKind.Class:\r\n      return mItemKind.Class;\r\n    case CompletionItemKind.Interface:\r\n      return mItemKind.Interface;\r\n    case CompletionItemKind.Module:\r\n      return mItemKind.Module;\r\n    case CompletionItemKind.Property:\r\n      return mItemKind.Property;\r\n    case CompletionItemKind.Unit:\r\n      return mItemKind.Unit;\r\n    case CompletionItemKind.Value:\r\n      return mItemKind.Value;\r\n    case CompletionItemKind.Enum:\r\n      return mItemKind.Enum;\r\n    case CompletionItemKind.Keyword:\r\n      return mItemKind.Keyword;\r\n    case CompletionItemKind.Snippet:\r\n      return mItemKind.Snippet;\r\n    case CompletionItemKind.Color:\r\n      return mItemKind.Color;\r\n    case CompletionItemKind.File:\r\n      return mItemKind.File;\r\n    case CompletionItemKind.Reference:\r\n      return mItemKind.Reference;\r\n  }\r\n  return mItemKind.Property;\r\n}\r\nfunction toTextEdit(textEdit) {\r\n  if (!textEdit) {\r\n    return void 0;\r\n  }\r\n  return {\r\n    range: toRange(textEdit.range),\r\n    text: textEdit.newText\r\n  };\r\n}\r\nfunction toCommand(c) {\r\n  return c && c.command === \"editor.action.triggerSuggest\" ? { id: c.command, title: c.title, arguments: c.arguments } : void 0;\r\n}\r\nvar HoverAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideHover(model, position, token) {\r\n    let resource = model.uri;\r\n    return this._worker(resource).then((worker2) => {\r\n      return worker2.doHover(resource.toString(), fromPosition(position));\r\n    }).then((info) => {\r\n      if (!info) {\r\n        return;\r\n      }\r\n      return {\r\n        range: toRange(info.range),\r\n        contents: toMarkedStringArray(info.contents)\r\n      };\r\n    });\r\n  }\r\n};\r\nfunction isMarkupContent(thing) {\r\n  return thing && typeof thing === \"object\" && typeof thing.kind === \"string\";\r\n}\r\nfunction toMarkdownString(entry) {\r\n  if (typeof entry === \"string\") {\r\n    return {\r\n      value: entry\r\n    };\r\n  }\r\n  if (isMarkupContent(entry)) {\r\n    if (entry.kind === \"plaintext\") {\r\n      return {\r\n        value: entry.value.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\")\r\n      };\r\n    }\r\n    return {\r\n      value: entry.value\r\n    };\r\n  }\r\n  return { value: \"```\" + entry.language + \"\\n\" + entry.value + \"\\n```\\n\" };\r\n}\r\nfunction toMarkedStringArray(contents) {\r\n  if (!contents) {\r\n    return void 0;\r\n  }\r\n  if (Array.isArray(contents)) {\r\n    return contents.map(toMarkdownString);\r\n  }\r\n  return [toMarkdownString(contents)];\r\n}\r\nvar DocumentHighlightAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideDocumentHighlights(model, position, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker2) => worker2.findDocumentHighlights(resource.toString(), fromPosition(position))).then((entries) => {\r\n      if (!entries) {\r\n        return;\r\n      }\r\n      return entries.map((entry) => {\r\n        return {\r\n          range: toRange(entry.range),\r\n          kind: toDocumentHighlightKind(entry.kind)\r\n        };\r\n      });\r\n    });\r\n  }\r\n};\r\nfunction toDocumentHighlightKind(kind) {\r\n  switch (kind) {\r\n    case DocumentHighlightKind.Read:\r\n      return monaco_editor_core_exports.languages.DocumentHighlightKind.Read;\r\n    case DocumentHighlightKind.Write:\r\n      return monaco_editor_core_exports.languages.DocumentHighlightKind.Write;\r\n    case DocumentHighlightKind.Text:\r\n      return monaco_editor_core_exports.languages.DocumentHighlightKind.Text;\r\n  }\r\n  return monaco_editor_core_exports.languages.DocumentHighlightKind.Text;\r\n}\r\nvar DefinitionAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideDefinition(model, position, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker2) => {\r\n      return worker2.findDefinition(resource.toString(), fromPosition(position));\r\n    }).then((definition) => {\r\n      if (!definition) {\r\n        return;\r\n      }\r\n      return [toLocation(definition)];\r\n    });\r\n  }\r\n};\r\nfunction toLocation(location) {\r\n  return {\r\n    uri: monaco_editor_core_exports.Uri.parse(location.uri),\r\n    range: toRange(location.range)\r\n  };\r\n}\r\nvar ReferenceAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideReferences(model, position, context, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker2) => {\r\n      return worker2.findReferences(resource.toString(), fromPosition(position));\r\n    }).then((entries) => {\r\n      if (!entries) {\r\n        return;\r\n      }\r\n      return entries.map(toLocation);\r\n    });\r\n  }\r\n};\r\nvar RenameAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideRenameEdits(model, position, newName, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker2) => {\r\n      return worker2.doRename(resource.toString(), fromPosition(position), newName);\r\n    }).then((edit) => {\r\n      return toWorkspaceEdit(edit);\r\n    });\r\n  }\r\n};\r\nfunction toWorkspaceEdit(edit) {\r\n  if (!edit || !edit.changes) {\r\n    return void 0;\r\n  }\r\n  let resourceEdits = [];\r\n  for (let uri in edit.changes) {\r\n    const _uri = monaco_editor_core_exports.Uri.parse(uri);\r\n    for (let e of edit.changes[uri]) {\r\n      resourceEdits.push({\r\n        resource: _uri,\r\n        versionId: void 0,\r\n        textEdit: {\r\n          range: toRange(e.range),\r\n          text: e.newText\r\n        }\r\n      });\r\n    }\r\n  }\r\n  return {\r\n    edits: resourceEdits\r\n  };\r\n}\r\nvar DocumentSymbolAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideDocumentSymbols(model, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker2) => worker2.findDocumentSymbols(resource.toString())).then((items) => {\r\n      if (!items) {\r\n        return;\r\n      }\r\n      return items.map((item) => {\r\n        if (isDocumentSymbol(item)) {\r\n          return toDocumentSymbol(item);\r\n        }\r\n        return {\r\n          name: item.name,\r\n          detail: \"\",\r\n          containerName: item.containerName,\r\n          kind: toSymbolKind(item.kind),\r\n          range: toRange(item.location.range),\r\n          selectionRange: toRange(item.location.range),\r\n          tags: []\r\n        };\r\n      });\r\n    });\r\n  }\r\n};\r\nfunction isDocumentSymbol(symbol) {\r\n  return \"children\" in symbol;\r\n}\r\nfunction toDocumentSymbol(symbol) {\r\n  return {\r\n    name: symbol.name,\r\n    detail: symbol.detail ?? \"\",\r\n    kind: toSymbolKind(symbol.kind),\r\n    range: toRange(symbol.range),\r\n    selectionRange: toRange(symbol.selectionRange),\r\n    tags: symbol.tags ?? [],\r\n    children: (symbol.children ?? []).map((item) => toDocumentSymbol(item))\r\n  };\r\n}\r\nfunction toSymbolKind(kind) {\r\n  let mKind = monaco_editor_core_exports.languages.SymbolKind;\r\n  switch (kind) {\r\n    case SymbolKind.File:\r\n      return mKind.File;\r\n    case SymbolKind.Module:\r\n      return mKind.Module;\r\n    case SymbolKind.Namespace:\r\n      return mKind.Namespace;\r\n    case SymbolKind.Package:\r\n      return mKind.Package;\r\n    case SymbolKind.Class:\r\n      return mKind.Class;\r\n    case SymbolKind.Method:\r\n      return mKind.Method;\r\n    case SymbolKind.Property:\r\n      return mKind.Property;\r\n    case SymbolKind.Field:\r\n      return mKind.Field;\r\n    case SymbolKind.Constructor:\r\n      return mKind.Constructor;\r\n    case SymbolKind.Enum:\r\n      return mKind.Enum;\r\n    case SymbolKind.Interface:\r\n      return mKind.Interface;\r\n    case SymbolKind.Function:\r\n      return mKind.Function;\r\n    case SymbolKind.Variable:\r\n      return mKind.Variable;\r\n    case SymbolKind.Constant:\r\n      return mKind.Constant;\r\n    case SymbolKind.String:\r\n      return mKind.String;\r\n    case SymbolKind.Number:\r\n      return mKind.Number;\r\n    case SymbolKind.Boolean:\r\n      return mKind.Boolean;\r\n    case SymbolKind.Array:\r\n      return mKind.Array;\r\n  }\r\n  return mKind.Function;\r\n}\r\nvar DocumentLinkAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideLinks(model, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker2) => worker2.findDocumentLinks(resource.toString())).then((items) => {\r\n      if (!items) {\r\n        return;\r\n      }\r\n      return {\r\n        links: items.map((item) => ({\r\n          range: toRange(item.range),\r\n          url: item.target\r\n        }))\r\n      };\r\n    });\r\n  }\r\n};\r\nvar DocumentFormattingEditProvider = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideDocumentFormattingEdits(model, options, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker2) => {\r\n      return worker2.format(resource.toString(), null, fromFormattingOptions(options)).then((edits) => {\r\n        if (!edits || edits.length === 0) {\r\n          return;\r\n        }\r\n        return edits.map(toTextEdit);\r\n      });\r\n    });\r\n  }\r\n};\r\nvar DocumentRangeFormattingEditProvider = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n    this.canFormatMultipleRanges = false;\r\n  }\r\n  provideDocumentRangeFormattingEdits(model, range, options, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker2) => {\r\n      return worker2.format(resource.toString(), fromRange(range), fromFormattingOptions(options)).then((edits) => {\r\n        if (!edits || edits.length === 0) {\r\n          return;\r\n        }\r\n        return edits.map(toTextEdit);\r\n      });\r\n    });\r\n  }\r\n};\r\nfunction fromFormattingOptions(options) {\r\n  return {\r\n    tabSize: options.tabSize,\r\n    insertSpaces: options.insertSpaces\r\n  };\r\n}\r\nvar DocumentColorAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideDocumentColors(model, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker2) => worker2.findDocumentColors(resource.toString())).then((infos) => {\r\n      if (!infos) {\r\n        return;\r\n      }\r\n      return infos.map((item) => ({\r\n        color: item.color,\r\n        range: toRange(item.range)\r\n      }));\r\n    });\r\n  }\r\n  provideColorPresentations(model, info, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then(\r\n      (worker2) => worker2.getColorPresentations(resource.toString(), info.color, fromRange(info.range))\r\n    ).then((presentations) => {\r\n      if (!presentations) {\r\n        return;\r\n      }\r\n      return presentations.map((presentation) => {\r\n        let item = {\r\n          label: presentation.label\r\n        };\r\n        if (presentation.textEdit) {\r\n          item.textEdit = toTextEdit(presentation.textEdit);\r\n        }\r\n        if (presentation.additionalTextEdits) {\r\n          item.additionalTextEdits = presentation.additionalTextEdits.map(toTextEdit);\r\n        }\r\n        return item;\r\n      });\r\n    });\r\n  }\r\n};\r\nvar FoldingRangeAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideFoldingRanges(model, context, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then((worker2) => worker2.getFoldingRanges(resource.toString(), context)).then((ranges) => {\r\n      if (!ranges) {\r\n        return;\r\n      }\r\n      return ranges.map((range) => {\r\n        const result = {\r\n          start: range.startLine + 1,\r\n          end: range.endLine + 1\r\n        };\r\n        if (typeof range.kind !== \"undefined\") {\r\n          result.kind = toFoldingRangeKind(range.kind);\r\n        }\r\n        return result;\r\n      });\r\n    });\r\n  }\r\n};\r\nfunction toFoldingRangeKind(kind) {\r\n  switch (kind) {\r\n    case FoldingRangeKind.Comment:\r\n      return monaco_editor_core_exports.languages.FoldingRangeKind.Comment;\r\n    case FoldingRangeKind.Imports:\r\n      return monaco_editor_core_exports.languages.FoldingRangeKind.Imports;\r\n    case FoldingRangeKind.Region:\r\n      return monaco_editor_core_exports.languages.FoldingRangeKind.Region;\r\n  }\r\n  return void 0;\r\n}\r\nvar SelectionRangeAdapter = class {\r\n  constructor(_worker) {\r\n    this._worker = _worker;\r\n  }\r\n  provideSelectionRanges(model, positions, token) {\r\n    const resource = model.uri;\r\n    return this._worker(resource).then(\r\n      (worker2) => worker2.getSelectionRanges(\r\n        resource.toString(),\r\n        positions.map(fromPosition)\r\n      )\r\n    ).then((selectionRanges) => {\r\n      if (!selectionRanges) {\r\n        return;\r\n      }\r\n      return selectionRanges.map((selectionRange) => {\r\n        const result = [];\r\n        while (selectionRange) {\r\n          result.push({ range: toRange(selectionRange.range) });\r\n          selectionRange = selectionRange.parent;\r\n        }\r\n        return result;\r\n      });\r\n    });\r\n  }\r\n};\r\n\r\n// node_modules/jsonc-parser/lib/esm/impl/scanner.js\r\nfunction createScanner(text, ignoreTrivia = false) {\r\n  const len = text.length;\r\n  let pos = 0, value = \"\", tokenOffset = 0, token = 16, lineNumber = 0, lineStartOffset = 0, tokenLineStartOffset = 0, prevTokenLineStartOffset = 0, scanError = 0;\r\n  function scanHexDigits(count, exact) {\r\n    let digits = 0;\r\n    let value2 = 0;\r\n    while (digits < count || !exact) {\r\n      let ch = text.charCodeAt(pos);\r\n      if (ch >= 48 && ch <= 57) {\r\n        value2 = value2 * 16 + ch - 48;\r\n      } else if (ch >= 65 && ch <= 70) {\r\n        value2 = value2 * 16 + ch - 65 + 10;\r\n      } else if (ch >= 97 && ch <= 102) {\r\n        value2 = value2 * 16 + ch - 97 + 10;\r\n      } else {\r\n        break;\r\n      }\r\n      pos++;\r\n      digits++;\r\n    }\r\n    if (digits < count) {\r\n      value2 = -1;\r\n    }\r\n    return value2;\r\n  }\r\n  function setPosition(newPosition) {\r\n    pos = newPosition;\r\n    value = \"\";\r\n    tokenOffset = 0;\r\n    token = 16;\r\n    scanError = 0;\r\n  }\r\n  function scanNumber() {\r\n    let start = pos;\r\n    if (text.charCodeAt(pos) === 48) {\r\n      pos++;\r\n    } else {\r\n      pos++;\r\n      while (pos < text.length && isDigit(text.charCodeAt(pos))) {\r\n        pos++;\r\n      }\r\n    }\r\n    if (pos < text.length && text.charCodeAt(pos) === 46) {\r\n      pos++;\r\n      if (pos < text.length && isDigit(text.charCodeAt(pos))) {\r\n        pos++;\r\n        while (pos < text.length && isDigit(text.charCodeAt(pos))) {\r\n          pos++;\r\n        }\r\n      } else {\r\n        scanError = 3;\r\n        return text.substring(start, pos);\r\n      }\r\n    }\r\n    let end = pos;\r\n    if (pos < text.length && (text.charCodeAt(pos) === 69 || text.charCodeAt(pos) === 101)) {\r\n      pos++;\r\n      if (pos < text.length && text.charCodeAt(pos) === 43 || text.charCodeAt(pos) === 45) {\r\n        pos++;\r\n      }\r\n      if (pos < text.length && isDigit(text.charCodeAt(pos))) {\r\n        pos++;\r\n        while (pos < text.length && isDigit(text.charCodeAt(pos))) {\r\n          pos++;\r\n        }\r\n        end = pos;\r\n      } else {\r\n        scanError = 3;\r\n      }\r\n    }\r\n    return text.substring(start, end);\r\n  }\r\n  function scanString() {\r\n    let result = \"\", start = pos;\r\n    while (true) {\r\n      if (pos >= len) {\r\n        result += text.substring(start, pos);\r\n        scanError = 2;\r\n        break;\r\n      }\r\n      const ch = text.charCodeAt(pos);\r\n      if (ch === 34) {\r\n        result += text.substring(start, pos);\r\n        pos++;\r\n        break;\r\n      }\r\n      if (ch === 92) {\r\n        result += text.substring(start, pos);\r\n        pos++;\r\n        if (pos >= len) {\r\n          scanError = 2;\r\n          break;\r\n        }\r\n        const ch2 = text.charCodeAt(pos++);\r\n        switch (ch2) {\r\n          case 34:\r\n            result += '\"';\r\n            break;\r\n          case 92:\r\n            result += \"\\\\\";\r\n            break;\r\n          case 47:\r\n            result += \"/\";\r\n            break;\r\n          case 98:\r\n            result += \"\\b\";\r\n            break;\r\n          case 102:\r\n            result += \"\\f\";\r\n            break;\r\n          case 110:\r\n            result += \"\\n\";\r\n            break;\r\n          case 114:\r\n            result += \"\\r\";\r\n            break;\r\n          case 116:\r\n            result += \"\t\";\r\n            break;\r\n          case 117:\r\n            const ch3 = scanHexDigits(4, true);\r\n            if (ch3 >= 0) {\r\n              result += String.fromCharCode(ch3);\r\n            } else {\r\n              scanError = 4;\r\n            }\r\n            break;\r\n          default:\r\n            scanError = 5;\r\n        }\r\n        start = pos;\r\n        continue;\r\n      }\r\n      if (ch >= 0 && ch <= 31) {\r\n        if (isLineBreak(ch)) {\r\n          result += text.substring(start, pos);\r\n          scanError = 2;\r\n          break;\r\n        } else {\r\n          scanError = 6;\r\n        }\r\n      }\r\n      pos++;\r\n    }\r\n    return result;\r\n  }\r\n  function scanNext() {\r\n    value = \"\";\r\n    scanError = 0;\r\n    tokenOffset = pos;\r\n    lineStartOffset = lineNumber;\r\n    prevTokenLineStartOffset = tokenLineStartOffset;\r\n    if (pos >= len) {\r\n      tokenOffset = len;\r\n      return token = 17;\r\n    }\r\n    let code = text.charCodeAt(pos);\r\n    if (isWhiteSpace(code)) {\r\n      do {\r\n        pos++;\r\n        value += String.fromCharCode(code);\r\n        code = text.charCodeAt(pos);\r\n      } while (isWhiteSpace(code));\r\n      return token = 15;\r\n    }\r\n    if (isLineBreak(code)) {\r\n      pos++;\r\n      value += String.fromCharCode(code);\r\n      if (code === 13 && text.charCodeAt(pos) === 10) {\r\n        pos++;\r\n        value += \"\\n\";\r\n      }\r\n      lineNumber++;\r\n      tokenLineStartOffset = pos;\r\n      return token = 14;\r\n    }\r\n    switch (code) {\r\n      case 123:\r\n        pos++;\r\n        return token = 1;\r\n      case 125:\r\n        pos++;\r\n        return token = 2;\r\n      case 91:\r\n        pos++;\r\n        return token = 3;\r\n      case 93:\r\n        pos++;\r\n        return token = 4;\r\n      case 58:\r\n        pos++;\r\n        return token = 6;\r\n      case 44:\r\n        pos++;\r\n        return token = 5;\r\n      case 34:\r\n        pos++;\r\n        value = scanString();\r\n        return token = 10;\r\n      case 47:\r\n        const start = pos - 1;\r\n        if (text.charCodeAt(pos + 1) === 47) {\r\n          pos += 2;\r\n          while (pos < len) {\r\n            if (isLineBreak(text.charCodeAt(pos))) {\r\n              break;\r\n            }\r\n            pos++;\r\n          }\r\n          value = text.substring(start, pos);\r\n          return token = 12;\r\n        }\r\n        if (text.charCodeAt(pos + 1) === 42) {\r\n          pos += 2;\r\n          const safeLength = len - 1;\r\n          let commentClosed = false;\r\n          while (pos < safeLength) {\r\n            const ch = text.charCodeAt(pos);\r\n            if (ch === 42 && text.charCodeAt(pos + 1) === 47) {\r\n              pos += 2;\r\n              commentClosed = true;\r\n              break;\r\n            }\r\n            pos++;\r\n            if (isLineBreak(ch)) {\r\n              if (ch === 13 && text.charCodeAt(pos) === 10) {\r\n                pos++;\r\n              }\r\n              lineNumber++;\r\n              tokenLineStartOffset = pos;\r\n            }\r\n          }\r\n          if (!commentClosed) {\r\n            pos++;\r\n            scanError = 1;\r\n          }\r\n          value = text.substring(start, pos);\r\n          return token = 13;\r\n        }\r\n        value += String.fromCharCode(code);\r\n        pos++;\r\n        return token = 16;\r\n      case 45:\r\n        value += String.fromCharCode(code);\r\n        pos++;\r\n        if (pos === len || !isDigit(text.charCodeAt(pos))) {\r\n          return token = 16;\r\n        }\r\n      case 48:\r\n      case 49:\r\n      case 50:\r\n      case 51:\r\n      case 52:\r\n      case 53:\r\n      case 54:\r\n      case 55:\r\n      case 56:\r\n      case 57:\r\n        value += scanNumber();\r\n        return token = 11;\r\n      default:\r\n        while (pos < len && isUnknownContentCharacter(code)) {\r\n          pos++;\r\n          code = text.charCodeAt(pos);\r\n        }\r\n        if (tokenOffset !== pos) {\r\n          value = text.substring(tokenOffset, pos);\r\n          switch (value) {\r\n            case \"true\":\r\n              return token = 8;\r\n            case \"false\":\r\n              return token = 9;\r\n            case \"null\":\r\n              return token = 7;\r\n          }\r\n          return token = 16;\r\n        }\r\n        value += String.fromCharCode(code);\r\n        pos++;\r\n        return token = 16;\r\n    }\r\n  }\r\n  function isUnknownContentCharacter(code) {\r\n    if (isWhiteSpace(code) || isLineBreak(code)) {\r\n      return false;\r\n    }\r\n    switch (code) {\r\n      case 125:\r\n      case 93:\r\n      case 123:\r\n      case 91:\r\n      case 34:\r\n      case 58:\r\n      case 44:\r\n      case 47:\r\n        return false;\r\n    }\r\n    return true;\r\n  }\r\n  function scanNextNonTrivia() {\r\n    let result;\r\n    do {\r\n      result = scanNext();\r\n    } while (result >= 12 && result <= 15);\r\n    return result;\r\n  }\r\n  return {\r\n    setPosition,\r\n    getPosition: () => pos,\r\n    scan: ignoreTrivia ? scanNextNonTrivia : scanNext,\r\n    getToken: () => token,\r\n    getTokenValue: () => value,\r\n    getTokenOffset: () => tokenOffset,\r\n    getTokenLength: () => pos - tokenOffset,\r\n    getTokenStartLine: () => lineStartOffset,\r\n    getTokenStartCharacter: () => tokenOffset - prevTokenLineStartOffset,\r\n    getTokenError: () => scanError\r\n  };\r\n}\r\nfunction isWhiteSpace(ch) {\r\n  return ch === 32 || ch === 9;\r\n}\r\nfunction isLineBreak(ch) {\r\n  return ch === 10 || ch === 13;\r\n}\r\nfunction isDigit(ch) {\r\n  return ch >= 48 && ch <= 57;\r\n}\r\nvar CharacterCodes;\r\n(function(CharacterCodes2) {\r\n  CharacterCodes2[CharacterCodes2[\"lineFeed\"] = 10] = \"lineFeed\";\r\n  CharacterCodes2[CharacterCodes2[\"carriageReturn\"] = 13] = \"carriageReturn\";\r\n  CharacterCodes2[CharacterCodes2[\"space\"] = 32] = \"space\";\r\n  CharacterCodes2[CharacterCodes2[\"_0\"] = 48] = \"_0\";\r\n  CharacterCodes2[CharacterCodes2[\"_1\"] = 49] = \"_1\";\r\n  CharacterCodes2[CharacterCodes2[\"_2\"] = 50] = \"_2\";\r\n  CharacterCodes2[CharacterCodes2[\"_3\"] = 51] = \"_3\";\r\n  CharacterCodes2[CharacterCodes2[\"_4\"] = 52] = \"_4\";\r\n  CharacterCodes2[CharacterCodes2[\"_5\"] = 53] = \"_5\";\r\n  CharacterCodes2[CharacterCodes2[\"_6\"] = 54] = \"_6\";\r\n  CharacterCodes2[CharacterCodes2[\"_7\"] = 55] = \"_7\";\r\n  CharacterCodes2[CharacterCodes2[\"_8\"] = 56] = \"_8\";\r\n  CharacterCodes2[CharacterCodes2[\"_9\"] = 57] = \"_9\";\r\n  CharacterCodes2[CharacterCodes2[\"a\"] = 97] = \"a\";\r\n  CharacterCodes2[CharacterCodes2[\"b\"] = 98] = \"b\";\r\n  CharacterCodes2[CharacterCodes2[\"c\"] = 99] = \"c\";\r\n  CharacterCodes2[CharacterCodes2[\"d\"] = 100] = \"d\";\r\n  CharacterCodes2[CharacterCodes2[\"e\"] = 101] = \"e\";\r\n  CharacterCodes2[CharacterCodes2[\"f\"] = 102] = \"f\";\r\n  CharacterCodes2[CharacterCodes2[\"g\"] = 103] = \"g\";\r\n  CharacterCodes2[CharacterCodes2[\"h\"] = 104] = \"h\";\r\n  CharacterCodes2[CharacterCodes2[\"i\"] = 105] = \"i\";\r\n  CharacterCodes2[CharacterCodes2[\"j\"] = 106] = \"j\";\r\n  CharacterCodes2[CharacterCodes2[\"k\"] = 107] = \"k\";\r\n  CharacterCodes2[CharacterCodes2[\"l\"] = 108] = \"l\";\r\n  CharacterCodes2[CharacterCodes2[\"m\"] = 109] = \"m\";\r\n  CharacterCodes2[CharacterCodes2[\"n\"] = 110] = \"n\";\r\n  CharacterCodes2[CharacterCodes2[\"o\"] = 111] = \"o\";\r\n  CharacterCodes2[CharacterCodes2[\"p\"] = 112] = \"p\";\r\n  CharacterCodes2[CharacterCodes2[\"q\"] = 113] = \"q\";\r\n  CharacterCodes2[CharacterCodes2[\"r\"] = 114] = \"r\";\r\n  CharacterCodes2[CharacterCodes2[\"s\"] = 115] = \"s\";\r\n  CharacterCodes2[CharacterCodes2[\"t\"] = 116] = \"t\";\r\n  CharacterCodes2[CharacterCodes2[\"u\"] = 117] = \"u\";\r\n  CharacterCodes2[CharacterCodes2[\"v\"] = 118] = \"v\";\r\n  CharacterCodes2[CharacterCodes2[\"w\"] = 119] = \"w\";\r\n  CharacterCodes2[CharacterCodes2[\"x\"] = 120] = \"x\";\r\n  CharacterCodes2[CharacterCodes2[\"y\"] = 121] = \"y\";\r\n  CharacterCodes2[CharacterCodes2[\"z\"] = 122] = \"z\";\r\n  CharacterCodes2[CharacterCodes2[\"A\"] = 65] = \"A\";\r\n  CharacterCodes2[CharacterCodes2[\"B\"] = 66] = \"B\";\r\n  CharacterCodes2[CharacterCodes2[\"C\"] = 67] = \"C\";\r\n  CharacterCodes2[CharacterCodes2[\"D\"] = 68] = \"D\";\r\n  CharacterCodes2[CharacterCodes2[\"E\"] = 69] = \"E\";\r\n  CharacterCodes2[CharacterCodes2[\"F\"] = 70] = \"F\";\r\n  CharacterCodes2[CharacterCodes2[\"G\"] = 71] = \"G\";\r\n  CharacterCodes2[CharacterCodes2[\"H\"] = 72] = \"H\";\r\n  CharacterCodes2[CharacterCodes2[\"I\"] = 73] = \"I\";\r\n  CharacterCodes2[CharacterCodes2[\"J\"] = 74] = \"J\";\r\n  CharacterCodes2[CharacterCodes2[\"K\"] = 75] = \"K\";\r\n  CharacterCodes2[CharacterCodes2[\"L\"] = 76] = \"L\";\r\n  CharacterCodes2[CharacterCodes2[\"M\"] = 77] = \"M\";\r\n  CharacterCodes2[CharacterCodes2[\"N\"] = 78] = \"N\";\r\n  CharacterCodes2[CharacterCodes2[\"O\"] = 79] = \"O\";\r\n  CharacterCodes2[CharacterCodes2[\"P\"] = 80] = \"P\";\r\n  CharacterCodes2[CharacterCodes2[\"Q\"] = 81] = \"Q\";\r\n  CharacterCodes2[CharacterCodes2[\"R\"] = 82] = \"R\";\r\n  CharacterCodes2[CharacterCodes2[\"S\"] = 83] = \"S\";\r\n  CharacterCodes2[CharacterCodes2[\"T\"] = 84] = \"T\";\r\n  CharacterCodes2[CharacterCodes2[\"U\"] = 85] = \"U\";\r\n  CharacterCodes2[CharacterCodes2[\"V\"] = 86] = \"V\";\r\n  CharacterCodes2[CharacterCodes2[\"W\"] = 87] = \"W\";\r\n  CharacterCodes2[CharacterCodes2[\"X\"] = 88] = \"X\";\r\n  CharacterCodes2[CharacterCodes2[\"Y\"] = 89] = \"Y\";\r\n  CharacterCodes2[CharacterCodes2[\"Z\"] = 90] = \"Z\";\r\n  CharacterCodes2[CharacterCodes2[\"asterisk\"] = 42] = \"asterisk\";\r\n  CharacterCodes2[CharacterCodes2[\"backslash\"] = 92] = \"backslash\";\r\n  CharacterCodes2[CharacterCodes2[\"closeBrace\"] = 125] = \"closeBrace\";\r\n  CharacterCodes2[CharacterCodes2[\"closeBracket\"] = 93] = \"closeBracket\";\r\n  CharacterCodes2[CharacterCodes2[\"colon\"] = 58] = \"colon\";\r\n  CharacterCodes2[CharacterCodes2[\"comma\"] = 44] = \"comma\";\r\n  CharacterCodes2[CharacterCodes2[\"dot\"] = 46] = \"dot\";\r\n  CharacterCodes2[CharacterCodes2[\"doubleQuote\"] = 34] = \"doubleQuote\";\r\n  CharacterCodes2[CharacterCodes2[\"minus\"] = 45] = \"minus\";\r\n  CharacterCodes2[CharacterCodes2[\"openBrace\"] = 123] = \"openBrace\";\r\n  CharacterCodes2[CharacterCodes2[\"openBracket\"] = 91] = \"openBracket\";\r\n  CharacterCodes2[CharacterCodes2[\"plus\"] = 43] = \"plus\";\r\n  CharacterCodes2[CharacterCodes2[\"slash\"] = 47] = \"slash\";\r\n  CharacterCodes2[CharacterCodes2[\"formFeed\"] = 12] = \"formFeed\";\r\n  CharacterCodes2[CharacterCodes2[\"tab\"] = 9] = \"tab\";\r\n})(CharacterCodes || (CharacterCodes = {}));\r\n\r\n// node_modules/jsonc-parser/lib/esm/impl/string-intern.js\r\nvar cachedSpaces = new Array(20).fill(0).map((_, index) => {\r\n  return \" \".repeat(index);\r\n});\r\nvar maxCachedValues = 200;\r\nvar cachedBreakLinesWithSpaces = {\r\n  \" \": {\r\n    \"\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\r\n      return \"\\n\" + \" \".repeat(index);\r\n    }),\r\n    \"\\r\": new Array(maxCachedValues).fill(0).map((_, index) => {\r\n      return \"\\r\" + \" \".repeat(index);\r\n    }),\r\n    \"\\r\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\r\n      return \"\\r\\n\" + \" \".repeat(index);\r\n    })\r\n  },\r\n  \"\t\": {\r\n    \"\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\r\n      return \"\\n\" + \"\t\".repeat(index);\r\n    }),\r\n    \"\\r\": new Array(maxCachedValues).fill(0).map((_, index) => {\r\n      return \"\\r\" + \"\t\".repeat(index);\r\n    }),\r\n    \"\\r\\n\": new Array(maxCachedValues).fill(0).map((_, index) => {\r\n      return \"\\r\\n\" + \"\t\".repeat(index);\r\n    })\r\n  }\r\n};\r\n\r\n// node_modules/jsonc-parser/lib/esm/impl/parser.js\r\nvar ParseOptions;\r\n(function(ParseOptions2) {\r\n  ParseOptions2.DEFAULT = {\r\n    allowTrailingComma: false\r\n  };\r\n})(ParseOptions || (ParseOptions = {}));\r\n\r\n// node_modules/jsonc-parser/lib/esm/main.js\r\nvar createScanner2 = createScanner;\r\nvar ScanError;\r\n(function(ScanError2) {\r\n  ScanError2[ScanError2[\"None\"] = 0] = \"None\";\r\n  ScanError2[ScanError2[\"UnexpectedEndOfComment\"] = 1] = \"UnexpectedEndOfComment\";\r\n  ScanError2[ScanError2[\"UnexpectedEndOfString\"] = 2] = \"UnexpectedEndOfString\";\r\n  ScanError2[ScanError2[\"UnexpectedEndOfNumber\"] = 3] = \"UnexpectedEndOfNumber\";\r\n  ScanError2[ScanError2[\"InvalidUnicode\"] = 4] = \"InvalidUnicode\";\r\n  ScanError2[ScanError2[\"InvalidEscapeCharacter\"] = 5] = \"InvalidEscapeCharacter\";\r\n  ScanError2[ScanError2[\"InvalidCharacter\"] = 6] = \"InvalidCharacter\";\r\n})(ScanError || (ScanError = {}));\r\nvar SyntaxKind;\r\n(function(SyntaxKind2) {\r\n  SyntaxKind2[SyntaxKind2[\"OpenBraceToken\"] = 1] = \"OpenBraceToken\";\r\n  SyntaxKind2[SyntaxKind2[\"CloseBraceToken\"] = 2] = \"CloseBraceToken\";\r\n  SyntaxKind2[SyntaxKind2[\"OpenBracketToken\"] = 3] = \"OpenBracketToken\";\r\n  SyntaxKind2[SyntaxKind2[\"CloseBracketToken\"] = 4] = \"CloseBracketToken\";\r\n  SyntaxKind2[SyntaxKind2[\"CommaToken\"] = 5] = \"CommaToken\";\r\n  SyntaxKind2[SyntaxKind2[\"ColonToken\"] = 6] = \"ColonToken\";\r\n  SyntaxKind2[SyntaxKind2[\"NullKeyword\"] = 7] = \"NullKeyword\";\r\n  SyntaxKind2[SyntaxKind2[\"TrueKeyword\"] = 8] = \"TrueKeyword\";\r\n  SyntaxKind2[SyntaxKind2[\"FalseKeyword\"] = 9] = \"FalseKeyword\";\r\n  SyntaxKind2[SyntaxKind2[\"StringLiteral\"] = 10] = \"StringLiteral\";\r\n  SyntaxKind2[SyntaxKind2[\"NumericLiteral\"] = 11] = \"NumericLiteral\";\r\n  SyntaxKind2[SyntaxKind2[\"LineCommentTrivia\"] = 12] = \"LineCommentTrivia\";\r\n  SyntaxKind2[SyntaxKind2[\"BlockCommentTrivia\"] = 13] = \"BlockCommentTrivia\";\r\n  SyntaxKind2[SyntaxKind2[\"LineBreakTrivia\"] = 14] = \"LineBreakTrivia\";\r\n  SyntaxKind2[SyntaxKind2[\"Trivia\"] = 15] = \"Trivia\";\r\n  SyntaxKind2[SyntaxKind2[\"Unknown\"] = 16] = \"Unknown\";\r\n  SyntaxKind2[SyntaxKind2[\"EOF\"] = 17] = \"EOF\";\r\n})(SyntaxKind || (SyntaxKind = {}));\r\nvar ParseErrorCode;\r\n(function(ParseErrorCode2) {\r\n  ParseErrorCode2[ParseErrorCode2[\"InvalidSymbol\"] = 1] = \"InvalidSymbol\";\r\n  ParseErrorCode2[ParseErrorCode2[\"InvalidNumberFormat\"] = 2] = \"InvalidNumberFormat\";\r\n  ParseErrorCode2[ParseErrorCode2[\"PropertyNameExpected\"] = 3] = \"PropertyNameExpected\";\r\n  ParseErrorCode2[ParseErrorCode2[\"ValueExpected\"] = 4] = \"ValueExpected\";\r\n  ParseErrorCode2[ParseErrorCode2[\"ColonExpected\"] = 5] = \"ColonExpected\";\r\n  ParseErrorCode2[ParseErrorCode2[\"CommaExpected\"] = 6] = \"CommaExpected\";\r\n  ParseErrorCode2[ParseErrorCode2[\"CloseBraceExpected\"] = 7] = \"CloseBraceExpected\";\r\n  ParseErrorCode2[ParseErrorCode2[\"CloseBracketExpected\"] = 8] = \"CloseBracketExpected\";\r\n  ParseErrorCode2[ParseErrorCode2[\"EndOfFileExpected\"] = 9] = \"EndOfFileExpected\";\r\n  ParseErrorCode2[ParseErrorCode2[\"InvalidCommentToken\"] = 10] = \"InvalidCommentToken\";\r\n  ParseErrorCode2[ParseErrorCode2[\"UnexpectedEndOfComment\"] = 11] = \"UnexpectedEndOfComment\";\r\n  ParseErrorCode2[ParseErrorCode2[\"UnexpectedEndOfString\"] = 12] = \"UnexpectedEndOfString\";\r\n  ParseErrorCode2[ParseErrorCode2[\"UnexpectedEndOfNumber\"] = 13] = \"UnexpectedEndOfNumber\";\r\n  ParseErrorCode2[ParseErrorCode2[\"InvalidUnicode\"] = 14] = \"InvalidUnicode\";\r\n  ParseErrorCode2[ParseErrorCode2[\"InvalidEscapeCharacter\"] = 15] = \"InvalidEscapeCharacter\";\r\n  ParseErrorCode2[ParseErrorCode2[\"InvalidCharacter\"] = 16] = \"InvalidCharacter\";\r\n})(ParseErrorCode || (ParseErrorCode = {}));\r\n\r\n// src/language/json/tokenization.ts\r\nfunction createTokenizationSupport(supportComments) {\r\n  return {\r\n    getInitialState: () => new JSONState(null, null, false, null),\r\n    tokenize: (line, state) => tokenize(supportComments, line, state)\r\n  };\r\n}\r\nvar TOKEN_DELIM_OBJECT = \"delimiter.bracket.json\";\r\nvar TOKEN_DELIM_ARRAY = \"delimiter.array.json\";\r\nvar TOKEN_DELIM_COLON = \"delimiter.colon.json\";\r\nvar TOKEN_DELIM_COMMA = \"delimiter.comma.json\";\r\nvar TOKEN_VALUE_BOOLEAN = \"keyword.json\";\r\nvar TOKEN_VALUE_NULL = \"keyword.json\";\r\nvar TOKEN_VALUE_STRING = \"string.value.json\";\r\nvar TOKEN_VALUE_NUMBER = \"number.json\";\r\nvar TOKEN_PROPERTY_NAME = \"string.key.json\";\r\nvar TOKEN_COMMENT_BLOCK = \"comment.block.json\";\r\nvar TOKEN_COMMENT_LINE = \"comment.line.json\";\r\nvar ParentsStack = class _ParentsStack {\r\n  constructor(parent, type) {\r\n    this.parent = parent;\r\n    this.type = type;\r\n  }\r\n  static pop(parents) {\r\n    if (parents) {\r\n      return parents.parent;\r\n    }\r\n    return null;\r\n  }\r\n  static push(parents, type) {\r\n    return new _ParentsStack(parents, type);\r\n  }\r\n  static equals(a, b) {\r\n    if (!a && !b) {\r\n      return true;\r\n    }\r\n    if (!a || !b) {\r\n      return false;\r\n    }\r\n    while (a && b) {\r\n      if (a === b) {\r\n        return true;\r\n      }\r\n      if (a.type !== b.type) {\r\n        return false;\r\n      }\r\n      a = a.parent;\r\n      b = b.parent;\r\n    }\r\n    return true;\r\n  }\r\n};\r\nvar JSONState = class _JSONState {\r\n  constructor(state, scanError, lastWasColon, parents) {\r\n    this._state = state;\r\n    this.scanError = scanError;\r\n    this.lastWasColon = lastWasColon;\r\n    this.parents = parents;\r\n  }\r\n  clone() {\r\n    return new _JSONState(this._state, this.scanError, this.lastWasColon, this.parents);\r\n  }\r\n  equals(other) {\r\n    if (other === this) {\r\n      return true;\r\n    }\r\n    if (!other || !(other instanceof _JSONState)) {\r\n      return false;\r\n    }\r\n    return this.scanError === other.scanError && this.lastWasColon === other.lastWasColon && ParentsStack.equals(this.parents, other.parents);\r\n  }\r\n  getStateData() {\r\n    return this._state;\r\n  }\r\n  setStateData(state) {\r\n    this._state = state;\r\n  }\r\n};\r\nfunction tokenize(comments, line, state, offsetDelta = 0) {\r\n  let numberOfInsertedCharacters = 0;\r\n  let adjustOffset = false;\r\n  switch (state.scanError) {\r\n    case 2 /* UnexpectedEndOfString */:\r\n      line = '\"' + line;\r\n      numberOfInsertedCharacters = 1;\r\n      break;\r\n    case 1 /* UnexpectedEndOfComment */:\r\n      line = \"/*\" + line;\r\n      numberOfInsertedCharacters = 2;\r\n      break;\r\n  }\r\n  const scanner = createScanner2(line);\r\n  let lastWasColon = state.lastWasColon;\r\n  let parents = state.parents;\r\n  const ret = {\r\n    tokens: [],\r\n    endState: state.clone()\r\n  };\r\n  while (true) {\r\n    let offset = offsetDelta + scanner.getPosition();\r\n    let type = \"\";\r\n    const kind = scanner.scan();\r\n    if (kind === 17 /* EOF */) {\r\n      break;\r\n    }\r\n    if (offset === offsetDelta + scanner.getPosition()) {\r\n      throw new Error(\r\n        \"Scanner did not advance, next 3 characters are: \" + line.substr(scanner.getPosition(), 3)\r\n      );\r\n    }\r\n    if (adjustOffset) {\r\n      offset -= numberOfInsertedCharacters;\r\n    }\r\n    adjustOffset = numberOfInsertedCharacters > 0;\r\n    switch (kind) {\r\n      case 1 /* OpenBraceToken */:\r\n        parents = ParentsStack.push(parents, 0 /* Object */);\r\n        type = TOKEN_DELIM_OBJECT;\r\n        lastWasColon = false;\r\n        break;\r\n      case 2 /* CloseBraceToken */:\r\n        parents = ParentsStack.pop(parents);\r\n        type = TOKEN_DELIM_OBJECT;\r\n        lastWasColon = false;\r\n        break;\r\n      case 3 /* OpenBracketToken */:\r\n        parents = ParentsStack.push(parents, 1 /* Array */);\r\n        type = TOKEN_DELIM_ARRAY;\r\n        lastWasColon = false;\r\n        break;\r\n      case 4 /* CloseBracketToken */:\r\n        parents = ParentsStack.pop(parents);\r\n        type = TOKEN_DELIM_ARRAY;\r\n        lastWasColon = false;\r\n        break;\r\n      case 6 /* ColonToken */:\r\n        type = TOKEN_DELIM_COLON;\r\n        lastWasColon = true;\r\n        break;\r\n      case 5 /* CommaToken */:\r\n        type = TOKEN_DELIM_COMMA;\r\n        lastWasColon = false;\r\n        break;\r\n      case 8 /* TrueKeyword */:\r\n      case 9 /* FalseKeyword */:\r\n        type = TOKEN_VALUE_BOOLEAN;\r\n        lastWasColon = false;\r\n        break;\r\n      case 7 /* NullKeyword */:\r\n        type = TOKEN_VALUE_NULL;\r\n        lastWasColon = false;\r\n        break;\r\n      case 10 /* StringLiteral */:\r\n        const currentParent = parents ? parents.type : 0 /* Object */;\r\n        const inArray = currentParent === 1 /* Array */;\r\n        type = lastWasColon || inArray ? TOKEN_VALUE_STRING : TOKEN_PROPERTY_NAME;\r\n        lastWasColon = false;\r\n        break;\r\n      case 11 /* NumericLiteral */:\r\n        type = TOKEN_VALUE_NUMBER;\r\n        lastWasColon = false;\r\n        break;\r\n    }\r\n    if (comments) {\r\n      switch (kind) {\r\n        case 12 /* LineCommentTrivia */:\r\n          type = TOKEN_COMMENT_LINE;\r\n          break;\r\n        case 13 /* BlockCommentTrivia */:\r\n          type = TOKEN_COMMENT_BLOCK;\r\n          break;\r\n      }\r\n    }\r\n    ret.endState = new JSONState(\r\n      state.getStateData(),\r\n      scanner.getTokenError(),\r\n      lastWasColon,\r\n      parents\r\n    );\r\n    ret.tokens.push({\r\n      startIndex: offset,\r\n      scopes: type\r\n    });\r\n  }\r\n  return ret;\r\n}\r\n\r\n// src/language/json/jsonMode.ts\r\nvar worker;\r\nfunction getWorker() {\r\n  return new Promise((resolve, reject) => {\r\n    if (!worker) {\r\n      return reject(\"JSON not registered!\");\r\n    }\r\n    resolve(worker);\r\n  });\r\n}\r\nvar JSONDiagnosticsAdapter = class extends DiagnosticsAdapter {\r\n  constructor(languageId, worker2, defaults) {\r\n    super(languageId, worker2, defaults.onDidChange);\r\n    this._disposables.push(\r\n      monaco_editor_core_exports.editor.onWillDisposeModel((model) => {\r\n        this._resetSchema(model.uri);\r\n      })\r\n    );\r\n    this._disposables.push(\r\n      monaco_editor_core_exports.editor.onDidChangeModelLanguage((event) => {\r\n        this._resetSchema(event.model.uri);\r\n      })\r\n    );\r\n  }\r\n  _resetSchema(resource) {\r\n    this._worker().then((worker2) => {\r\n      worker2.resetSchema(resource.toString());\r\n    });\r\n  }\r\n};\r\nfunction setupMode(defaults) {\r\n  const disposables = [];\r\n  const providers = [];\r\n  const client = new WorkerManager(defaults);\r\n  disposables.push(client);\r\n  worker = (...uris) => {\r\n    return client.getLanguageServiceWorker(...uris);\r\n  };\r\n  function registerProviders() {\r\n    const { languageId, modeConfiguration: modeConfiguration2 } = defaults;\r\n    disposeAll(providers);\r\n    if (modeConfiguration2.documentFormattingEdits) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerDocumentFormattingEditProvider(\r\n          languageId,\r\n          new DocumentFormattingEditProvider(worker)\r\n        )\r\n      );\r\n    }\r\n    if (modeConfiguration2.documentRangeFormattingEdits) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerDocumentRangeFormattingEditProvider(\r\n          languageId,\r\n          new DocumentRangeFormattingEditProvider(worker)\r\n        )\r\n      );\r\n    }\r\n    if (modeConfiguration2.completionItems) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerCompletionItemProvider(\r\n          languageId,\r\n          new CompletionAdapter(worker, [\" \", \":\", '\"'])\r\n        )\r\n      );\r\n    }\r\n    if (modeConfiguration2.hovers) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerHoverProvider(languageId, new HoverAdapter(worker))\r\n      );\r\n    }\r\n    if (modeConfiguration2.documentSymbols) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerDocumentSymbolProvider(\r\n          languageId,\r\n          new DocumentSymbolAdapter(worker)\r\n        )\r\n      );\r\n    }\r\n    if (modeConfiguration2.tokens) {\r\n      providers.push(monaco_editor_core_exports.languages.setTokensProvider(languageId, createTokenizationSupport(true)));\r\n    }\r\n    if (modeConfiguration2.colors) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerColorProvider(\r\n          languageId,\r\n          new DocumentColorAdapter(worker)\r\n        )\r\n      );\r\n    }\r\n    if (modeConfiguration2.foldingRanges) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerFoldingRangeProvider(\r\n          languageId,\r\n          new FoldingRangeAdapter(worker)\r\n        )\r\n      );\r\n    }\r\n    if (modeConfiguration2.diagnostics) {\r\n      providers.push(new JSONDiagnosticsAdapter(languageId, worker, defaults));\r\n    }\r\n    if (modeConfiguration2.selectionRanges) {\r\n      providers.push(\r\n        monaco_editor_core_exports.languages.registerSelectionRangeProvider(\r\n          languageId,\r\n          new SelectionRangeAdapter(worker)\r\n        )\r\n      );\r\n    }\r\n  }\r\n  registerProviders();\r\n  disposables.push(monaco_editor_core_exports.languages.setLanguageConfiguration(defaults.languageId, richEditConfiguration));\r\n  let modeConfiguration = defaults.modeConfiguration;\r\n  defaults.onDidChange((newDefaults) => {\r\n    if (newDefaults.modeConfiguration !== modeConfiguration) {\r\n      modeConfiguration = newDefaults.modeConfiguration;\r\n      registerProviders();\r\n    }\r\n  });\r\n  disposables.push(asDisposable(providers));\r\n  return asDisposable(disposables);\r\n}\r\nfunction asDisposable(disposables) {\r\n  return { dispose: () => disposeAll(disposables) };\r\n}\r\nfunction disposeAll(disposables) {\r\n  while (disposables.length) {\r\n    disposables.pop().dispose();\r\n  }\r\n}\r\nvar richEditConfiguration = {\r\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\[\\{\\]\\}\\:\\\"\\,\\s]+)/g,\r\n  comments: {\r\n    lineComment: \"//\",\r\n    blockComment: [\"/*\", \"*/\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\", notIn: [\"string\"] },\r\n    { open: \"[\", close: \"]\", notIn: [\"string\"] },\r\n    { open: '\"', close: '\"', notIn: [\"string\"] }\r\n  ]\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/language/json/jsonMode.js\n");

/***/ })

}]);