"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["vendors-node_modules_monaco-editor_esm_vs_basic-languages_php_php_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/php/php.js":
/*!**********************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/php/php.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n\r\n// src/basic-languages/php/php.ts\r\nvar conf = {\r\n  wordPattern: /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g,\r\n  comments: {\r\n    lineComment: \"//\",\r\n    blockComment: [\"/*\", \"*/\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\", notIn: [\"string\"] },\r\n    { open: \"[\", close: \"]\", notIn: [\"string\"] },\r\n    { open: \"(\", close: \")\", notIn: [\"string\"] },\r\n    { open: '\"', close: '\"', notIn: [\"string\"] },\r\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] }\r\n  ],\r\n  folding: {\r\n    markers: {\r\n      start: new RegExp(\"^\\\\s*(#|//)region\\\\b\"),\r\n      end: new RegExp(\"^\\\\s*(#|//)endregion\\\\b\")\r\n    }\r\n  }\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \"\",\r\n  // ignoreCase: true,\r\n  // The main tokenizer for our languages\r\n  tokenizer: {\r\n    root: [\r\n      [/<\\?((php)|=)?/, { token: \"@rematch\", switchTo: \"@phpInSimpleState.root\" }],\r\n      [/<!DOCTYPE/, \"metatag.html\", \"@doctype\"],\r\n      [/<!--/, \"comment.html\", \"@comment\"],\r\n      [/(<)(\\w+)(\\/>)/, [\"delimiter.html\", \"tag.html\", \"delimiter.html\"]],\r\n      [/(<)(script)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@script\" }]],\r\n      [/(<)(style)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@style\" }]],\r\n      [/(<)([:\\w]+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\r\n      [/(<\\/)(\\w+)/, [\"delimiter.html\", { token: \"tag.html\", next: \"@otherTag\" }]],\r\n      [/</, \"delimiter.html\"],\r\n      [/[^<]+/]\r\n      // text\r\n    ],\r\n    doctype: [\r\n      [/<\\?((php)|=)?/, { token: \"@rematch\", switchTo: \"@phpInSimpleState.comment\" }],\r\n      [/[^>]+/, \"metatag.content.html\"],\r\n      [/>/, \"metatag.html\", \"@pop\"]\r\n    ],\r\n    comment: [\r\n      [/<\\?((php)|=)?/, { token: \"@rematch\", switchTo: \"@phpInSimpleState.comment\" }],\r\n      [/-->/, \"comment.html\", \"@pop\"],\r\n      [/[^-]+/, \"comment.content.html\"],\r\n      [/./, \"comment.content.html\"]\r\n    ],\r\n    otherTag: [\r\n      [/<\\?((php)|=)?/, { token: \"@rematch\", switchTo: \"@phpInSimpleState.otherTag\" }],\r\n      [/\\/?>/, \"delimiter.html\", \"@pop\"],\r\n      [/\"([^\"]*)\"/, \"attribute.value\"],\r\n      [/'([^']*)'/, \"attribute.value\"],\r\n      [/[\\w\\-]+/, \"attribute.name\"],\r\n      [/=/, \"delimiter\"],\r\n      [/[ \\t\\r\\n]+/]\r\n      // whitespace\r\n    ],\r\n    // -- BEGIN <script> tags handling\r\n    // After <script\r\n    script: [\r\n      [/<\\?((php)|=)?/, { token: \"@rematch\", switchTo: \"@phpInSimpleState.script\" }],\r\n      [/type/, \"attribute.name\", \"@scriptAfterType\"],\r\n      [/\"([^\"]*)\"/, \"attribute.value\"],\r\n      [/'([^']*)'/, \"attribute.value\"],\r\n      [/[\\w\\-]+/, \"attribute.name\"],\r\n      [/=/, \"delimiter\"],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@scriptEmbedded.text/javascript\",\r\n          nextEmbedded: \"text/javascript\"\r\n        }\r\n      ],\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [\r\n        /(<\\/)(script\\s*)(>)/,\r\n        [\"delimiter.html\", \"tag.html\", { token: \"delimiter.html\", next: \"@pop\" }]\r\n      ]\r\n    ],\r\n    // After <script ... type\r\n    scriptAfterType: [\r\n      [\r\n        /<\\?((php)|=)?/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@phpInSimpleState.scriptAfterType\"\r\n        }\r\n      ],\r\n      [/=/, \"delimiter\", \"@scriptAfterTypeEquals\"],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@scriptEmbedded.text/javascript\",\r\n          nextEmbedded: \"text/javascript\"\r\n        }\r\n      ],\r\n      // cover invalid e.g. <script type>\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\r\n    ],\r\n    // After <script ... type =\r\n    scriptAfterTypeEquals: [\r\n      [\r\n        /<\\?((php)|=)?/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@phpInSimpleState.scriptAfterTypeEquals\"\r\n        }\r\n      ],\r\n      [\r\n        /\"([^\"]*)\"/,\r\n        {\r\n          token: \"attribute.value\",\r\n          switchTo: \"@scriptWithCustomType.$1\"\r\n        }\r\n      ],\r\n      [\r\n        /'([^']*)'/,\r\n        {\r\n          token: \"attribute.value\",\r\n          switchTo: \"@scriptWithCustomType.$1\"\r\n        }\r\n      ],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@scriptEmbedded.text/javascript\",\r\n          nextEmbedded: \"text/javascript\"\r\n        }\r\n      ],\r\n      // cover invalid e.g. <script type=>\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\r\n    ],\r\n    // After <script ... type = $S2\r\n    scriptWithCustomType: [\r\n      [\r\n        /<\\?((php)|=)?/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@phpInSimpleState.scriptWithCustomType.$S2\"\r\n        }\r\n      ],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@scriptEmbedded.$S2\",\r\n          nextEmbedded: \"$S2\"\r\n        }\r\n      ],\r\n      [/\"([^\"]*)\"/, \"attribute.value\"],\r\n      [/'([^']*)'/, \"attribute.value\"],\r\n      [/[\\w\\-]+/, \"attribute.name\"],\r\n      [/=/, \"delimiter\"],\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [/<\\/script\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\r\n    ],\r\n    scriptEmbedded: [\r\n      [\r\n        /<\\?((php)|=)?/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@phpInEmbeddedState.scriptEmbedded.$S2\",\r\n          nextEmbedded: \"@pop\"\r\n        }\r\n      ],\r\n      [/<\\/script/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }]\r\n    ],\r\n    // -- END <script> tags handling\r\n    // -- BEGIN <style> tags handling\r\n    // After <style\r\n    style: [\r\n      [/<\\?((php)|=)?/, { token: \"@rematch\", switchTo: \"@phpInSimpleState.style\" }],\r\n      [/type/, \"attribute.name\", \"@styleAfterType\"],\r\n      [/\"([^\"]*)\"/, \"attribute.value\"],\r\n      [/'([^']*)'/, \"attribute.value\"],\r\n      [/[\\w\\-]+/, \"attribute.name\"],\r\n      [/=/, \"delimiter\"],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@styleEmbedded.text/css\",\r\n          nextEmbedded: \"text/css\"\r\n        }\r\n      ],\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [\r\n        /(<\\/)(style\\s*)(>)/,\r\n        [\"delimiter.html\", \"tag.html\", { token: \"delimiter.html\", next: \"@pop\" }]\r\n      ]\r\n    ],\r\n    // After <style ... type\r\n    styleAfterType: [\r\n      [\r\n        /<\\?((php)|=)?/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@phpInSimpleState.styleAfterType\"\r\n        }\r\n      ],\r\n      [/=/, \"delimiter\", \"@styleAfterTypeEquals\"],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@styleEmbedded.text/css\",\r\n          nextEmbedded: \"text/css\"\r\n        }\r\n      ],\r\n      // cover invalid e.g. <style type>\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\r\n    ],\r\n    // After <style ... type =\r\n    styleAfterTypeEquals: [\r\n      [\r\n        /<\\?((php)|=)?/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@phpInSimpleState.styleAfterTypeEquals\"\r\n        }\r\n      ],\r\n      [\r\n        /\"([^\"]*)\"/,\r\n        {\r\n          token: \"attribute.value\",\r\n          switchTo: \"@styleWithCustomType.$1\"\r\n        }\r\n      ],\r\n      [\r\n        /'([^']*)'/,\r\n        {\r\n          token: \"attribute.value\",\r\n          switchTo: \"@styleWithCustomType.$1\"\r\n        }\r\n      ],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@styleEmbedded.text/css\",\r\n          nextEmbedded: \"text/css\"\r\n        }\r\n      ],\r\n      // cover invalid e.g. <style type=>\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\r\n    ],\r\n    // After <style ... type = $S2\r\n    styleWithCustomType: [\r\n      [\r\n        /<\\?((php)|=)?/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@phpInSimpleState.styleWithCustomType.$S2\"\r\n        }\r\n      ],\r\n      [\r\n        />/,\r\n        {\r\n          token: \"delimiter.html\",\r\n          next: \"@styleEmbedded.$S2\",\r\n          nextEmbedded: \"$S2\"\r\n        }\r\n      ],\r\n      [/\"([^\"]*)\"/, \"attribute.value\"],\r\n      [/'([^']*)'/, \"attribute.value\"],\r\n      [/[\\w\\-]+/, \"attribute.name\"],\r\n      [/=/, \"delimiter\"],\r\n      [/[ \\t\\r\\n]+/],\r\n      // whitespace\r\n      [/<\\/style\\s*>/, { token: \"@rematch\", next: \"@pop\" }]\r\n    ],\r\n    styleEmbedded: [\r\n      [\r\n        /<\\?((php)|=)?/,\r\n        {\r\n          token: \"@rematch\",\r\n          switchTo: \"@phpInEmbeddedState.styleEmbedded.$S2\",\r\n          nextEmbedded: \"@pop\"\r\n        }\r\n      ],\r\n      [/<\\/style/, { token: \"@rematch\", next: \"@pop\", nextEmbedded: \"@pop\" }]\r\n    ],\r\n    // -- END <style> tags handling\r\n    phpInSimpleState: [\r\n      [/<\\?((php)|=)?/, \"metatag.php\"],\r\n      [/\\?>/, { token: \"metatag.php\", switchTo: \"@$S2.$S3\" }],\r\n      { include: \"phpRoot\" }\r\n    ],\r\n    phpInEmbeddedState: [\r\n      [/<\\?((php)|=)?/, \"metatag.php\"],\r\n      [\r\n        /\\?>/,\r\n        {\r\n          token: \"metatag.php\",\r\n          switchTo: \"@$S2.$S3\",\r\n          nextEmbedded: \"$S3\"\r\n        }\r\n      ],\r\n      { include: \"phpRoot\" }\r\n    ],\r\n    phpRoot: [\r\n      [\r\n        /[a-zA-Z_]\\w*/,\r\n        {\r\n          cases: {\r\n            \"@phpKeywords\": { token: \"keyword.php\" },\r\n            \"@phpCompileTimeConstants\": { token: \"constant.php\" },\r\n            \"@default\": \"identifier.php\"\r\n          }\r\n        }\r\n      ],\r\n      [\r\n        /[$a-zA-Z_]\\w*/,\r\n        {\r\n          cases: {\r\n            \"@phpPreDefinedVariables\": {\r\n              token: \"variable.predefined.php\"\r\n            },\r\n            \"@default\": \"variable.php\"\r\n          }\r\n        }\r\n      ],\r\n      // brackets\r\n      [/[{}]/, \"delimiter.bracket.php\"],\r\n      [/[\\[\\]]/, \"delimiter.array.php\"],\r\n      [/[()]/, \"delimiter.parenthesis.php\"],\r\n      // whitespace\r\n      [/[ \\t\\r\\n]+/],\r\n      // comments\r\n      [/(#|\\/\\/)$/, \"comment.php\"],\r\n      [/(#|\\/\\/)/, \"comment.php\", \"@phpLineComment\"],\r\n      // block comments\r\n      [/\\/\\*/, \"comment.php\", \"@phpComment\"],\r\n      // strings\r\n      [/\"/, \"string.php\", \"@phpDoubleQuoteString\"],\r\n      [/'/, \"string.php\", \"@phpSingleQuoteString\"],\r\n      // delimiters\r\n      [/[\\+\\-\\*\\%\\&\\|\\^\\~\\!\\=\\<\\>\\/\\?\\;\\:\\.\\,\\@]/, \"delimiter.php\"],\r\n      // numbers\r\n      [/\\d*\\d+[eE]([\\-+]?\\d+)?/, \"number.float.php\"],\r\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float.php\"],\r\n      [/0[xX][0-9a-fA-F']*[0-9a-fA-F]/, \"number.hex.php\"],\r\n      [/0[0-7']*[0-7]/, \"number.octal.php\"],\r\n      [/0[bB][0-1']*[0-1]/, \"number.binary.php\"],\r\n      [/\\d[\\d']*/, \"number.php\"],\r\n      [/\\d/, \"number.php\"]\r\n    ],\r\n    phpComment: [\r\n      [/\\*\\//, \"comment.php\", \"@pop\"],\r\n      [/[^*]+/, \"comment.php\"],\r\n      [/./, \"comment.php\"]\r\n    ],\r\n    phpLineComment: [\r\n      [/\\?>/, { token: \"@rematch\", next: \"@pop\" }],\r\n      [/.$/, \"comment.php\", \"@pop\"],\r\n      [/[^?]+$/, \"comment.php\", \"@pop\"],\r\n      [/[^?]+/, \"comment.php\"],\r\n      [/./, \"comment.php\"]\r\n    ],\r\n    phpDoubleQuoteString: [\r\n      [/[^\\\\\"]+/, \"string.php\"],\r\n      [/@escapes/, \"string.escape.php\"],\r\n      [/\\\\./, \"string.escape.invalid.php\"],\r\n      [/\"/, \"string.php\", \"@pop\"]\r\n    ],\r\n    phpSingleQuoteString: [\r\n      [/[^\\\\']+/, \"string.php\"],\r\n      [/@escapes/, \"string.escape.php\"],\r\n      [/\\\\./, \"string.escape.invalid.php\"],\r\n      [/'/, \"string.php\", \"@pop\"]\r\n    ]\r\n  },\r\n  phpKeywords: [\r\n    \"abstract\",\r\n    \"and\",\r\n    \"array\",\r\n    \"as\",\r\n    \"break\",\r\n    \"callable\",\r\n    \"case\",\r\n    \"catch\",\r\n    \"cfunction\",\r\n    \"class\",\r\n    \"clone\",\r\n    \"const\",\r\n    \"continue\",\r\n    \"declare\",\r\n    \"default\",\r\n    \"do\",\r\n    \"else\",\r\n    \"elseif\",\r\n    \"enddeclare\",\r\n    \"endfor\",\r\n    \"endforeach\",\r\n    \"endif\",\r\n    \"endswitch\",\r\n    \"endwhile\",\r\n    \"extends\",\r\n    \"false\",\r\n    \"final\",\r\n    \"for\",\r\n    \"foreach\",\r\n    \"function\",\r\n    \"global\",\r\n    \"goto\",\r\n    \"if\",\r\n    \"implements\",\r\n    \"interface\",\r\n    \"instanceof\",\r\n    \"insteadof\",\r\n    \"namespace\",\r\n    \"new\",\r\n    \"null\",\r\n    \"object\",\r\n    \"old_function\",\r\n    \"or\",\r\n    \"private\",\r\n    \"protected\",\r\n    \"public\",\r\n    \"resource\",\r\n    \"static\",\r\n    \"switch\",\r\n    \"throw\",\r\n    \"trait\",\r\n    \"try\",\r\n    \"true\",\r\n    \"use\",\r\n    \"var\",\r\n    \"while\",\r\n    \"xor\",\r\n    \"die\",\r\n    \"echo\",\r\n    \"empty\",\r\n    \"exit\",\r\n    \"eval\",\r\n    \"include\",\r\n    \"include_once\",\r\n    \"isset\",\r\n    \"list\",\r\n    \"require\",\r\n    \"require_once\",\r\n    \"return\",\r\n    \"print\",\r\n    \"unset\",\r\n    \"yield\",\r\n    \"__construct\"\r\n  ],\r\n  phpCompileTimeConstants: [\r\n    \"__CLASS__\",\r\n    \"__DIR__\",\r\n    \"__FILE__\",\r\n    \"__LINE__\",\r\n    \"__NAMESPACE__\",\r\n    \"__METHOD__\",\r\n    \"__FUNCTION__\",\r\n    \"__TRAIT__\"\r\n  ],\r\n  phpPreDefinedVariables: [\r\n    \"$GLOBALS\",\r\n    \"$_SERVER\",\r\n    \"$_GET\",\r\n    \"$_POST\",\r\n    \"$_FILES\",\r\n    \"$_REQUEST\",\r\n    \"$_SESSION\",\r\n    \"$_ENV\",\r\n    \"$_COOKIE\",\r\n    \"$php_errormsg\",\r\n    \"$HTTP_RAW_POST_DATA\",\r\n    \"$http_response_header\",\r\n    \"$argc\",\r\n    \"$argv\"\r\n  ],\r\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/php/php.js\n");

/***/ })

}]);