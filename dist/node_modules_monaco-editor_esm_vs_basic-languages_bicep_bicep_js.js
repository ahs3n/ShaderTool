"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_bicep_bicep_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/bicep/bicep.js":
/*!**************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/bicep/bicep.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n\r\n// src/basic-languages/bicep/bicep.ts\r\nvar bounded = (text) => `\\\\b${text}\\\\b`;\r\nvar identifierStart = \"[_a-zA-Z]\";\r\nvar identifierContinue = \"[_a-zA-Z0-9]\";\r\nvar identifier = bounded(`${identifierStart}${identifierContinue}*`);\r\nvar keywords = [\r\n  \"targetScope\",\r\n  \"resource\",\r\n  \"module\",\r\n  \"param\",\r\n  \"var\",\r\n  \"output\",\r\n  \"for\",\r\n  \"in\",\r\n  \"if\",\r\n  \"existing\"\r\n];\r\nvar namedLiterals = [\"true\", \"false\", \"null\"];\r\nvar nonCommentWs = `[ \\\\t\\\\r\\\\n]`;\r\nvar numericLiteral = `[0-9]+`;\r\nvar conf = {\r\n  comments: {\r\n    lineComment: \"//\",\r\n    blockComment: [\"/*\", \"*/\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: \"'\", close: \"'\" },\r\n    { open: \"'''\", close: \"'''\" }\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: \"'\", close: \"'\", notIn: [\"string\", \"comment\"] },\r\n    { open: \"'''\", close: \"'''\", notIn: [\"string\", \"comment\"] }\r\n  ],\r\n  autoCloseBefore: \":.,=}])' \\n\t\",\r\n  indentationRules: {\r\n    increaseIndentPattern: new RegExp(\"^((?!\\\\/\\\\/).)*(\\\\{[^}\\\"'`]*|\\\\([^)\\\"'`]*|\\\\[[^\\\\]\\\"'`]*)$\"),\r\n    decreaseIndentPattern: new RegExp(\"^((?!.*?\\\\/\\\\*).*\\\\*/)?\\\\s*[\\\\}\\\\]].*$\")\r\n  }\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \".bicep\",\r\n  brackets: [\r\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\r\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\r\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" }\r\n  ],\r\n  symbols: /[=><!~?:&|+\\-*/^%]+/,\r\n  keywords,\r\n  namedLiterals,\r\n  escapes: `\\\\\\\\(u{[0-9A-Fa-f]+}|n|r|t|\\\\\\\\|'|\\\\\\${)`,\r\n  tokenizer: {\r\n    root: [{ include: \"@expression\" }, { include: \"@whitespace\" }],\r\n    stringVerbatim: [\r\n      { regex: `(|'|'')[^']`, action: { token: \"string\" } },\r\n      { regex: `'''`, action: { token: \"string.quote\", next: \"@pop\" } }\r\n    ],\r\n    stringLiteral: [\r\n      { regex: `\\\\\\${`, action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } },\r\n      { regex: `[^\\\\\\\\'$]+`, action: { token: \"string\" } },\r\n      { regex: \"@escapes\", action: { token: \"string.escape\" } },\r\n      { regex: `\\\\\\\\.`, action: { token: \"string.escape.invalid\" } },\r\n      { regex: `'`, action: { token: \"string\", next: \"@pop\" } }\r\n    ],\r\n    bracketCounting: [\r\n      { regex: `{`, action: { token: \"delimiter.bracket\", next: \"@bracketCounting\" } },\r\n      { regex: `}`, action: { token: \"delimiter.bracket\", next: \"@pop\" } },\r\n      { include: \"expression\" }\r\n    ],\r\n    comment: [\r\n      { regex: `[^\\\\*]+`, action: { token: \"comment\" } },\r\n      { regex: `\\\\*\\\\/`, action: { token: \"comment\", next: \"@pop\" } },\r\n      { regex: `[\\\\/*]`, action: { token: \"comment\" } }\r\n    ],\r\n    whitespace: [\r\n      { regex: nonCommentWs },\r\n      { regex: `\\\\/\\\\*`, action: { token: \"comment\", next: \"@comment\" } },\r\n      { regex: `\\\\/\\\\/.*$`, action: { token: \"comment\" } }\r\n    ],\r\n    expression: [\r\n      { regex: `'''`, action: { token: \"string.quote\", next: \"@stringVerbatim\" } },\r\n      { regex: `'`, action: { token: \"string.quote\", next: \"@stringLiteral\" } },\r\n      { regex: numericLiteral, action: { token: \"number\" } },\r\n      {\r\n        regex: identifier,\r\n        action: {\r\n          cases: {\r\n            \"@keywords\": { token: \"keyword\" },\r\n            \"@namedLiterals\": { token: \"keyword\" },\r\n            \"@default\": { token: \"identifier\" }\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2JpY2VwL2JpY2VwLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCLEtBQUs7QUFDbkM7QUFDQTtBQUNBLDRCQUE0QixnQkFBZ0IsRUFBRSxtQkFBbUI7QUFDakU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxPQUFPLEtBQUs7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU0sUUFBUSxZQUFZLEdBQUc7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTTtBQUNOO0FBQ0E7QUFDQSxNQUFNLFFBQVEsWUFBWSxHQUFHO0FBQzdCLE1BQU0sdUJBQXVCO0FBQzdCLE1BQU0sdUJBQXVCO0FBQzdCLE1BQU0scURBQXFEO0FBQzNELE1BQU07QUFDTjtBQUNBLHlCQUF5QjtBQUN6QjtBQUNBLDBEQUEwRCxHQUFHO0FBQzdELHNFQUFzRTtBQUN0RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLFFBQVEsWUFBWSw2QkFBNkI7QUFDdkQsTUFBTSxrREFBa0Q7QUFDeEQsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGFBQWEsbUJBQW1CO0FBQ25EO0FBQ0EsYUFBYSx3QkFBd0IsSUFBSSx3QkFBd0I7QUFDakU7QUFDQSxRQUFRLGdDQUFnQyxtQkFBbUI7QUFDM0QsUUFBUSx3QkFBd0I7QUFDaEM7QUFDQTtBQUNBLFFBQVEsYUFBYSxhQUFhLHdEQUF3RDtBQUMxRixRQUFRLCtCQUErQixtQkFBbUI7QUFDMUQsUUFBUSw2QkFBNkIsMEJBQTBCO0FBQy9ELFFBQVEsMEJBQTBCLGtDQUFrQztBQUNwRSxRQUFRLHNCQUFzQjtBQUM5QjtBQUNBO0FBQ0EsUUFBUSxTQUFTLGFBQWEsd0RBQXdEO0FBQ3RGLFFBQVEsU0FBUyxhQUFhLDRDQUE0QztBQUMxRSxRQUFRO0FBQ1I7QUFDQTtBQUNBLFFBQVEsNEJBQTRCLG9CQUFvQjtBQUN4RCxRQUFRLDJCQUEyQixrQ0FBa0M7QUFDckUsUUFBUSwyQkFBMkI7QUFDbkM7QUFDQTtBQUNBLFFBQVEscUJBQXFCO0FBQzdCLFFBQVEsMkJBQTJCLHNDQUFzQztBQUN6RSxRQUFRLDhCQUE4QjtBQUN0QztBQUNBO0FBQ0EsUUFBUSx3QkFBd0Isa0RBQWtEO0FBQ2xGLFFBQVEsc0JBQXNCLGlEQUFpRDtBQUMvRSxRQUFRLGlDQUFpQyxtQkFBbUI7QUFDNUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsa0JBQWtCO0FBQzdDLGdDQUFnQyxrQkFBa0I7QUFDbEQsMEJBQTBCO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUlFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL21vbmFjby1lZGl0b3IvZXNtL3ZzL2Jhc2ljLWxhbmd1YWdlcy9iaWNlcC9iaWNlcC5qcz8wODY3Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBWZXJzaW9uOiAwLjUwLjAoYzMyMWQwZmJlY2I1MGFiOGE1MzY1ZmExOTY1NDc2YjBhZTYzZmM4NylcclxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvbW9uYWNvLWVkaXRvci9ibG9iL21haW4vTElDRU5TRS50eHRcclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG5cclxuLy8gc3JjL2Jhc2ljLWxhbmd1YWdlcy9iaWNlcC9iaWNlcC50c1xyXG52YXIgYm91bmRlZCA9ICh0ZXh0KSA9PiBgXFxcXGIke3RleHR9XFxcXGJgO1xyXG52YXIgaWRlbnRpZmllclN0YXJ0ID0gXCJbX2EtekEtWl1cIjtcclxudmFyIGlkZW50aWZpZXJDb250aW51ZSA9IFwiW19hLXpBLVowLTldXCI7XHJcbnZhciBpZGVudGlmaWVyID0gYm91bmRlZChgJHtpZGVudGlmaWVyU3RhcnR9JHtpZGVudGlmaWVyQ29udGludWV9KmApO1xyXG52YXIga2V5d29yZHMgPSBbXHJcbiAgXCJ0YXJnZXRTY29wZVwiLFxyXG4gIFwicmVzb3VyY2VcIixcclxuICBcIm1vZHVsZVwiLFxyXG4gIFwicGFyYW1cIixcclxuICBcInZhclwiLFxyXG4gIFwib3V0cHV0XCIsXHJcbiAgXCJmb3JcIixcclxuICBcImluXCIsXHJcbiAgXCJpZlwiLFxyXG4gIFwiZXhpc3RpbmdcIlxyXG5dO1xyXG52YXIgbmFtZWRMaXRlcmFscyA9IFtcInRydWVcIiwgXCJmYWxzZVwiLCBcIm51bGxcIl07XHJcbnZhciBub25Db21tZW50V3MgPSBgWyBcXFxcdFxcXFxyXFxcXG5dYDtcclxudmFyIG51bWVyaWNMaXRlcmFsID0gYFswLTldK2A7XHJcbnZhciBjb25mID0ge1xyXG4gIGNvbW1lbnRzOiB7XHJcbiAgICBsaW5lQ29tbWVudDogXCIvL1wiLFxyXG4gICAgYmxvY2tDb21tZW50OiBbXCIvKlwiLCBcIiovXCJdXHJcbiAgfSxcclxuICBicmFja2V0czogW1xyXG4gICAgW1wie1wiLCBcIn1cIl0sXHJcbiAgICBbXCJbXCIsIFwiXVwiXSxcclxuICAgIFtcIihcIiwgXCIpXCJdXHJcbiAgXSxcclxuICBzdXJyb3VuZGluZ1BhaXJzOiBbXHJcbiAgICB7IG9wZW46IFwie1wiLCBjbG9zZTogXCJ9XCIgfSxcclxuICAgIHsgb3BlbjogXCJbXCIsIGNsb3NlOiBcIl1cIiB9LFxyXG4gICAgeyBvcGVuOiBcIihcIiwgY2xvc2U6IFwiKVwiIH0sXHJcbiAgICB7IG9wZW46IFwiJ1wiLCBjbG9zZTogXCInXCIgfSxcclxuICAgIHsgb3BlbjogXCInJydcIiwgY2xvc2U6IFwiJycnXCIgfVxyXG4gIF0sXHJcbiAgYXV0b0Nsb3NpbmdQYWlyczogW1xyXG4gICAgeyBvcGVuOiBcIntcIiwgY2xvc2U6IFwifVwiIH0sXHJcbiAgICB7IG9wZW46IFwiW1wiLCBjbG9zZTogXCJdXCIgfSxcclxuICAgIHsgb3BlbjogXCIoXCIsIGNsb3NlOiBcIilcIiB9LFxyXG4gICAgeyBvcGVuOiBcIidcIiwgY2xvc2U6IFwiJ1wiLCBub3RJbjogW1wic3RyaW5nXCIsIFwiY29tbWVudFwiXSB9LFxyXG4gICAgeyBvcGVuOiBcIicnJ1wiLCBjbG9zZTogXCInJydcIiwgbm90SW46IFtcInN0cmluZ1wiLCBcImNvbW1lbnRcIl0gfVxyXG4gIF0sXHJcbiAgYXV0b0Nsb3NlQmVmb3JlOiBcIjouLD19XSknIFxcblx0XCIsXHJcbiAgaW5kZW50YXRpb25SdWxlczoge1xyXG4gICAgaW5jcmVhc2VJbmRlbnRQYXR0ZXJuOiBuZXcgUmVnRXhwKFwiXigoPyFcXFxcL1xcXFwvKS4pKihcXFxce1tefVxcXCInYF0qfFxcXFwoW14pXFxcIidgXSp8XFxcXFtbXlxcXFxdXFxcIidgXSopJFwiKSxcclxuICAgIGRlY3JlYXNlSW5kZW50UGF0dGVybjogbmV3IFJlZ0V4cChcIl4oKD8hLio/XFxcXC9cXFxcKikuKlxcXFwqLyk/XFxcXHMqW1xcXFx9XFxcXF1dLiokXCIpXHJcbiAgfVxyXG59O1xyXG52YXIgbGFuZ3VhZ2UgPSB7XHJcbiAgZGVmYXVsdFRva2VuOiBcIlwiLFxyXG4gIHRva2VuUG9zdGZpeDogXCIuYmljZXBcIixcclxuICBicmFja2V0czogW1xyXG4gICAgeyBvcGVuOiBcIntcIiwgY2xvc2U6IFwifVwiLCB0b2tlbjogXCJkZWxpbWl0ZXIuY3VybHlcIiB9LFxyXG4gICAgeyBvcGVuOiBcIltcIiwgY2xvc2U6IFwiXVwiLCB0b2tlbjogXCJkZWxpbWl0ZXIuc3F1YXJlXCIgfSxcclxuICAgIHsgb3BlbjogXCIoXCIsIGNsb3NlOiBcIilcIiwgdG9rZW46IFwiZGVsaW1pdGVyLnBhcmVudGhlc2lzXCIgfVxyXG4gIF0sXHJcbiAgc3ltYm9sczogL1s9Pjwhfj86JnwrXFwtKi9eJV0rLyxcclxuICBrZXl3b3JkcyxcclxuICBuYW1lZExpdGVyYWxzLFxyXG4gIGVzY2FwZXM6IGBcXFxcXFxcXCh1e1swLTlBLUZhLWZdK318bnxyfHR8XFxcXFxcXFx8J3xcXFxcXFwkeylgLFxyXG4gIHRva2VuaXplcjoge1xyXG4gICAgcm9vdDogW3sgaW5jbHVkZTogXCJAZXhwcmVzc2lvblwiIH0sIHsgaW5jbHVkZTogXCJAd2hpdGVzcGFjZVwiIH1dLFxyXG4gICAgc3RyaW5nVmVyYmF0aW06IFtcclxuICAgICAgeyByZWdleDogYCh8J3wnJylbXiddYCwgYWN0aW9uOiB7IHRva2VuOiBcInN0cmluZ1wiIH0gfSxcclxuICAgICAgeyByZWdleDogYCcnJ2AsIGFjdGlvbjogeyB0b2tlbjogXCJzdHJpbmcucXVvdGVcIiwgbmV4dDogXCJAcG9wXCIgfSB9XHJcbiAgICBdLFxyXG4gICAgc3RyaW5nTGl0ZXJhbDogW1xyXG4gICAgICB7IHJlZ2V4OiBgXFxcXFxcJHtgLCBhY3Rpb246IHsgdG9rZW46IFwiZGVsaW1pdGVyLmJyYWNrZXRcIiwgbmV4dDogXCJAYnJhY2tldENvdW50aW5nXCIgfSB9LFxyXG4gICAgICB7IHJlZ2V4OiBgW15cXFxcXFxcXCckXStgLCBhY3Rpb246IHsgdG9rZW46IFwic3RyaW5nXCIgfSB9LFxyXG4gICAgICB7IHJlZ2V4OiBcIkBlc2NhcGVzXCIsIGFjdGlvbjogeyB0b2tlbjogXCJzdHJpbmcuZXNjYXBlXCIgfSB9LFxyXG4gICAgICB7IHJlZ2V4OiBgXFxcXFxcXFwuYCwgYWN0aW9uOiB7IHRva2VuOiBcInN0cmluZy5lc2NhcGUuaW52YWxpZFwiIH0gfSxcclxuICAgICAgeyByZWdleDogYCdgLCBhY3Rpb246IHsgdG9rZW46IFwic3RyaW5nXCIsIG5leHQ6IFwiQHBvcFwiIH0gfVxyXG4gICAgXSxcclxuICAgIGJyYWNrZXRDb3VudGluZzogW1xyXG4gICAgICB7IHJlZ2V4OiBge2AsIGFjdGlvbjogeyB0b2tlbjogXCJkZWxpbWl0ZXIuYnJhY2tldFwiLCBuZXh0OiBcIkBicmFja2V0Q291bnRpbmdcIiB9IH0sXHJcbiAgICAgIHsgcmVnZXg6IGB9YCwgYWN0aW9uOiB7IHRva2VuOiBcImRlbGltaXRlci5icmFja2V0XCIsIG5leHQ6IFwiQHBvcFwiIH0gfSxcclxuICAgICAgeyBpbmNsdWRlOiBcImV4cHJlc3Npb25cIiB9XHJcbiAgICBdLFxyXG4gICAgY29tbWVudDogW1xyXG4gICAgICB7IHJlZ2V4OiBgW15cXFxcKl0rYCwgYWN0aW9uOiB7IHRva2VuOiBcImNvbW1lbnRcIiB9IH0sXHJcbiAgICAgIHsgcmVnZXg6IGBcXFxcKlxcXFwvYCwgYWN0aW9uOiB7IHRva2VuOiBcImNvbW1lbnRcIiwgbmV4dDogXCJAcG9wXCIgfSB9LFxyXG4gICAgICB7IHJlZ2V4OiBgW1xcXFwvKl1gLCBhY3Rpb246IHsgdG9rZW46IFwiY29tbWVudFwiIH0gfVxyXG4gICAgXSxcclxuICAgIHdoaXRlc3BhY2U6IFtcclxuICAgICAgeyByZWdleDogbm9uQ29tbWVudFdzIH0sXHJcbiAgICAgIHsgcmVnZXg6IGBcXFxcL1xcXFwqYCwgYWN0aW9uOiB7IHRva2VuOiBcImNvbW1lbnRcIiwgbmV4dDogXCJAY29tbWVudFwiIH0gfSxcclxuICAgICAgeyByZWdleDogYFxcXFwvXFxcXC8uKiRgLCBhY3Rpb246IHsgdG9rZW46IFwiY29tbWVudFwiIH0gfVxyXG4gICAgXSxcclxuICAgIGV4cHJlc3Npb246IFtcclxuICAgICAgeyByZWdleDogYCcnJ2AsIGFjdGlvbjogeyB0b2tlbjogXCJzdHJpbmcucXVvdGVcIiwgbmV4dDogXCJAc3RyaW5nVmVyYmF0aW1cIiB9IH0sXHJcbiAgICAgIHsgcmVnZXg6IGAnYCwgYWN0aW9uOiB7IHRva2VuOiBcInN0cmluZy5xdW90ZVwiLCBuZXh0OiBcIkBzdHJpbmdMaXRlcmFsXCIgfSB9LFxyXG4gICAgICB7IHJlZ2V4OiBudW1lcmljTGl0ZXJhbCwgYWN0aW9uOiB7IHRva2VuOiBcIm51bWJlclwiIH0gfSxcclxuICAgICAge1xyXG4gICAgICAgIHJlZ2V4OiBpZGVudGlmaWVyLFxyXG4gICAgICAgIGFjdGlvbjoge1xyXG4gICAgICAgICAgY2FzZXM6IHtcclxuICAgICAgICAgICAgXCJAa2V5d29yZHNcIjogeyB0b2tlbjogXCJrZXl3b3JkXCIgfSxcclxuICAgICAgICAgICAgXCJAbmFtZWRMaXRlcmFsc1wiOiB7IHRva2VuOiBcImtleXdvcmRcIiB9LFxyXG4gICAgICAgICAgICBcIkBkZWZhdWx0XCI6IHsgdG9rZW46IFwiaWRlbnRpZmllclwiIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIF1cclxuICB9XHJcbn07XHJcbmV4cG9ydCB7XHJcbiAgY29uZixcclxuICBsYW5ndWFnZVxyXG59O1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/bicep/bicep.js\n");

/***/ })

}]);