"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_fsharp_fsharp_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.js":
/*!****************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n\r\n// src/basic-languages/fsharp/fsharp.ts\r\nvar conf = {\r\n  comments: {\r\n    lineComment: \"//\",\r\n    blockComment: [\"(*\", \"*)\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"', close: '\"' },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  folding: {\r\n    markers: {\r\n      start: new RegExp(\"^\\\\s*//\\\\s*#region\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#region(.*)\\\\*\\\\)\"),\r\n      end: new RegExp(\"^\\\\s*//\\\\s*#endregion\\\\b|^\\\\s*\\\\(\\\\*\\\\s*#endregion\\\\s*\\\\*\\\\)\")\r\n    }\r\n  }\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \".fs\",\r\n  keywords: [\r\n    \"abstract\",\r\n    \"and\",\r\n    \"atomic\",\r\n    \"as\",\r\n    \"assert\",\r\n    \"asr\",\r\n    \"base\",\r\n    \"begin\",\r\n    \"break\",\r\n    \"checked\",\r\n    \"component\",\r\n    \"const\",\r\n    \"constraint\",\r\n    \"constructor\",\r\n    \"continue\",\r\n    \"class\",\r\n    \"default\",\r\n    \"delegate\",\r\n    \"do\",\r\n    \"done\",\r\n    \"downcast\",\r\n    \"downto\",\r\n    \"elif\",\r\n    \"else\",\r\n    \"end\",\r\n    \"exception\",\r\n    \"eager\",\r\n    \"event\",\r\n    \"external\",\r\n    \"extern\",\r\n    \"false\",\r\n    \"finally\",\r\n    \"for\",\r\n    \"fun\",\r\n    \"function\",\r\n    \"fixed\",\r\n    \"functor\",\r\n    \"global\",\r\n    \"if\",\r\n    \"in\",\r\n    \"include\",\r\n    \"inherit\",\r\n    \"inline\",\r\n    \"interface\",\r\n    \"internal\",\r\n    \"land\",\r\n    \"lor\",\r\n    \"lsl\",\r\n    \"lsr\",\r\n    \"lxor\",\r\n    \"lazy\",\r\n    \"let\",\r\n    \"match\",\r\n    \"member\",\r\n    \"mod\",\r\n    \"module\",\r\n    \"mutable\",\r\n    \"namespace\",\r\n    \"method\",\r\n    \"mixin\",\r\n    \"new\",\r\n    \"not\",\r\n    \"null\",\r\n    \"of\",\r\n    \"open\",\r\n    \"or\",\r\n    \"object\",\r\n    \"override\",\r\n    \"private\",\r\n    \"parallel\",\r\n    \"process\",\r\n    \"protected\",\r\n    \"pure\",\r\n    \"public\",\r\n    \"rec\",\r\n    \"return\",\r\n    \"static\",\r\n    \"sealed\",\r\n    \"struct\",\r\n    \"sig\",\r\n    \"then\",\r\n    \"to\",\r\n    \"true\",\r\n    \"tailcall\",\r\n    \"trait\",\r\n    \"try\",\r\n    \"type\",\r\n    \"upcast\",\r\n    \"use\",\r\n    \"val\",\r\n    \"void\",\r\n    \"virtual\",\r\n    \"volatile\",\r\n    \"when\",\r\n    \"while\",\r\n    \"with\",\r\n    \"yield\"\r\n  ],\r\n  // we include these common regular expressions\r\n  symbols: /[=><!~?:&|+\\-*\\^%;\\.,\\/]+/,\r\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n  integersuffix: /[uU]?[yslnLI]?/,\r\n  floatsuffix: /[fFmM]?/,\r\n  // The main tokenizer for our languages\r\n  tokenizer: {\r\n    root: [\r\n      // identifiers and keywords\r\n      [\r\n        /[a-zA-Z_]\\w*/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": { token: \"keyword.$0\" },\r\n            \"@default\": \"identifier\"\r\n          }\r\n        }\r\n      ],\r\n      // whitespace\r\n      { include: \"@whitespace\" },\r\n      // [< attributes >].\r\n      [/\\[<.*>\\]/, \"annotation\"],\r\n      // Preprocessor directive\r\n      [/^#(if|else|endif)/, \"keyword\"],\r\n      // delimiters and operators\r\n      [/[{}()\\[\\]]/, \"@brackets\"],\r\n      [/[<>](?!@symbols)/, \"@brackets\"],\r\n      [/@symbols/, \"delimiter\"],\r\n      // numbers\r\n      [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, \"number.float\"],\r\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, \"number.float\"],\r\n      [/0x[0-9a-fA-F]+LF/, \"number.float\"],\r\n      [/0x[0-9a-fA-F]+(@integersuffix)/, \"number.hex\"],\r\n      [/0b[0-1]+(@integersuffix)/, \"number.bin\"],\r\n      [/\\d+(@integersuffix)/, \"number\"],\r\n      // delimiter: after number because of .\\d floats\r\n      [/[;,.]/, \"delimiter\"],\r\n      // strings\r\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      // non-teminated string\r\n      [/\"\"\"/, \"string\", '@string.\"\"\"'],\r\n      [/\"/, \"string\", '@string.\"'],\r\n      // literal string\r\n      [/\\@\"/, { token: \"string.quote\", next: \"@litstring\" }],\r\n      // characters\r\n      [/'[^\\\\']'B?/, \"string\"],\r\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\r\n      [/'/, \"string.invalid\"]\r\n    ],\r\n    whitespace: [\r\n      [/[ \\t\\r\\n]+/, \"\"],\r\n      [/\\(\\*(?!\\))/, \"comment\", \"@comment\"],\r\n      [/\\/\\/.*$/, \"comment\"]\r\n    ],\r\n    comment: [\r\n      [/[^*(]+/, \"comment\"],\r\n      [/\\*\\)/, \"comment\", \"@pop\"],\r\n      [/\\*/, \"comment\"],\r\n      [/\\(\\*\\)/, \"comment\"],\r\n      [/\\(/, \"comment\"]\r\n    ],\r\n    string: [\r\n      [/[^\\\\\"]+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [\r\n        /(\"\"\"|\"B?)/,\r\n        {\r\n          cases: {\r\n            \"$#==$S2\": { token: \"string\", next: \"@pop\" },\r\n            \"@default\": \"string\"\r\n          }\r\n        }\r\n      ]\r\n    ],\r\n    litstring: [\r\n      [/[^\"]+/, \"string\"],\r\n      [/\"\"/, \"string.escape\"],\r\n      [/\"/, { token: \"string.quote\", next: \"@pop\" }]\r\n    ]\r\n  }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2ZzaGFycC9mc2hhcnAuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLE9BQU8sS0FBSztBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTSxRQUFRLFlBQVksR0FBRztBQUM3QixNQUFNLHVCQUF1QjtBQUM3QixNQUFNLHVCQUF1QjtBQUM3QixNQUFNO0FBQ047QUFDQTtBQUNBLE1BQU0sUUFBUSxZQUFZLEdBQUc7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTSx1QkFBdUI7QUFDN0IsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5Qiw0Q0FBNEMsSUFBSSxjQUFjLEVBQUUsY0FBYyxFQUFFO0FBQ2hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHFCQUFxQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx3QkFBd0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVc7QUFDWDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsMkNBQTJDO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLCtCQUErQjtBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsY0FBYyxxQ0FBcUM7QUFDbkQ7QUFDQTtBQUNBO0FBSUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL2ZzaGFycC9mc2hhcnAuanM/Y2FjYyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiEtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gKiBDb3B5cmlnaHQgKGMpIE1pY3Jvc29mdCBDb3Jwb3JhdGlvbi4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICogVmVyc2lvbjogMC41MC4wKGMzMjFkMGZiZWNiNTBhYjhhNTM2NWZhMTk2NTQ3NmIwYWU2M2ZjODcpXHJcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxyXG4gKiBodHRwczovL2dpdGh1Yi5jb20vbWljcm9zb2Z0L21vbmFjby1lZGl0b3IvYmxvYi9tYWluL0xJQ0VOU0UudHh0XHJcbiAqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qL1xyXG5cclxuXHJcbi8vIHNyYy9iYXNpYy1sYW5ndWFnZXMvZnNoYXJwL2ZzaGFycC50c1xyXG52YXIgY29uZiA9IHtcclxuICBjb21tZW50czoge1xyXG4gICAgbGluZUNvbW1lbnQ6IFwiLy9cIixcclxuICAgIGJsb2NrQ29tbWVudDogW1wiKCpcIiwgXCIqKVwiXVxyXG4gIH0sXHJcbiAgYnJhY2tldHM6IFtcclxuICAgIFtcIntcIiwgXCJ9XCJdLFxyXG4gICAgW1wiW1wiLCBcIl1cIl0sXHJcbiAgICBbXCIoXCIsIFwiKVwiXVxyXG4gIF0sXHJcbiAgYXV0b0Nsb3NpbmdQYWlyczogW1xyXG4gICAgeyBvcGVuOiBcIntcIiwgY2xvc2U6IFwifVwiIH0sXHJcbiAgICB7IG9wZW46IFwiW1wiLCBjbG9zZTogXCJdXCIgfSxcclxuICAgIHsgb3BlbjogXCIoXCIsIGNsb3NlOiBcIilcIiB9LFxyXG4gICAgeyBvcGVuOiAnXCInLCBjbG9zZTogJ1wiJyB9XHJcbiAgXSxcclxuICBzdXJyb3VuZGluZ1BhaXJzOiBbXHJcbiAgICB7IG9wZW46IFwie1wiLCBjbG9zZTogXCJ9XCIgfSxcclxuICAgIHsgb3BlbjogXCJbXCIsIGNsb3NlOiBcIl1cIiB9LFxyXG4gICAgeyBvcGVuOiBcIihcIiwgY2xvc2U6IFwiKVwiIH0sXHJcbiAgICB7IG9wZW46ICdcIicsIGNsb3NlOiAnXCInIH0sXHJcbiAgICB7IG9wZW46IFwiJ1wiLCBjbG9zZTogXCInXCIgfVxyXG4gIF0sXHJcbiAgZm9sZGluZzoge1xyXG4gICAgbWFya2Vyczoge1xyXG4gICAgICBzdGFydDogbmV3IFJlZ0V4cChcIl5cXFxccyovL1xcXFxzKiNyZWdpb25cXFxcYnxeXFxcXHMqXFxcXChcXFxcKlxcXFxzKiNyZWdpb24oLiopXFxcXCpcXFxcKVwiKSxcclxuICAgICAgZW5kOiBuZXcgUmVnRXhwKFwiXlxcXFxzKi8vXFxcXHMqI2VuZHJlZ2lvblxcXFxifF5cXFxccypcXFxcKFxcXFwqXFxcXHMqI2VuZHJlZ2lvblxcXFxzKlxcXFwqXFxcXClcIilcclxuICAgIH1cclxuICB9XHJcbn07XHJcbnZhciBsYW5ndWFnZSA9IHtcclxuICBkZWZhdWx0VG9rZW46IFwiXCIsXHJcbiAgdG9rZW5Qb3N0Zml4OiBcIi5mc1wiLFxyXG4gIGtleXdvcmRzOiBbXHJcbiAgICBcImFic3RyYWN0XCIsXHJcbiAgICBcImFuZFwiLFxyXG4gICAgXCJhdG9taWNcIixcclxuICAgIFwiYXNcIixcclxuICAgIFwiYXNzZXJ0XCIsXHJcbiAgICBcImFzclwiLFxyXG4gICAgXCJiYXNlXCIsXHJcbiAgICBcImJlZ2luXCIsXHJcbiAgICBcImJyZWFrXCIsXHJcbiAgICBcImNoZWNrZWRcIixcclxuICAgIFwiY29tcG9uZW50XCIsXHJcbiAgICBcImNvbnN0XCIsXHJcbiAgICBcImNvbnN0cmFpbnRcIixcclxuICAgIFwiY29uc3RydWN0b3JcIixcclxuICAgIFwiY29udGludWVcIixcclxuICAgIFwiY2xhc3NcIixcclxuICAgIFwiZGVmYXVsdFwiLFxyXG4gICAgXCJkZWxlZ2F0ZVwiLFxyXG4gICAgXCJkb1wiLFxyXG4gICAgXCJkb25lXCIsXHJcbiAgICBcImRvd25jYXN0XCIsXHJcbiAgICBcImRvd250b1wiLFxyXG4gICAgXCJlbGlmXCIsXHJcbiAgICBcImVsc2VcIixcclxuICAgIFwiZW5kXCIsXHJcbiAgICBcImV4Y2VwdGlvblwiLFxyXG4gICAgXCJlYWdlclwiLFxyXG4gICAgXCJldmVudFwiLFxyXG4gICAgXCJleHRlcm5hbFwiLFxyXG4gICAgXCJleHRlcm5cIixcclxuICAgIFwiZmFsc2VcIixcclxuICAgIFwiZmluYWxseVwiLFxyXG4gICAgXCJmb3JcIixcclxuICAgIFwiZnVuXCIsXHJcbiAgICBcImZ1bmN0aW9uXCIsXHJcbiAgICBcImZpeGVkXCIsXHJcbiAgICBcImZ1bmN0b3JcIixcclxuICAgIFwiZ2xvYmFsXCIsXHJcbiAgICBcImlmXCIsXHJcbiAgICBcImluXCIsXHJcbiAgICBcImluY2x1ZGVcIixcclxuICAgIFwiaW5oZXJpdFwiLFxyXG4gICAgXCJpbmxpbmVcIixcclxuICAgIFwiaW50ZXJmYWNlXCIsXHJcbiAgICBcImludGVybmFsXCIsXHJcbiAgICBcImxhbmRcIixcclxuICAgIFwibG9yXCIsXHJcbiAgICBcImxzbFwiLFxyXG4gICAgXCJsc3JcIixcclxuICAgIFwibHhvclwiLFxyXG4gICAgXCJsYXp5XCIsXHJcbiAgICBcImxldFwiLFxyXG4gICAgXCJtYXRjaFwiLFxyXG4gICAgXCJtZW1iZXJcIixcclxuICAgIFwibW9kXCIsXHJcbiAgICBcIm1vZHVsZVwiLFxyXG4gICAgXCJtdXRhYmxlXCIsXHJcbiAgICBcIm5hbWVzcGFjZVwiLFxyXG4gICAgXCJtZXRob2RcIixcclxuICAgIFwibWl4aW5cIixcclxuICAgIFwibmV3XCIsXHJcbiAgICBcIm5vdFwiLFxyXG4gICAgXCJudWxsXCIsXHJcbiAgICBcIm9mXCIsXHJcbiAgICBcIm9wZW5cIixcclxuICAgIFwib3JcIixcclxuICAgIFwib2JqZWN0XCIsXHJcbiAgICBcIm92ZXJyaWRlXCIsXHJcbiAgICBcInByaXZhdGVcIixcclxuICAgIFwicGFyYWxsZWxcIixcclxuICAgIFwicHJvY2Vzc1wiLFxyXG4gICAgXCJwcm90ZWN0ZWRcIixcclxuICAgIFwicHVyZVwiLFxyXG4gICAgXCJwdWJsaWNcIixcclxuICAgIFwicmVjXCIsXHJcbiAgICBcInJldHVyblwiLFxyXG4gICAgXCJzdGF0aWNcIixcclxuICAgIFwic2VhbGVkXCIsXHJcbiAgICBcInN0cnVjdFwiLFxyXG4gICAgXCJzaWdcIixcclxuICAgIFwidGhlblwiLFxyXG4gICAgXCJ0b1wiLFxyXG4gICAgXCJ0cnVlXCIsXHJcbiAgICBcInRhaWxjYWxsXCIsXHJcbiAgICBcInRyYWl0XCIsXHJcbiAgICBcInRyeVwiLFxyXG4gICAgXCJ0eXBlXCIsXHJcbiAgICBcInVwY2FzdFwiLFxyXG4gICAgXCJ1c2VcIixcclxuICAgIFwidmFsXCIsXHJcbiAgICBcInZvaWRcIixcclxuICAgIFwidmlydHVhbFwiLFxyXG4gICAgXCJ2b2xhdGlsZVwiLFxyXG4gICAgXCJ3aGVuXCIsXHJcbiAgICBcIndoaWxlXCIsXHJcbiAgICBcIndpdGhcIixcclxuICAgIFwieWllbGRcIlxyXG4gIF0sXHJcbiAgLy8gd2UgaW5jbHVkZSB0aGVzZSBjb21tb24gcmVndWxhciBleHByZXNzaW9uc1xyXG4gIHN5bWJvbHM6IC9bPT48IX4/OiZ8K1xcLSpcXF4lO1xcLixcXC9dKy8sXHJcbiAgZXNjYXBlczogL1xcXFwoPzpbYWJmbnJ0dlxcXFxcIiddfHhbMC05QS1GYS1mXXsxLDR9fHVbMC05QS1GYS1mXXs0fXxVWzAtOUEtRmEtZl17OH0pLyxcclxuICBpbnRlZ2Vyc3VmZml4OiAvW3VVXT9beXNsbkxJXT8vLFxyXG4gIGZsb2F0c3VmZml4OiAvW2ZGbU1dPy8sXHJcbiAgLy8gVGhlIG1haW4gdG9rZW5pemVyIGZvciBvdXIgbGFuZ3VhZ2VzXHJcbiAgdG9rZW5pemVyOiB7XHJcbiAgICByb290OiBbXHJcbiAgICAgIC8vIGlkZW50aWZpZXJzIGFuZCBrZXl3b3Jkc1xyXG4gICAgICBbXHJcbiAgICAgICAgL1thLXpBLVpfXVxcdyovLFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIGNhc2VzOiB7XHJcbiAgICAgICAgICAgIFwiQGtleXdvcmRzXCI6IHsgdG9rZW46IFwia2V5d29yZC4kMFwiIH0sXHJcbiAgICAgICAgICAgIFwiQGRlZmF1bHRcIjogXCJpZGVudGlmaWVyXCJcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIF0sXHJcbiAgICAgIC8vIHdoaXRlc3BhY2VcclxuICAgICAgeyBpbmNsdWRlOiBcIkB3aGl0ZXNwYWNlXCIgfSxcclxuICAgICAgLy8gWzwgYXR0cmlidXRlcyA+XS5cclxuICAgICAgWy9cXFs8Lio+XFxdLywgXCJhbm5vdGF0aW9uXCJdLFxyXG4gICAgICAvLyBQcmVwcm9jZXNzb3IgZGlyZWN0aXZlXHJcbiAgICAgIFsvXiMoaWZ8ZWxzZXxlbmRpZikvLCBcImtleXdvcmRcIl0sXHJcbiAgICAgIC8vIGRlbGltaXRlcnMgYW5kIG9wZXJhdG9yc1xyXG4gICAgICBbL1t7fSgpXFxbXFxdXS8sIFwiQGJyYWNrZXRzXCJdLFxyXG4gICAgICBbL1s8Pl0oPyFAc3ltYm9scykvLCBcIkBicmFja2V0c1wiXSxcclxuICAgICAgWy9Ac3ltYm9scy8sIFwiZGVsaW1pdGVyXCJdLFxyXG4gICAgICAvLyBudW1iZXJzXHJcbiAgICAgIFsvXFxkKlxcZCtbZUVdKFtcXC0rXT9cXGQrKT8oQGZsb2F0c3VmZml4KS8sIFwibnVtYmVyLmZsb2F0XCJdLFxyXG4gICAgICBbL1xcZCpcXC5cXGQrKFtlRV1bXFwtK10/XFxkKyk/KEBmbG9hdHN1ZmZpeCkvLCBcIm51bWJlci5mbG9hdFwiXSxcclxuICAgICAgWy8weFswLTlhLWZBLUZdK0xGLywgXCJudW1iZXIuZmxvYXRcIl0sXHJcbiAgICAgIFsvMHhbMC05YS1mQS1GXSsoQGludGVnZXJzdWZmaXgpLywgXCJudW1iZXIuaGV4XCJdLFxyXG4gICAgICBbLzBiWzAtMV0rKEBpbnRlZ2Vyc3VmZml4KS8sIFwibnVtYmVyLmJpblwiXSxcclxuICAgICAgWy9cXGQrKEBpbnRlZ2Vyc3VmZml4KS8sIFwibnVtYmVyXCJdLFxyXG4gICAgICAvLyBkZWxpbWl0ZXI6IGFmdGVyIG51bWJlciBiZWNhdXNlIG9mIC5cXGQgZmxvYXRzXHJcbiAgICAgIFsvWzssLl0vLCBcImRlbGltaXRlclwiXSxcclxuICAgICAgLy8gc3RyaW5nc1xyXG4gICAgICBbL1wiKFteXCJcXFxcXXxcXFxcLikqJC8sIFwic3RyaW5nLmludmFsaWRcIl0sXHJcbiAgICAgIC8vIG5vbi10ZW1pbmF0ZWQgc3RyaW5nXHJcbiAgICAgIFsvXCJcIlwiLywgXCJzdHJpbmdcIiwgJ0BzdHJpbmcuXCJcIlwiJ10sXHJcbiAgICAgIFsvXCIvLCBcInN0cmluZ1wiLCAnQHN0cmluZy5cIiddLFxyXG4gICAgICAvLyBsaXRlcmFsIHN0cmluZ1xyXG4gICAgICBbL1xcQFwiLywgeyB0b2tlbjogXCJzdHJpbmcucXVvdGVcIiwgbmV4dDogXCJAbGl0c3RyaW5nXCIgfV0sXHJcbiAgICAgIC8vIGNoYXJhY3RlcnNcclxuICAgICAgWy8nW15cXFxcJ10nQj8vLCBcInN0cmluZ1wiXSxcclxuICAgICAgWy8oJykoQGVzY2FwZXMpKCcpLywgW1wic3RyaW5nXCIsIFwic3RyaW5nLmVzY2FwZVwiLCBcInN0cmluZ1wiXV0sXHJcbiAgICAgIFsvJy8sIFwic3RyaW5nLmludmFsaWRcIl1cclxuICAgIF0sXHJcbiAgICB3aGl0ZXNwYWNlOiBbXHJcbiAgICAgIFsvWyBcXHRcXHJcXG5dKy8sIFwiXCJdLFxyXG4gICAgICBbL1xcKFxcKig/IVxcKSkvLCBcImNvbW1lbnRcIiwgXCJAY29tbWVudFwiXSxcclxuICAgICAgWy9cXC9cXC8uKiQvLCBcImNvbW1lbnRcIl1cclxuICAgIF0sXHJcbiAgICBjb21tZW50OiBbXHJcbiAgICAgIFsvW14qKF0rLywgXCJjb21tZW50XCJdLFxyXG4gICAgICBbL1xcKlxcKS8sIFwiY29tbWVudFwiLCBcIkBwb3BcIl0sXHJcbiAgICAgIFsvXFwqLywgXCJjb21tZW50XCJdLFxyXG4gICAgICBbL1xcKFxcKlxcKS8sIFwiY29tbWVudFwiXSxcclxuICAgICAgWy9cXCgvLCBcImNvbW1lbnRcIl1cclxuICAgIF0sXHJcbiAgICBzdHJpbmc6IFtcclxuICAgICAgWy9bXlxcXFxcIl0rLywgXCJzdHJpbmdcIl0sXHJcbiAgICAgIFsvQGVzY2FwZXMvLCBcInN0cmluZy5lc2NhcGVcIl0sXHJcbiAgICAgIFsvXFxcXC4vLCBcInN0cmluZy5lc2NhcGUuaW52YWxpZFwiXSxcclxuICAgICAgW1xyXG4gICAgICAgIC8oXCJcIlwifFwiQj8pLyxcclxuICAgICAgICB7XHJcbiAgICAgICAgICBjYXNlczoge1xyXG4gICAgICAgICAgICBcIiQjPT0kUzJcIjogeyB0b2tlbjogXCJzdHJpbmdcIiwgbmV4dDogXCJAcG9wXCIgfSxcclxuICAgICAgICAgICAgXCJAZGVmYXVsdFwiOiBcInN0cmluZ1wiXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICBdXHJcbiAgICBdLFxyXG4gICAgbGl0c3RyaW5nOiBbXHJcbiAgICAgIFsvW15cIl0rLywgXCJzdHJpbmdcIl0sXHJcbiAgICAgIFsvXCJcIi8sIFwic3RyaW5nLmVzY2FwZVwiXSxcclxuICAgICAgWy9cIi8sIHsgdG9rZW46IFwic3RyaW5nLnF1b3RlXCIsIG5leHQ6IFwiQHBvcFwiIH1dXHJcbiAgICBdXHJcbiAgfVxyXG59O1xyXG5leHBvcnQge1xyXG4gIGNvbmYsXHJcbiAgbGFuZ3VhZ2VcclxufTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/fsharp/fsharp.js\n");

/***/ })

}]);