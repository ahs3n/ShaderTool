"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_pascaligo_pascaligo_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/pascaligo/pascaligo.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/pascaligo/pascaligo.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n\r\n// src/basic-languages/pascaligo/pascaligo.ts\r\nvar conf = {\r\n  comments: {\r\n    lineComment: \"//\",\r\n    blockComment: [\"(*\", \"*)\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"],\r\n    [\"<\", \">\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: \"<\", close: \">\" },\r\n    { open: \"'\", close: \"'\" }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: \"<\", close: \">\" },\r\n    { open: \"'\", close: \"'\" }\r\n  ]\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \".pascaligo\",\r\n  ignoreCase: true,\r\n  brackets: [\r\n    { open: \"{\", close: \"}\", token: \"delimiter.curly\" },\r\n    { open: \"[\", close: \"]\", token: \"delimiter.square\" },\r\n    { open: \"(\", close: \")\", token: \"delimiter.parenthesis\" },\r\n    { open: \"<\", close: \">\", token: \"delimiter.angle\" }\r\n  ],\r\n  keywords: [\r\n    \"begin\",\r\n    \"block\",\r\n    \"case\",\r\n    \"const\",\r\n    \"else\",\r\n    \"end\",\r\n    \"fail\",\r\n    \"for\",\r\n    \"from\",\r\n    \"function\",\r\n    \"if\",\r\n    \"is\",\r\n    \"nil\",\r\n    \"of\",\r\n    \"remove\",\r\n    \"return\",\r\n    \"skip\",\r\n    \"then\",\r\n    \"type\",\r\n    \"var\",\r\n    \"while\",\r\n    \"with\",\r\n    \"option\",\r\n    \"None\",\r\n    \"transaction\"\r\n  ],\r\n  typeKeywords: [\r\n    \"bool\",\r\n    \"int\",\r\n    \"list\",\r\n    \"map\",\r\n    \"nat\",\r\n    \"record\",\r\n    \"string\",\r\n    \"unit\",\r\n    \"address\",\r\n    \"map\",\r\n    \"mtz\",\r\n    \"xtz\"\r\n  ],\r\n  operators: [\r\n    \"=\",\r\n    \">\",\r\n    \"<\",\r\n    \"<=\",\r\n    \">=\",\r\n    \"<>\",\r\n    \":\",\r\n    \":=\",\r\n    \"and\",\r\n    \"mod\",\r\n    \"or\",\r\n    \"+\",\r\n    \"-\",\r\n    \"*\",\r\n    \"/\",\r\n    \"@\",\r\n    \"&\",\r\n    \"^\",\r\n    \"%\"\r\n  ],\r\n  // we include these common regular expressions\r\n  symbols: /[=><:@\\^&|+\\-*\\/\\^%]+/,\r\n  // The main tokenizer for our languages\r\n  tokenizer: {\r\n    root: [\r\n      // identifiers and keywords\r\n      [\r\n        /[a-zA-Z_][\\w]*/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": { token: \"keyword.$0\" },\r\n            \"@default\": \"identifier\"\r\n          }\r\n        }\r\n      ],\r\n      // whitespace\r\n      { include: \"@whitespace\" },\r\n      // delimiters and operators\r\n      [/[{}()\\[\\]]/, \"@brackets\"],\r\n      [/[<>](?!@symbols)/, \"@brackets\"],\r\n      [\r\n        /@symbols/,\r\n        {\r\n          cases: {\r\n            \"@operators\": \"delimiter\",\r\n            \"@default\": \"\"\r\n          }\r\n        }\r\n      ],\r\n      // numbers\r\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\r\n      [/\\$[0-9a-fA-F]{1,16}/, \"number.hex\"],\r\n      [/\\d+/, \"number\"],\r\n      // delimiter: after number because of .\\d floats\r\n      [/[;,.]/, \"delimiter\"],\r\n      // strings\r\n      [/'([^'\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      // non-teminated string\r\n      [/'/, \"string\", \"@string\"],\r\n      // characters\r\n      [/'[^\\\\']'/, \"string\"],\r\n      [/'/, \"string.invalid\"],\r\n      [/\\#\\d+/, \"string\"]\r\n    ],\r\n    /* */\r\n    comment: [\r\n      [/[^\\(\\*]+/, \"comment\"],\r\n      //[/\\(\\*/,    'comment', '@push' ],    // nested comment  not allowed :-(\r\n      [/\\*\\)/, \"comment\", \"@pop\"],\r\n      [/\\(\\*/, \"comment\"]\r\n    ],\r\n    string: [\r\n      [/[^\\\\']+/, \"string\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [/'/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\r\n    ],\r\n    whitespace: [\r\n      [/[ \\t\\r\\n]+/, \"white\"],\r\n      [/\\(\\*/, \"comment\", \"@comment\"],\r\n      [/\\/\\/.*$/, \"comment\"]\r\n    ]\r\n  }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbW9uYWNvLWVkaXRvci9lc20vdnMvYmFzaWMtbGFuZ3VhZ2VzL3Bhc2NhbGlnby9wYXNjYWxpZ28uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBLE9BQU8sS0FBSztBQUNaO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLFFBQVEsWUFBWSxHQUFHO0FBQzdCLE1BQU0sdUJBQXVCO0FBQzdCLE1BQU0sdUJBQXVCO0FBQzdCLE1BQU0sdUJBQXVCO0FBQzdCLE1BQU07QUFDTjtBQUNBO0FBQ0EsTUFBTSxRQUFRLFlBQVksR0FBRztBQUM3QixNQUFNLHVCQUF1QjtBQUM3QixNQUFNLHVCQUF1QjtBQUM3QixNQUFNLHVCQUF1QjtBQUM3QixNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNLFFBQVEsWUFBWSw2QkFBNkI7QUFDdkQsTUFBTSxrREFBa0Q7QUFDeEQsTUFBTSx1REFBdUQ7QUFDN0QsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHFCQUFxQjtBQUNoRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx3QkFBd0I7QUFDaEM7QUFDQSxXQUFXO0FBQ1g7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLEtBQUs7QUFDM0I7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsd0RBQXdEO0FBQ3RFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFJRSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9tb25hY28tZWRpdG9yL2VzbS92cy9iYXNpYy1sYW5ndWFnZXMvcGFzY2FsaWdvL3Bhc2NhbGlnby5qcz9jYjA0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qIS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAqIENvcHlyaWdodCAoYykgTWljcm9zb2Z0IENvcnBvcmF0aW9uLiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKiBWZXJzaW9uOiAwLjUwLjAoYzMyMWQwZmJlY2I1MGFiOGE1MzY1ZmExOTY1NDc2YjBhZTYzZmM4NylcclxuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXHJcbiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9taWNyb3NvZnQvbW9uYWNvLWVkaXRvci9ibG9iL21haW4vTElDRU5TRS50eHRcclxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXHJcblxyXG5cclxuLy8gc3JjL2Jhc2ljLWxhbmd1YWdlcy9wYXNjYWxpZ28vcGFzY2FsaWdvLnRzXHJcbnZhciBjb25mID0ge1xyXG4gIGNvbW1lbnRzOiB7XHJcbiAgICBsaW5lQ29tbWVudDogXCIvL1wiLFxyXG4gICAgYmxvY2tDb21tZW50OiBbXCIoKlwiLCBcIiopXCJdXHJcbiAgfSxcclxuICBicmFja2V0czogW1xyXG4gICAgW1wie1wiLCBcIn1cIl0sXHJcbiAgICBbXCJbXCIsIFwiXVwiXSxcclxuICAgIFtcIihcIiwgXCIpXCJdLFxyXG4gICAgW1wiPFwiLCBcIj5cIl1cclxuICBdLFxyXG4gIGF1dG9DbG9zaW5nUGFpcnM6IFtcclxuICAgIHsgb3BlbjogXCJ7XCIsIGNsb3NlOiBcIn1cIiB9LFxyXG4gICAgeyBvcGVuOiBcIltcIiwgY2xvc2U6IFwiXVwiIH0sXHJcbiAgICB7IG9wZW46IFwiKFwiLCBjbG9zZTogXCIpXCIgfSxcclxuICAgIHsgb3BlbjogXCI8XCIsIGNsb3NlOiBcIj5cIiB9LFxyXG4gICAgeyBvcGVuOiBcIidcIiwgY2xvc2U6IFwiJ1wiIH1cclxuICBdLFxyXG4gIHN1cnJvdW5kaW5nUGFpcnM6IFtcclxuICAgIHsgb3BlbjogXCJ7XCIsIGNsb3NlOiBcIn1cIiB9LFxyXG4gICAgeyBvcGVuOiBcIltcIiwgY2xvc2U6IFwiXVwiIH0sXHJcbiAgICB7IG9wZW46IFwiKFwiLCBjbG9zZTogXCIpXCIgfSxcclxuICAgIHsgb3BlbjogXCI8XCIsIGNsb3NlOiBcIj5cIiB9LFxyXG4gICAgeyBvcGVuOiBcIidcIiwgY2xvc2U6IFwiJ1wiIH1cclxuICBdXHJcbn07XHJcbnZhciBsYW5ndWFnZSA9IHtcclxuICBkZWZhdWx0VG9rZW46IFwiXCIsXHJcbiAgdG9rZW5Qb3N0Zml4OiBcIi5wYXNjYWxpZ29cIixcclxuICBpZ25vcmVDYXNlOiB0cnVlLFxyXG4gIGJyYWNrZXRzOiBbXHJcbiAgICB7IG9wZW46IFwie1wiLCBjbG9zZTogXCJ9XCIsIHRva2VuOiBcImRlbGltaXRlci5jdXJseVwiIH0sXHJcbiAgICB7IG9wZW46IFwiW1wiLCBjbG9zZTogXCJdXCIsIHRva2VuOiBcImRlbGltaXRlci5zcXVhcmVcIiB9LFxyXG4gICAgeyBvcGVuOiBcIihcIiwgY2xvc2U6IFwiKVwiLCB0b2tlbjogXCJkZWxpbWl0ZXIucGFyZW50aGVzaXNcIiB9LFxyXG4gICAgeyBvcGVuOiBcIjxcIiwgY2xvc2U6IFwiPlwiLCB0b2tlbjogXCJkZWxpbWl0ZXIuYW5nbGVcIiB9XHJcbiAgXSxcclxuICBrZXl3b3JkczogW1xyXG4gICAgXCJiZWdpblwiLFxyXG4gICAgXCJibG9ja1wiLFxyXG4gICAgXCJjYXNlXCIsXHJcbiAgICBcImNvbnN0XCIsXHJcbiAgICBcImVsc2VcIixcclxuICAgIFwiZW5kXCIsXHJcbiAgICBcImZhaWxcIixcclxuICAgIFwiZm9yXCIsXHJcbiAgICBcImZyb21cIixcclxuICAgIFwiZnVuY3Rpb25cIixcclxuICAgIFwiaWZcIixcclxuICAgIFwiaXNcIixcclxuICAgIFwibmlsXCIsXHJcbiAgICBcIm9mXCIsXHJcbiAgICBcInJlbW92ZVwiLFxyXG4gICAgXCJyZXR1cm5cIixcclxuICAgIFwic2tpcFwiLFxyXG4gICAgXCJ0aGVuXCIsXHJcbiAgICBcInR5cGVcIixcclxuICAgIFwidmFyXCIsXHJcbiAgICBcIndoaWxlXCIsXHJcbiAgICBcIndpdGhcIixcclxuICAgIFwib3B0aW9uXCIsXHJcbiAgICBcIk5vbmVcIixcclxuICAgIFwidHJhbnNhY3Rpb25cIlxyXG4gIF0sXHJcbiAgdHlwZUtleXdvcmRzOiBbXHJcbiAgICBcImJvb2xcIixcclxuICAgIFwiaW50XCIsXHJcbiAgICBcImxpc3RcIixcclxuICAgIFwibWFwXCIsXHJcbiAgICBcIm5hdFwiLFxyXG4gICAgXCJyZWNvcmRcIixcclxuICAgIFwic3RyaW5nXCIsXHJcbiAgICBcInVuaXRcIixcclxuICAgIFwiYWRkcmVzc1wiLFxyXG4gICAgXCJtYXBcIixcclxuICAgIFwibXR6XCIsXHJcbiAgICBcInh0elwiXHJcbiAgXSxcclxuICBvcGVyYXRvcnM6IFtcclxuICAgIFwiPVwiLFxyXG4gICAgXCI+XCIsXHJcbiAgICBcIjxcIixcclxuICAgIFwiPD1cIixcclxuICAgIFwiPj1cIixcclxuICAgIFwiPD5cIixcclxuICAgIFwiOlwiLFxyXG4gICAgXCI6PVwiLFxyXG4gICAgXCJhbmRcIixcclxuICAgIFwibW9kXCIsXHJcbiAgICBcIm9yXCIsXHJcbiAgICBcIitcIixcclxuICAgIFwiLVwiLFxyXG4gICAgXCIqXCIsXHJcbiAgICBcIi9cIixcclxuICAgIFwiQFwiLFxyXG4gICAgXCImXCIsXHJcbiAgICBcIl5cIixcclxuICAgIFwiJVwiXHJcbiAgXSxcclxuICAvLyB3ZSBpbmNsdWRlIHRoZXNlIGNvbW1vbiByZWd1bGFyIGV4cHJlc3Npb25zXHJcbiAgc3ltYm9sczogL1s9Pjw6QFxcXiZ8K1xcLSpcXC9cXF4lXSsvLFxyXG4gIC8vIFRoZSBtYWluIHRva2VuaXplciBmb3Igb3VyIGxhbmd1YWdlc1xyXG4gIHRva2VuaXplcjoge1xyXG4gICAgcm9vdDogW1xyXG4gICAgICAvLyBpZGVudGlmaWVycyBhbmQga2V5d29yZHNcclxuICAgICAgW1xyXG4gICAgICAgIC9bYS16QS1aX11bXFx3XSovLFxyXG4gICAgICAgIHtcclxuICAgICAgICAgIGNhc2VzOiB7XHJcbiAgICAgICAgICAgIFwiQGtleXdvcmRzXCI6IHsgdG9rZW46IFwia2V5d29yZC4kMFwiIH0sXHJcbiAgICAgICAgICAgIFwiQGRlZmF1bHRcIjogXCJpZGVudGlmaWVyXCJcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIF0sXHJcbiAgICAgIC8vIHdoaXRlc3BhY2VcclxuICAgICAgeyBpbmNsdWRlOiBcIkB3aGl0ZXNwYWNlXCIgfSxcclxuICAgICAgLy8gZGVsaW1pdGVycyBhbmQgb3BlcmF0b3JzXHJcbiAgICAgIFsvW3t9KClcXFtcXF1dLywgXCJAYnJhY2tldHNcIl0sXHJcbiAgICAgIFsvWzw+XSg/IUBzeW1ib2xzKS8sIFwiQGJyYWNrZXRzXCJdLFxyXG4gICAgICBbXHJcbiAgICAgICAgL0BzeW1ib2xzLyxcclxuICAgICAgICB7XHJcbiAgICAgICAgICBjYXNlczoge1xyXG4gICAgICAgICAgICBcIkBvcGVyYXRvcnNcIjogXCJkZWxpbWl0ZXJcIixcclxuICAgICAgICAgICAgXCJAZGVmYXVsdFwiOiBcIlwiXHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICBdLFxyXG4gICAgICAvLyBudW1iZXJzXHJcbiAgICAgIFsvXFxkKlxcLlxcZCsoW2VFXVtcXC0rXT9cXGQrKT8vLCBcIm51bWJlci5mbG9hdFwiXSxcclxuICAgICAgWy9cXCRbMC05YS1mQS1GXXsxLDE2fS8sIFwibnVtYmVyLmhleFwiXSxcclxuICAgICAgWy9cXGQrLywgXCJudW1iZXJcIl0sXHJcbiAgICAgIC8vIGRlbGltaXRlcjogYWZ0ZXIgbnVtYmVyIGJlY2F1c2Ugb2YgLlxcZCBmbG9hdHNcclxuICAgICAgWy9bOywuXS8sIFwiZGVsaW1pdGVyXCJdLFxyXG4gICAgICAvLyBzdHJpbmdzXHJcbiAgICAgIFsvJyhbXidcXFxcXXxcXFxcLikqJC8sIFwic3RyaW5nLmludmFsaWRcIl0sXHJcbiAgICAgIC8vIG5vbi10ZW1pbmF0ZWQgc3RyaW5nXHJcbiAgICAgIFsvJy8sIFwic3RyaW5nXCIsIFwiQHN0cmluZ1wiXSxcclxuICAgICAgLy8gY2hhcmFjdGVyc1xyXG4gICAgICBbLydbXlxcXFwnXScvLCBcInN0cmluZ1wiXSxcclxuICAgICAgWy8nLywgXCJzdHJpbmcuaW52YWxpZFwiXSxcclxuICAgICAgWy9cXCNcXGQrLywgXCJzdHJpbmdcIl1cclxuICAgIF0sXHJcbiAgICAvKiAqL1xyXG4gICAgY29tbWVudDogW1xyXG4gICAgICBbL1teXFwoXFwqXSsvLCBcImNvbW1lbnRcIl0sXHJcbiAgICAgIC8vWy9cXChcXCovLCAgICAnY29tbWVudCcsICdAcHVzaCcgXSwgICAgLy8gbmVzdGVkIGNvbW1lbnQgIG5vdCBhbGxvd2VkIDotKFxyXG4gICAgICBbL1xcKlxcKS8sIFwiY29tbWVudFwiLCBcIkBwb3BcIl0sXHJcbiAgICAgIFsvXFwoXFwqLywgXCJjb21tZW50XCJdXHJcbiAgICBdLFxyXG4gICAgc3RyaW5nOiBbXHJcbiAgICAgIFsvW15cXFxcJ10rLywgXCJzdHJpbmdcIl0sXHJcbiAgICAgIFsvXFxcXC4vLCBcInN0cmluZy5lc2NhcGUuaW52YWxpZFwiXSxcclxuICAgICAgWy8nLywgeyB0b2tlbjogXCJzdHJpbmcucXVvdGVcIiwgYnJhY2tldDogXCJAY2xvc2VcIiwgbmV4dDogXCJAcG9wXCIgfV1cclxuICAgIF0sXHJcbiAgICB3aGl0ZXNwYWNlOiBbXHJcbiAgICAgIFsvWyBcXHRcXHJcXG5dKy8sIFwid2hpdGVcIl0sXHJcbiAgICAgIFsvXFwoXFwqLywgXCJjb21tZW50XCIsIFwiQGNvbW1lbnRcIl0sXHJcbiAgICAgIFsvXFwvXFwvLiokLywgXCJjb21tZW50XCJdXHJcbiAgICBdXHJcbiAgfVxyXG59O1xyXG5leHBvcnQge1xyXG4gIGNvbmYsXHJcbiAgbGFuZ3VhZ2VcclxufTtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/pascaligo/pascaligo.js\n");

/***/ })

}]);