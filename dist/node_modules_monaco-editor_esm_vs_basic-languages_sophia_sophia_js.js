"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_sophia_sophia_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/sophia/sophia.js":
/*!****************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/sophia/sophia.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n\r\n// src/basic-languages/sophia/sophia.ts\r\nvar conf = {\r\n  comments: {\r\n    lineComment: \"//\",\r\n    blockComment: [\"/*\", \"*/\"]\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"],\r\n    [\"<\", \">\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] },\r\n    { open: \"{\", close: \"}\", notIn: [\"string\", \"comment\"] },\r\n    { open: \"[\", close: \"]\", notIn: [\"string\", \"comment\"] },\r\n    { open: \"(\", close: \")\", notIn: [\"string\", \"comment\"] }\r\n  ]\r\n};\r\nvar language = {\r\n  defaultToken: \"\",\r\n  tokenPostfix: \".aes\",\r\n  brackets: [\r\n    { token: \"delimiter.curly\", open: \"{\", close: \"}\" },\r\n    { token: \"delimiter.parenthesis\", open: \"(\", close: \")\" },\r\n    { token: \"delimiter.square\", open: \"[\", close: \"]\" },\r\n    { token: \"delimiter.angle\", open: \"<\", close: \">\" }\r\n  ],\r\n  keywords: [\r\n    // Main keywords\r\n    \"contract\",\r\n    \"library\",\r\n    \"entrypoint\",\r\n    \"function\",\r\n    \"stateful\",\r\n    \"state\",\r\n    \"hash\",\r\n    \"signature\",\r\n    \"tuple\",\r\n    \"list\",\r\n    \"address\",\r\n    \"string\",\r\n    \"bool\",\r\n    \"int\",\r\n    \"record\",\r\n    \"datatype\",\r\n    \"type\",\r\n    \"option\",\r\n    \"oracle\",\r\n    \"oracle_query\",\r\n    \"Call\",\r\n    \"Bits\",\r\n    \"Bytes\",\r\n    \"Oracle\",\r\n    \"String\",\r\n    \"Crypto\",\r\n    \"Address\",\r\n    \"Auth\",\r\n    \"Chain\",\r\n    \"None\",\r\n    \"Some\",\r\n    \"bits\",\r\n    \"bytes\",\r\n    \"event\",\r\n    \"let\",\r\n    \"map\",\r\n    \"private\",\r\n    \"public\",\r\n    \"true\",\r\n    \"false\",\r\n    \"var\",\r\n    \"if\",\r\n    \"else\",\r\n    \"throw\"\r\n  ],\r\n  operators: [\r\n    \"=\",\r\n    \">\",\r\n    \"<\",\r\n    \"!\",\r\n    \"~\",\r\n    \"?\",\r\n    \"::\",\r\n    \":\",\r\n    \"==\",\r\n    \"<=\",\r\n    \">=\",\r\n    \"!=\",\r\n    \"&&\",\r\n    \"||\",\r\n    \"++\",\r\n    \"--\",\r\n    \"+\",\r\n    \"-\",\r\n    \"*\",\r\n    \"/\",\r\n    \"&\",\r\n    \"|\",\r\n    \"^\",\r\n    \"%\",\r\n    \"<<\",\r\n    \">>\",\r\n    \">>>\",\r\n    \"+=\",\r\n    \"-=\",\r\n    \"*=\",\r\n    \"/=\",\r\n    \"&=\",\r\n    \"|=\",\r\n    \"^=\",\r\n    \"%=\",\r\n    \"<<=\",\r\n    \">>=\",\r\n    \">>>=\"\r\n  ],\r\n  // we include these common regular expressions\r\n  symbols: /[=><!~?:&|+\\-*\\/\\^%]+/,\r\n  escapes: /\\\\(?:[abfnrtv\\\\\"']|x[0-9A-Fa-f]{1,4}|u[0-9A-Fa-f]{4}|U[0-9A-Fa-f]{8})/,\r\n  integersuffix: /(ll|LL|u|U|l|L)?(ll|LL|u|U|l|L)?/,\r\n  floatsuffix: /[fFlL]?/,\r\n  // The main tokenizer for our languages\r\n  tokenizer: {\r\n    root: [\r\n      // identifiers and keywords\r\n      [\r\n        /[a-zA-Z_]\\w*/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": { token: \"keyword.$0\" },\r\n            \"@default\": \"identifier\"\r\n          }\r\n        }\r\n      ],\r\n      // whitespace\r\n      { include: \"@whitespace\" },\r\n      // [[ attributes ]].\r\n      [/\\[\\[.*\\]\\]/, \"annotation\"],\r\n      // Preprocessor directive\r\n      [/^\\s*#\\w+/, \"keyword\"],\r\n      //DataTypes\r\n      [/int\\d*/, \"keyword\"],\r\n      // delimiters and operators\r\n      [/[{}()\\[\\]]/, \"@brackets\"],\r\n      [/[<>](?!@symbols)/, \"@brackets\"],\r\n      [\r\n        /@symbols/,\r\n        {\r\n          cases: {\r\n            \"@operators\": \"delimiter\",\r\n            \"@default\": \"\"\r\n          }\r\n        }\r\n      ],\r\n      // numbers\r\n      [/\\d*\\d+[eE]([\\-+]?\\d+)?(@floatsuffix)/, \"number.float\"],\r\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?(@floatsuffix)/, \"number.float\"],\r\n      [/0[xX][0-9a-fA-F']*[0-9a-fA-F](@integersuffix)/, \"number.hex\"],\r\n      [/0[0-7']*[0-7](@integersuffix)/, \"number.octal\"],\r\n      [/0[bB][0-1']*[0-1](@integersuffix)/, \"number.binary\"],\r\n      [/\\d[\\d']*\\d(@integersuffix)/, \"number\"],\r\n      [/\\d(@integersuffix)/, \"number\"],\r\n      // delimiter: after number because of .\\d floats\r\n      [/[;,.]/, \"delimiter\"],\r\n      // strings\r\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      // non-teminated string\r\n      [/\"/, \"string\", \"@string\"],\r\n      // characters\r\n      [/'[^\\\\']'/, \"string\"],\r\n      [/(')(@escapes)(')/, [\"string\", \"string.escape\", \"string\"]],\r\n      [/'/, \"string.invalid\"]\r\n    ],\r\n    whitespace: [\r\n      [/[ \\t\\r\\n]+/, \"\"],\r\n      [/\\/\\*\\*(?!\\/)/, \"comment.doc\", \"@doccomment\"],\r\n      [/\\/\\*/, \"comment\", \"@comment\"],\r\n      [/\\/\\/.*$/, \"comment\"]\r\n    ],\r\n    comment: [\r\n      [/[^\\/*]+/, \"comment\"],\r\n      [/\\*\\//, \"comment\", \"@pop\"],\r\n      [/[\\/*]/, \"comment\"]\r\n    ],\r\n    //Identical copy of comment above, except for the addition of .doc\r\n    doccomment: [\r\n      [/[^\\/*]+/, \"comment.doc\"],\r\n      [/\\*\\//, \"comment.doc\", \"@pop\"],\r\n      [/[\\/*]/, \"comment.doc\"]\r\n    ],\r\n    string: [\r\n      [/[^\\\\\"]+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [/\"/, \"string\", \"@pop\"]\r\n    ]\r\n  }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/sophia/sophia.js\n");

/***/ })

}]);