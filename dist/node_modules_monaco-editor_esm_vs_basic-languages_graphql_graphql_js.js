"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["node_modules_monaco-editor_esm_vs_basic-languages_graphql_graphql_js"],{

/***/ "./node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.js":
/*!******************************************************************************!*\
  !*** ./node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   conf: () => (/* binding */ conf),\n/* harmony export */   language: () => (/* binding */ language)\n/* harmony export */ });\n/*!-----------------------------------------------------------------------------\r\n * Copyright (c) Microsoft Corporation. All rights reserved.\r\n * Version: 0.50.0(c321d0fbecb50ab8a5365fa1965476b0ae63fc87)\r\n * Released under the MIT license\r\n * https://github.com/microsoft/monaco-editor/blob/main/LICENSE.txt\r\n *-----------------------------------------------------------------------------*/\r\n\r\n\r\n// src/basic-languages/graphql/graphql.ts\r\nvar conf = {\r\n  comments: {\r\n    lineComment: \"#\"\r\n  },\r\n  brackets: [\r\n    [\"{\", \"}\"],\r\n    [\"[\", \"]\"],\r\n    [\"(\", \")\"]\r\n  ],\r\n  autoClosingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"\"\"', close: '\"\"\"', notIn: [\"string\", \"comment\"] },\r\n    { open: '\"', close: '\"', notIn: [\"string\", \"comment\"] }\r\n  ],\r\n  surroundingPairs: [\r\n    { open: \"{\", close: \"}\" },\r\n    { open: \"[\", close: \"]\" },\r\n    { open: \"(\", close: \")\" },\r\n    { open: '\"\"\"', close: '\"\"\"' },\r\n    { open: '\"', close: '\"' }\r\n  ],\r\n  folding: {\r\n    offSide: true\r\n  }\r\n};\r\nvar language = {\r\n  // Set defaultToken to invalid to see what you do not tokenize yet\r\n  defaultToken: \"invalid\",\r\n  tokenPostfix: \".gql\",\r\n  keywords: [\r\n    \"null\",\r\n    \"true\",\r\n    \"false\",\r\n    \"query\",\r\n    \"mutation\",\r\n    \"subscription\",\r\n    \"extend\",\r\n    \"schema\",\r\n    \"directive\",\r\n    \"scalar\",\r\n    \"type\",\r\n    \"interface\",\r\n    \"union\",\r\n    \"enum\",\r\n    \"input\",\r\n    \"implements\",\r\n    \"fragment\",\r\n    \"on\"\r\n  ],\r\n  typeKeywords: [\"Int\", \"Float\", \"String\", \"Boolean\", \"ID\"],\r\n  directiveLocations: [\r\n    \"SCHEMA\",\r\n    \"SCALAR\",\r\n    \"OBJECT\",\r\n    \"FIELD_DEFINITION\",\r\n    \"ARGUMENT_DEFINITION\",\r\n    \"INTERFACE\",\r\n    \"UNION\",\r\n    \"ENUM\",\r\n    \"ENUM_VALUE\",\r\n    \"INPUT_OBJECT\",\r\n    \"INPUT_FIELD_DEFINITION\",\r\n    \"QUERY\",\r\n    \"MUTATION\",\r\n    \"SUBSCRIPTION\",\r\n    \"FIELD\",\r\n    \"FRAGMENT_DEFINITION\",\r\n    \"FRAGMENT_SPREAD\",\r\n    \"INLINE_FRAGMENT\",\r\n    \"VARIABLE_DEFINITION\"\r\n  ],\r\n  operators: [\"=\", \"!\", \"?\", \":\", \"&\", \"|\"],\r\n  // we include these common regular expressions\r\n  symbols: /[=!?:&|]+/,\r\n  // https://facebook.github.io/graphql/draft/#sec-String-Value\r\n  escapes: /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9A-Fa-f]{4})/,\r\n  // The main tokenizer for our languages\r\n  tokenizer: {\r\n    root: [\r\n      // fields and argument names\r\n      [\r\n        /[a-z_][\\w$]*/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": \"keyword\",\r\n            \"@default\": \"key.identifier\"\r\n          }\r\n        }\r\n      ],\r\n      // identify typed input variables\r\n      [\r\n        /[$][\\w$]*/,\r\n        {\r\n          cases: {\r\n            \"@keywords\": \"keyword\",\r\n            \"@default\": \"argument.identifier\"\r\n          }\r\n        }\r\n      ],\r\n      // to show class names nicely\r\n      [\r\n        /[A-Z][\\w\\$]*/,\r\n        {\r\n          cases: {\r\n            \"@typeKeywords\": \"keyword\",\r\n            \"@default\": \"type.identifier\"\r\n          }\r\n        }\r\n      ],\r\n      // whitespace\r\n      { include: \"@whitespace\" },\r\n      // delimiters and operators\r\n      [/[{}()\\[\\]]/, \"@brackets\"],\r\n      [/@symbols/, { cases: { \"@operators\": \"operator\", \"@default\": \"\" } }],\r\n      // @ annotations.\r\n      // As an example, we emit a debugging log message on these tokens.\r\n      // Note: message are supressed during the first load -- change some lines to see them.\r\n      [/@\\s*[a-zA-Z_\\$][\\w\\$]*/, { token: \"annotation\", log: \"annotation token: $0\" }],\r\n      // numbers\r\n      [/\\d*\\.\\d+([eE][\\-+]?\\d+)?/, \"number.float\"],\r\n      [/0[xX][0-9a-fA-F]+/, \"number.hex\"],\r\n      [/\\d+/, \"number\"],\r\n      // delimiter: after number because of .\\d floats\r\n      [/[;,.]/, \"delimiter\"],\r\n      [/\"\"\"/, { token: \"string\", next: \"@mlstring\", nextEmbedded: \"markdown\" }],\r\n      // strings\r\n      [/\"([^\"\\\\]|\\\\.)*$/, \"string.invalid\"],\r\n      // non-teminated string\r\n      [/\"/, { token: \"string.quote\", bracket: \"@open\", next: \"@string\" }]\r\n    ],\r\n    mlstring: [\r\n      [/[^\"]+/, \"string\"],\r\n      ['\"\"\"', { token: \"string\", next: \"@pop\", nextEmbedded: \"@pop\" }]\r\n    ],\r\n    string: [\r\n      [/[^\\\\\"]+/, \"string\"],\r\n      [/@escapes/, \"string.escape\"],\r\n      [/\\\\./, \"string.escape.invalid\"],\r\n      [/\"/, { token: \"string.quote\", bracket: \"@close\", next: \"@pop\" }]\r\n    ],\r\n    whitespace: [\r\n      [/[ \\t\\r\\n]+/, \"\"],\r\n      [/#.*$/, \"comment\"]\r\n    ]\r\n  }\r\n};\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/monaco-editor/esm/vs/basic-languages/graphql/graphql.js\n");

/***/ })

}]);